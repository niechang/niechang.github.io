



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>evernote-sdk-js/evernote-sdk-minified.js at master Â· evernote/evernote-sdk-js</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="evernote/evernote-sdk-js" name="twitter:title" /><meta content="evernote-sdk-js - Evernote SDK for JavaScript" name="twitter:description" /><meta content="https://avatars1.githubusercontent.com/u/1120885?v=3&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars1.githubusercontent.com/u/1120885?v=3&amp;s=400" property="og:image" /><meta content="evernote/evernote-sdk-js" property="og:title" /><meta content="https://github.com/evernote/evernote-sdk-js" property="og:url" /><meta content="evernote-sdk-js - Evernote SDK for JavaScript" property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="7AE1E0DA:5D10:EBC34C:5486C56C" name="octolytics-dimension-request_id" /><meta content="2278081" name="octolytics-actor-id" /><meta content="niechang" name="octolytics-actor-login" /><meta content="1c0f4dd94c49297cd84c2985f957943ec552cbb16246ce5f780b069b1231b974" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="wU6xoD9WN8BdNvFMVAHPr6yEKXMDzGLYKD4cOFjFanziS7uuHAZ7/w+lRhznUynwCdXFWZgQ1RQWAGcpsWDkvA==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-2a88a7bf0ff1b660d7ff29c3220a68751650b37fc53d40d3a7068e835fd213ec.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-ee4170e0122d252766e3edc8c97b6cc6ae381c974013b5047ed5ad8895c56fe0.css" media="all" rel="stylesheet" type="text/css" />
    
    


    <meta http-equiv="x-pjax-version" content="55456003a7363a3c7933fb557293a9bb">

      
  <meta name="description" content="evernote-sdk-js - Evernote SDK for JavaScript">
  <meta name="go-import" content="github.com/evernote/evernote-sdk-js git https://github.com/evernote/evernote-sdk-js.git">

  <meta content="1120885" name="octolytics-dimension-user_id" /><meta content="evernote" name="octolytics-dimension-user_login" /><meta content="8466088" name="octolytics-dimension-repository_id" /><meta content="evernote/evernote-sdk-js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8466088" name="octolytics-dimension-repository_network_root_id" /><meta content="evernote/evernote-sdk-js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/evernote/evernote-sdk-js/commits/master.atom" rel="alternate" title="Recent Commits to evernote-sdk-js:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/evernote/evernote-sdk-js/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/evernote/evernote-sdk-js/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/niechang" data-ga-click="Header, go to profile, text:username">
      <img alt="niechang" class="avatar" data-user="2278081" height="20" src="https://avatars3.githubusercontent.com/u/2278081?v=3&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">niechang</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="evernote/evernote-sdk-js">This repository</span>
    </li>
      <li>
        <a href="/evernote/evernote-sdk-js/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
        <span class="mail-status unread"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="SiVZn00yp+EH0yeFvKIk3H+IEU6BWAMnO8cV0anesQJvN2Oxf5zmme310D96m7h1Rpg/YY4vKbyO5LkHuhcyJQ==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="MwL1YqG+WpGO1HezMv5PlULI2SBRGqnFHtTOSW/1CyNBYQbrp7quHLmrbmL9U8p0oHCDKNubJ49hosIpQrxPFA==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="8466088" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/evernote/evernote-sdk-js/watchers">
        49
      </a>
      <a href="/evernote/evernote-sdk-js/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/evernote/evernote-sdk-js/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="ENIoya2G/fAK6/iMUmwv5cUiT2T2nBW7rfPuVVMYUIH6Oinuos7mWFNM/ofLrD2JNAFXI9LZZCwJGHmGNIPOig==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar evernote/evernote-sdk-js">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/evernote/evernote-sdk-js/stargazers">
          200
        </a>
</form>
    <form accept-charset="UTF-8" action="/evernote/evernote-sdk-js/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="nufKlGegBXeTMY+eXNA6j91oAh3+cQT8os7cE050PsdIoptSLUSFTA8BEUM22aIZTIynrRKrmoyIfCrMWtTOoQ==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star evernote/evernote-sdk-js">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/evernote/evernote-sdk-js/stargazers">
          200
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/evernote/evernote-sdk-js/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of evernote/evernote-sdk-js to your account" aria-label="Fork your own copy of evernote/evernote-sdk-js to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/evernote/evernote-sdk-js/network" class="social-count">80</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/evernote" class="url fn" itemprop="url" rel="author"><span itemprop="title">evernote</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/evernote/evernote-sdk-js" class="js-current-repository" data-pjax="#js-repo-pjax-container">evernote-sdk-js</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/evernote/evernote-sdk-js/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/evernote/evernote-sdk-js" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /evernote/evernote-sdk-js">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/evernote/evernote-sdk-js/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /evernote/evernote-sdk-js/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/evernote/evernote-sdk-js/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /evernote/evernote-sdk-js/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>


      <li class="tooltipped tooltipped-w" aria-label="Wiki">
        <a href="/evernote/evernote-sdk-js/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-selected-links="repo_wiki /evernote/evernote-sdk-js/wiki">
          <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/evernote/evernote-sdk-js/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /evernote/evernote-sdk-js/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/evernote/evernote-sdk-js/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /evernote/evernote-sdk-js/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/evernote/evernote-sdk-js.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="git@github.com:evernote/evernote-sdk-js.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/evernote/evernote-sdk-js" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<p class="clone-options">You can clone with
  <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>, <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>, or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="github-windows://openRepo/https://github.com/evernote/evernote-sdk-js" class="minibutton sidebar-button" title="Save evernote/evernote-sdk-js to your computer and use it in GitHub Desktop." aria-label="Save evernote/evernote-sdk-js to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/evernote/evernote-sdk-js/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of evernote/evernote-sdk-js as a zip file"
                   title="Download the contents of evernote/evernote-sdk-js as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/evernote/evernote-sdk-js/blob/5a366bf7c1cd10712f4cf12280b8a08fbd5f83b5/evernote-sdk-js/production/evernote-sdk-minified.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:09021a55009a17965e31775cbbf21350 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/blob/0.0.4/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="0.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.0.4">0.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/blob/1.25.1/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="1.25.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.25.1">1.25.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/blob/1.25.2/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="1.25.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.25.2">1.25.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/blob/dev/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="dev"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="dev">dev</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/blob/master/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/blob/node/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="node"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="node">node</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/1.25.3/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="1.25.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.25.3">1.25.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/1.25.2/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="1.25.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.25.2">1.25.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/1.25.1/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="1.25.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.25.1">1.25.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/1.25.0/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="1.25.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.25.0">1.25.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/0.0.5/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="0.0.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.0.5">0.0.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/0.0.4/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="0.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.0.4">0.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/0.0.3/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="0.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.0.3">0.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/0.0.2/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="0.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.0.2">0.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/evernote/evernote-sdk-js/tree/0.0.1/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-name="0.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.0.1">0.0.1</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/evernote/evernote-sdk-js/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/evernote/evernote-sdk-js" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">evernote-sdk-js</span></a></span></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/evernote/evernote-sdk-js/tree/master/evernote-sdk-js" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">evernote-sdk-js</span></a></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/evernote/evernote-sdk-js/tree/master/evernote-sdk-js/production" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">production</span></a></span><span class="separator">/</span><strong class="final-path">evernote-sdk-minified.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="" class="avatar" height="24" src="https://0.gravatar.com/avatar/cadf8b9044ddb93368707086656fd41a?d=https%3A%2F%2Fassets-cdn.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png&amp;r=x&amp;s=140" width="24" />
        <span class="author"><span>mustafa</span></span>
        <time datetime="2013-06-12T18:40:43Z" is="relative-time">Jun 12, 2013</time>
        <div class="commit-title">
            <a href="/evernote/evernote-sdk-js/commit/4313e1055d97d0e1b5c58909386241e5b358b8f8" class="message" data-pjax="true" title="updating to API 1.25

   * Added RelatedQuery.referenceUri
   * New system exceptions thrown by getPublicNotebook and
authenticateToSharedNote when the target content has been taken down.
   * Added SharedNotebook.recipientSettings,
NoteStore.setSharedNotebookRecipientSettings
   * Added optional authenticationToken parameter to
NoteStore.authenticateToSharedNote, only needed for YXBJ
   * Added creatorId and lastEditorId fields to NoteAttributes
   * Added two factor authentication functionality to
UserStore.authenticate and authenticateLongSession, added
UserStore.completeTwoFactorAuthentication.">updating to API 1.25</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>0</strong>
           contributors
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>1382 lines (1381 sloc)</span>
          <span class="meta-divider"></span>
        <span>557.466 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/evernote/evernote-sdk-js/raw/master/evernote-sdk-js/production/evernote-sdk-minified.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/evernote/evernote-sdk-js/blame/master/evernote-sdk-js/production/evernote-sdk-minified.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/evernote/evernote-sdk-js/commits/master/evernote-sdk-js/production/evernote-sdk-minified.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="github-windows://openRepo/https://github.com/evernote/evernote-sdk-js?branch=master&amp;filepath=evernote-sdk-js%2Fproduction%2Fevernote-sdk-minified.js" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/evernote/evernote-sdk-js/edit/master/evernote-sdk-js/production/evernote-sdk-minified.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/evernote/evernote-sdk-js/delete/master/evernote-sdk-js/production/evernote-sdk-minified.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    

  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="pl-s">var</span> Thrift<span class="pl-k">=</span>{Version<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>0.9.0<span class="pl-pds">&quot;</span></span>,Type<span class="pl-k">:</span>{STOP<span class="pl-k">:</span><span class="pl-c1">0</span>,VOID<span class="pl-k">:</span><span class="pl-c1">1</span>,BOOL<span class="pl-k">:</span><span class="pl-c1">2</span>,BYTE<span class="pl-k">:</span><span class="pl-c1">3</span>,I08<span class="pl-k">:</span><span class="pl-c1">3</span>,DOUBLE<span class="pl-k">:</span><span class="pl-c1">4</span>,I16<span class="pl-k">:</span><span class="pl-c1">6</span>,I32<span class="pl-k">:</span><span class="pl-c1">8</span>,I64<span class="pl-k">:</span><span class="pl-c1">10</span>,STRING<span class="pl-k">:</span><span class="pl-c1">11</span>,UTF7<span class="pl-k">:</span><span class="pl-c1">11</span>,STRUCT<span class="pl-k">:</span><span class="pl-c1">12</span>,MAP<span class="pl-k">:</span><span class="pl-c1">13</span>,SET<span class="pl-k">:</span><span class="pl-c1">14</span>,LIST<span class="pl-k">:</span><span class="pl-c1">15</span>,UTF8<span class="pl-k">:</span><span class="pl-c1">16</span>,UTF16<span class="pl-k">:</span><span class="pl-c1">17</span>},MessageType<span class="pl-k">:</span>{CALL<span class="pl-k">:</span><span class="pl-c1">1</span>,REPLY<span class="pl-k">:</span><span class="pl-c1">2</span>,EXCEPTION<span class="pl-k">:</span><span class="pl-c1">3</span>},<span class="pl-en">objectLength</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,b;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)a.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">++</span>;<span class="pl-k">return</span> c},<span class="pl-en">inherits</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-st">function</span> <span class="pl-en">b</span>(){}<span class="pl-s3">b</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>c.<span class="pl-sc">prototype</span>;<span class="pl-s3">a</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>},<span class="pl-en">TException</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.message<span class="pl-k">=</span>a}};Thrift.inherits(Thrift.TException,Error);<span class="pl-s3">Thrift.TException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">name</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>TException<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line">Thrift.TApplicationExceptionType<span class="pl-k">=</span>{UNKNOWN<span class="pl-k">:</span><span class="pl-c1">0</span>,UNKNOWN_METHOD<span class="pl-k">:</span><span class="pl-c1">1</span>,INVALID_MESSAGE_TYPE<span class="pl-k">:</span><span class="pl-c1">2</span>,WRONG_METHOD_NAME<span class="pl-k">:</span><span class="pl-c1">3</span>,BAD_SEQUENCE_ID<span class="pl-k">:</span><span class="pl-c1">4</span>,MISSING_RESULT<span class="pl-k">:</span><span class="pl-c1">5</span>,INTERNAL_ERROR<span class="pl-k">:</span><span class="pl-c1">6</span>,PROTOCOL_ERROR<span class="pl-k">:</span><span class="pl-c1">7</span>};<span class="pl-s3">Thrift</span>.<span class="pl-en">TApplicationException</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.message<span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-sc">code</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c};Thrift.inherits(Thrift.TApplicationException,Thrift.TException);<span class="pl-s3">Thrift.TApplicationException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">name</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>TApplicationException<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="pl-s3">Thrift.TApplicationException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(;;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin();<span class="pl-k">if</span>(c.ftype<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>c.ftype<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span>(c<span class="pl-k">=</span>a.readString(),<span class="pl-v">this</span>.message<span class="pl-k">=</span>c.<span class="pl-sc">value</span>)<span class="pl-k">:</span>a.skip(c.ftype);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>c.ftype<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span>(c<span class="pl-k">=</span>a.readI32(),<span class="pl-v">this</span>.<span class="pl-sc">code</span><span class="pl-k">=</span>c.<span class="pl-sc">value</span>)<span class="pl-k">:</span>a.skip(c.ftype);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(c.ftype)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="pl-s3">Thrift.TApplicationException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>TApplicationException<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.message<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>message<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.getMessage()),a.writeFieldEnd());<span class="pl-v">this</span>.<span class="pl-sc">code</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>type<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.<span class="pl-sc">code</span>),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-s3">Thrift.TApplicationException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getCode</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">code</span>};<span class="pl-s3">Thrift.TApplicationException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getMessage</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.message};</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="pl-s3">Thrift</span>.<span class="pl-en">Transport</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.url<span class="pl-k">=</span>a;<span class="pl-v">this</span>.rpos<span class="pl-k">=</span><span class="pl-v">this</span>.wpos<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.recv_buf<span class="pl-k">=</span><span class="pl-v">this</span>.send_buf<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="pl-s3">Thrift.Transport</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">getXmlHttpRequestObject</span>:<span class="pl-st">function</span>(){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>}<span class="pl-k">catch</span>(a){}<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ActiveXObject</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Msxml2.XMLHTTP<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(c){}<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ActiveXObject</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Microsoft.XMLHTTP<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(b){}<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Your browser doesn&#39;t support the XmlHttpRequest object.<span class="pl-pds">&quot;</span></span>;},<span class="pl-en">flush</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">||void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-v">this</span>.url<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-v">this</span>.url)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_buf;a<span class="pl-k">=</span><span class="pl-v">this</span>.getXmlHttpRequestObject();a.overrideMimeType<span class="pl-k">&amp;&amp;</span>a.overrideMimeType(<span class="pl-s1"><span class="pl-pds">&quot;</span>application/json<span class="pl-pds">&quot;</span></span>);a.<span class="pl-s3">open</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>POST<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.url,<span class="pl-k">!</span><span class="pl-c1">1</span>);a.<span class="pl-s3">setRequestHeader</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Content-Type<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>application/json<span class="pl-pds">&quot;</span></span>);a.<span class="pl-s3">send</span>(<span class="pl-v">this</span>.send_buf);<span class="pl-k">if</span>(<span class="pl-c1">4</span><span class="pl-k">!=</span>a.<span class="pl-sc">readyState</span>)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>encountered an unknown ajax ready state: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-sc">readyState</span>;<span class="pl-k">if</span>(<span class="pl-c1">200</span><span class="pl-k">!=</span>a.<span class="pl-sc">status</span>)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>encountered a unknown request status: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a.<span class="pl-sc">status</span>;<span class="pl-v">this</span>.recv_buf<span class="pl-k">=</span>a.<span class="pl-sc">responseText</span>;<span class="pl-v">this</span>.wpos<span class="pl-k">=</span><span class="pl-v">this</span>.recv_buf_sz<span class="pl-k">=</span><span class="pl-v">this</span>.recv_buf.<span class="pl-sc">length</span>;<span class="pl-v">this</span>.rpos<span class="pl-k">=</span><span class="pl-c1">0</span>},<span class="pl-en">send</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> jQuery<span class="pl-k">||</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> jQuery.Deferred)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Thrift.js requires jQuery 1.5+ to use asynchronous requests<span class="pl-pds">&quot;</span></span>;<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-k">return</span> jQuery.ajax({url<span class="pl-k">:</span><span class="pl-v">this</span>.url,data<span class="pl-k">:</span>c,type<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span>POST<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line">cache<span class="pl-k">:!</span><span class="pl-c1">1</span>,dataType<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-en">text thrift&quot;,converters:{&quot;text thrift</span><span class="pl-pds">&quot;</span></span>:<span class="pl-st">function</span>(<span class="pl-vpf">b</span>){e.setRecvBuffer(b);<span class="pl-k">return</span> d.<span class="pl-s3">call</span>(a)}},context<span class="pl-k">:</span>a,success<span class="pl-k">:</span>jQuery.makeArray(b).<span class="pl-s3">pop</span>()})},<span class="pl-en">setRecvBuffer</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.recv_buf<span class="pl-k">=</span>a;<span class="pl-v">this</span>.wpos<span class="pl-k">=</span><span class="pl-v">this</span>.recv_buf_sz<span class="pl-k">=</span><span class="pl-v">this</span>.recv_buf.<span class="pl-sc">length</span>;<span class="pl-v">this</span>.rpos<span class="pl-k">=</span><span class="pl-c1">0</span>},<span class="pl-en">isOpen</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">open</span>:<span class="pl-st">function</span>(){},<span class="pl-en">close</span>:<span class="pl-st">function</span>(){},<span class="pl-en">read</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.wpos<span class="pl-k">-</span><span class="pl-v">this</span>.rpos;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-s">var</span> b<span class="pl-k">=</span>a;c<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>c);a<span class="pl-k">=</span><span class="pl-v">this</span>.read_buf.<span class="pl-s3">substr</span>(<span class="pl-v">this</span>.rpos,b);<span class="pl-v">this</span>.rpos<span class="pl-k">+=</span>b;<span class="pl-k">return</span> a},<span class="pl-en">readAll</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.recv_buf},</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="pl-en">write</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.send_buf<span class="pl-k">=</span>a},<span class="pl-en">getSendBuffer</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.send_buf}};<span class="pl-s3">Thrift</span>.<span class="pl-en">Protocol</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.transport<span class="pl-k">=</span>a};Thrift.Protocol.Type<span class="pl-k">=</span>{};Thrift.Protocol.Type[Thrift.Type.BOOL]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;tf&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.BYTE]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;i8&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.I16]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;i16&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.I32]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;i32&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.I64]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;i64&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.DOUBLE]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;dbl&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.STRUCT]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;rec&quot;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line">Thrift.Protocol.Type[Thrift.Type.STRING]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;str&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.MAP]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;map&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.LIST]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;lst&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.Type[Thrift.Type.SET]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;set&quot;<span class="pl-pds">&#39;</span></span>;Thrift.Protocol.RType<span class="pl-k">=</span>{};Thrift.Protocol.RType.tf<span class="pl-k">=</span>Thrift.Type.BOOL;Thrift.Protocol.RType.i8<span class="pl-k">=</span>Thrift.Type.BYTE;Thrift.Protocol.RType.i16<span class="pl-k">=</span>Thrift.Type.I16;Thrift.Protocol.RType.i32<span class="pl-k">=</span>Thrift.Type.I32;Thrift.Protocol.RType.i64<span class="pl-k">=</span>Thrift.Type.I64;Thrift.Protocol.RType.dbl<span class="pl-k">=</span>Thrift.Type.DOUBLE;Thrift.Protocol.RType.rec<span class="pl-k">=</span>Thrift.Type.STRUCT;</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line">Thrift.Protocol.RType.str<span class="pl-k">=</span>Thrift.Type.STRING;Thrift.Protocol.RType.map<span class="pl-k">=</span>Thrift.Type.MAP;Thrift.Protocol.RType.lst<span class="pl-k">=</span>Thrift.Type.LIST;Thrift.Protocol.RType.set<span class="pl-k">=</span>Thrift.Type.SET;Thrift.Protocol.Version<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="pl-s3">Thrift.Protocol</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{<span class="pl-en">getTransport</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.transport},<span class="pl-en">writeMessageBegin</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.tstack<span class="pl-k">=</span>[];<span class="pl-v">this</span>.tpos<span class="pl-k">=</span>[];<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>([Thrift.Protocol.Version,<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,c,b])},<span class="pl-en">writeMessageEnd</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">pop</span>();<span class="pl-v">this</span>.wobj<span class="pl-k">=</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">pop</span>();<span class="pl-v">this</span>.wobj.<span class="pl-s3">push</span>(a);<span class="pl-v">this</span>.wbuf<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.wobj.<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.transport.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.wbuf)},<span class="pl-en">writeStructBegin</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.tpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>({})},<span class="pl-en">writeStructEnd</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.tpos.<span class="pl-s3">pop</span>(),c<span class="pl-k">=</span><span class="pl-v">this</span>.tstack[a],</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line">b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=!</span><span class="pl-c1">0</span>,e;<span class="pl-k">for</span>(e <span class="pl-k">in</span> c)d<span class="pl-k">?</span>d<span class="pl-k">=!</span><span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">+=</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c[e];<span class="pl-v">this</span>.tstack[a]<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>},<span class="pl-en">writeFieldBegin</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.tpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>({fieldId<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,fieldType<span class="pl-k">:</span>Thrift.Protocol.Type[c]})},<span class="pl-en">writeFieldEnd</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">pop</span>(),c<span class="pl-k">=</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">pop</span>();<span class="pl-v">this</span>.tstack[<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][c.fieldId]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c.fieldType<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.tpos.<span class="pl-s3">pop</span>()},<span class="pl-en">writeFieldStop</span>:<span class="pl-st">function</span>(){},<span class="pl-en">writeMapBegin</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.tpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>([Thrift.Protocol.Type[a],</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line">Thrift.Protocol.Type[c],<span class="pl-c1">0</span>])},<span class="pl-en">writeMapEnd</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.tpos.<span class="pl-s3">pop</span>();<span class="pl-k">if</span>(a<span class="pl-k">!=</span><span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span>){<span class="pl-c1">0</span><span class="pl-k">!==</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span><span class="pl-k">-</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.tstack[a][<span class="pl-v">this</span>.tstack[a].<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span><span class="pl-k">-</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>)/<span class="pl-c1">2</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>;){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">pop</span>(),e<span class="pl-k">=</span><span class="pl-v">this</span>.tstack.<span class="pl-s3">pop</span>();b<span class="pl-k">?</span>b<span class="pl-k">=!</span><span class="pl-c1">1</span><span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c;<span class="pl-s3">isNaN</span>(e)<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>);c<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span>c}<span class="pl-v">this</span>.tstack[a].<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c);<span class="pl-v">this</span>.tstack[a]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.tstack[a].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>}},<span class="pl-en">writeListBegin</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.tpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>([Thrift.Protocol.Type[a],</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line">c])},<span class="pl-en">writeListEnd</span>:<span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.tpos.<span class="pl-s3">pop</span>();<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>;){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.tstack[a<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-v">this</span>.tstack.<span class="pl-s3">splice</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.tstack[a].<span class="pl-s3">push</span>(c)}<span class="pl-v">this</span>.tstack[a]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.tstack[a].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>},<span class="pl-en">writeSetBegin</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.tpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>([Thrift.Protocol.Type[a],c])},<span class="pl-en">writeSetEnd</span>:<span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.tpos.<span class="pl-s3">pop</span>();<span class="pl-v">this</span>.tstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>;){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.tstack[a<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-v">this</span>.tstack.<span class="pl-s3">splice</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.tstack[a].<span class="pl-s3">push</span>(c)}<span class="pl-v">this</span>.tstack[a]<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.tstack[a].<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="pl-s1"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>},<span class="pl-en">writeBool</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)},<span class="pl-en">writeByte</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(a)},<span class="pl-en">writeI16</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(a)},<span class="pl-en">writeI32</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(a)},<span class="pl-en">writeI64</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(a)},<span class="pl-en">writeDouble</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(a)},<span class="pl-en">writeString</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>a)<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(<span class="pl-c1">null</span>);<span class="pl-k">else</span>{<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;b<span class="pl-k">++</span>)<span class="pl-s">var</span> d<span class="pl-k">=</span>a.<span class="pl-s3">charAt</span>(b),c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\b</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\f</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d<span class="pl-k">?</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line">c<span class="pl-k">+</span>d;<span class="pl-v">this</span>.tstack.<span class="pl-s3">push</span>(<span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>)}},<span class="pl-en">writeBinary</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.writeString(a)},<span class="pl-en">readMessageBegin</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.rstack<span class="pl-k">=</span>[];<span class="pl-v">this</span>.rpos<span class="pl-k">=</span>[];<span class="pl-v">this</span>.robj<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> jQuery<span class="pl-k">?</span>jQuery.parseJSON(<span class="pl-v">this</span>.transport.readAll())<span class="pl-k">:</span><span class="pl-s3">eval</span>(<span class="pl-v">this</span>.transport.readAll());<span class="pl-s">var</span> a<span class="pl-k">=</span>{},c<span class="pl-k">=</span><span class="pl-v">this</span>.robj.<span class="pl-s3">shift</span>();<span class="pl-k">if</span>(c<span class="pl-k">!=</span>Thrift.Protocol.Version)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Wrong thrift protocol version: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c;a.fname<span class="pl-k">=</span><span class="pl-v">this</span>.robj.<span class="pl-s3">shift</span>();a.mtype<span class="pl-k">=</span><span class="pl-v">this</span>.robj.<span class="pl-s3">shift</span>();a.rseqid<span class="pl-k">=</span><span class="pl-v">this</span>.robj.<span class="pl-s3">shift</span>();<span class="pl-v">this</span>.rstack.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.robj.<span class="pl-s3">shift</span>());<span class="pl-k">return</span> a},<span class="pl-en">readMessageEnd</span>:<span class="pl-st">function</span>(){},<span class="pl-en">readStructBegin</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line"><span class="pl-c1">1</span>]<span class="pl-k">instanceof</span> <span class="pl-s3">Array</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.rstack.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-s3">shift</span>());<span class="pl-k">return</span>{fname<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}},<span class="pl-en">readStructEnd</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>]<span class="pl-k">instanceof</span> <span class="pl-s3">Array</span><span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.rstack.<span class="pl-s3">pop</span>()},<span class="pl-en">readFieldBegin</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>{},c<span class="pl-k">=-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span>Thrift.Type.STOP,d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> <span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>d){c<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(d,<span class="pl-c1">10</span>);<span class="pl-v">this</span>.rpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span>);d<span class="pl-k">=</span><span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][c];<span class="pl-k">delete</span> <span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][c];<span class="pl-v">this</span>.rstack.<span class="pl-s3">push</span>(d);<span class="pl-k">break</span>}<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>c)<span class="pl-k">for</span>(<span class="pl-s">var</span> e <span class="pl-k">in</span> <span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line"><span class="pl-c1">1</span>])<span class="pl-c1">null</span><span class="pl-k">!==</span>Thrift.Protocol.RType[e]<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>Thrift.Protocol.RType[e],<span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>][e]);a.fname<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;a.ftype<span class="pl-k">=</span>b;a.fid<span class="pl-k">=</span>c;<span class="pl-k">return</span> a},<span class="pl-en">readFieldEnd</span>:<span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.rpos.<span class="pl-s3">pop</span>();<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a;)<span class="pl-v">this</span>.rstack.<span class="pl-s3">pop</span>()},<span class="pl-en">readMapBegin</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.rstack.<span class="pl-s3">pop</span>(),c<span class="pl-k">=</span>{};c.ktype<span class="pl-k">=</span>Thrift.Protocol.RType[a.<span class="pl-s3">shift</span>()];c.vtype<span class="pl-k">=</span>Thrift.Protocol.RType[a.<span class="pl-s3">shift</span>()];c.<span class="pl-sc">size</span><span class="pl-k">=</span>a.<span class="pl-s3">shift</span>();<span class="pl-v">this</span>.rpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.rstack.<span class="pl-s3">push</span>(a.<span class="pl-s3">shift</span>());<span class="pl-k">return</span> c},<span class="pl-en">readMapEnd</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.readFieldEnd()},</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line"><span class="pl-en">readListBegin</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],c<span class="pl-k">=</span>{};c.etype<span class="pl-k">=</span>Thrift.Protocol.RType[a.<span class="pl-s3">shift</span>()];c.<span class="pl-sc">size</span><span class="pl-k">=</span>a.<span class="pl-s3">shift</span>();<span class="pl-v">this</span>.rpos.<span class="pl-s3">push</span>(<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.rstack.<span class="pl-s3">push</span>(a);<span class="pl-k">return</span> c},<span class="pl-en">readListEnd</span>:<span class="pl-st">function</span>(){<span class="pl-v">this</span>.readFieldEnd()},<span class="pl-en">readSetBegin</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.readListBegin(a,c)},<span class="pl-en">readSetEnd</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readListEnd()},<span class="pl-en">readBool</span>:<span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readI32();a.<span class="pl-sc">value</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span>a.<span class="pl-sc">value</span><span class="pl-k">?!</span><span class="pl-c1">0</span><span class="pl-k">:!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> a},<span class="pl-en">readByte</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readI32()},<span class="pl-en">readI16</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readI32()},</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="pl-en">readI32</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.rstack[<span class="pl-v">this</span>.rstack.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]);<span class="pl-s">var</span> c<span class="pl-k">=</span>{};<span class="pl-k">if</span>(a <span class="pl-k">instanceof</span> <span class="pl-s3">Array</span>)c.<span class="pl-sc">value</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span>a.<span class="pl-sc">length</span><span class="pl-k">?void</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.<span class="pl-s3">shift</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(a <span class="pl-k">instanceof</span> <span class="pl-s3">Object</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> a){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>b){<span class="pl-v">this</span>.rstack.<span class="pl-s3">push</span>(a[b]);<span class="pl-k">delete</span> a[b];c.<span class="pl-sc">value</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>}}<span class="pl-k">else</span> c.<span class="pl-sc">value</span><span class="pl-k">=</span>a,<span class="pl-v">this</span>.rstack.<span class="pl-s3">pop</span>();<span class="pl-k">return</span> c},<span class="pl-en">readI64</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readI32()},<span class="pl-en">readDouble</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readI32()},<span class="pl-en">readString</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readI32()},<span class="pl-en">readBinary</span>:<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.readString()},<span class="pl-en">skip</span>:<span class="pl-st">function</span>(){<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>skip not supported yet<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line">}};<span class="pl-s3">Thrift</span>.<span class="pl-en">BinaryProtocol</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.transport<span class="pl-k">=</span><span class="pl-v">this</span>.trans<span class="pl-k">=</span>a;<span class="pl-v">this</span>.strictRead<span class="pl-k">=void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>c<span class="pl-k">:!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.strictWrite<span class="pl-k">=void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:!</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line">Thrift.BinaryParser<span class="pl-k">=</span>{<span class="pl-en">fromByte</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">Int8Array</span>([a])).buffer},<span class="pl-en">fromShort</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(a);<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">2</span>);(<span class="pl-k">new</span> <span class="pl-en">DataView</span>(c)).setInt16(<span class="pl-c1">0</span>,a);<span class="pl-k">return</span> c},<span class="pl-en">fromInt</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(a);<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">4</span>);(<span class="pl-k">new</span> <span class="pl-en">DataView</span>(c)).setInt32(<span class="pl-c1">0</span>,a);<span class="pl-k">return</span> c},<span class="pl-en">fromLong</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(a);<span class="pl-k">if</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a)<span class="pl-k">&gt;=</span><span class="pl-s3">Math</span>.<span class="pl-s3">pow</span>(<span class="pl-c1">2</span>,<span class="pl-c1">53</span>))<span class="pl-k">throw</span> Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unable to accurately transfer numbers larger than 2^53 - 1 as integers. Number provided was <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-s">var</span> c<span class="pl-k">=</span>(<span class="pl-s3">Array</span>(<span class="pl-c1">64</span>).<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a).<span class="pl-s3">toString</span>(<span class="pl-c1">2</span>)).<span class="pl-s3">slice</span>(<span class="pl-k">-</span><span class="pl-c1">64</span>);</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line"><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.twosCompliment(c));a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">8</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">DataView</span>(a),d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">8</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-s3">parseInt</span>(c.<span class="pl-s3">substr</span>(<span class="pl-c1">8</span><span class="pl-k">*</span>d,<span class="pl-c1">8</span>),<span class="pl-c1">2</span>);b.setUint8(d,e)}<span class="pl-k">return</span> a},<span class="pl-en">twosCompliment</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.<span class="pl-s3">lastIndexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a<span class="pl-k">=</span>a.<span class="pl-s3">substring</span>(<span class="pl-c1">0</span>,c).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>1<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>0<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>).<span class="pl-s3">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>x<span class="pl-pds">/</span>g</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>a.<span class="pl-s3">substring</span>(c)},<span class="pl-en">fromDouble</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(<span class="pl-c1">8</span>);(<span class="pl-k">new</span> <span class="pl-en">DataView</span>(c)).setFloat64(<span class="pl-c1">0</span>,a);<span class="pl-k">return</span> c},<span class="pl-en">fromString</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s3">unescape</span>(encodeURIComponent(a)),b<span class="pl-k">=</span>c.<span class="pl-sc">length</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(b);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)d[a]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line">c.<span class="pl-s3">charCodeAt</span>(a);<span class="pl-k">return</span> d.buffer},<span class="pl-en">toByte</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.getUint8(<span class="pl-c1">0</span>)},<span class="pl-en">toBytes</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a.buffer,a.byteOffset,a.byteLength)},<span class="pl-en">toShort</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.getInt16(<span class="pl-c1">0</span>)},<span class="pl-en">toInt</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.getInt32(<span class="pl-c1">0</span>)},<span class="pl-en">toLong</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">8</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)b<span class="pl-k">+=</span>(<span class="pl-s3">Array</span>(<span class="pl-c1">8</span>).<span class="pl-s3">join</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>a.getUint8(d).<span class="pl-s3">toString</span>(<span class="pl-c1">2</span>)).<span class="pl-s3">slice</span>(<span class="pl-k">-</span><span class="pl-c1">8</span>);<span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.twosCompliment(b));a<span class="pl-k">=</span>b.<span class="pl-s3">indexOf</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">10</span><span class="pl-k">&gt;</span>a)<span class="pl-k">throw</span> Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>Unable to receive number larger than 2^53 - 1 as an integer<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-s3">parseInt</span>(b,</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line"><span class="pl-c1">2</span>)<span class="pl-k">*</span>c},<span class="pl-en">toDouble</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a.getFloat64(<span class="pl-c1">0</span>)},<span class="pl-en">toString</span>:<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,b,d<span class="pl-k">=</span>a.byteLength,e;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>d;b<span class="pl-k">++</span>)e<span class="pl-k">=</span>a.getUint8(b).<span class="pl-s3">toString</span>(<span class="pl-c1">16</span>),<span class="pl-c1">1</span><span class="pl-k">==</span>e.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e),c<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>e;<span class="pl-k">return</span> c<span class="pl-k">=</span>decodeURIComponent(c)}};</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line">(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>Thrift.BinaryParser;<span class="pl-s3">a</span>.<span class="pl-en">flush</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.trans.flush()};<span class="pl-s">var</span> b<span class="pl-k">=</span>Thrift.Type;<span class="pl-s3">a</span>.<span class="pl-en">writeMessageBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.strictWrite<span class="pl-k">?</span>(<span class="pl-v">this</span>.writeI32(<span class="pl-k">-</span><span class="pl-c1">2147418112</span>|b),<span class="pl-v">this</span>.writeString(a))<span class="pl-k">:</span>(<span class="pl-v">this</span>.writeString(a),<span class="pl-v">this</span>.writeByte(b));<span class="pl-v">this</span>.writeI32(c)};<span class="pl-s3">a</span>.<span class="pl-en">writeMessageEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeStructBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeStructEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeFieldBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.writeByte(b);<span class="pl-v">this</span>.writeI16(c)};<span class="pl-s3">a</span>.<span class="pl-en">writeFieldEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeFieldStop</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.writeByte(b.STOP)};</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line"><span class="pl-s3">a</span>.<span class="pl-en">writeMapBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.writeByte(a);<span class="pl-v">this</span>.writeByte(b);<span class="pl-v">this</span>.writeI32(c)};<span class="pl-s3">a</span>.<span class="pl-en">writeMapEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeListBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.writeByte(a);<span class="pl-v">this</span>.writeI32(b)};<span class="pl-s3">a</span>.<span class="pl-en">writeListEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeSetBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-en">console</span><span class="pl-s3">.log</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>write set<span class="pl-pds">&quot;</span></span>,a,b);<span class="pl-v">this</span>.writeByte(a);<span class="pl-v">this</span>.writeI32(b)};<span class="pl-s3">a</span>.<span class="pl-en">writeSetEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">writeBool</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">?</span><span class="pl-v">this</span>.writeByte(<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.writeByte(<span class="pl-c1">0</span>)};<span class="pl-s3">a</span>.<span class="pl-en">writeByte</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(c.fromByte(a))};<span class="pl-s3">a</span>.<span class="pl-en">writeBinary</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s1"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>c.fromString(a));</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line"><span class="pl-k">if</span>(a.byteLength)<span class="pl-v">this</span>.writeI32(a.byteLength);<span class="pl-k">else</span> <span class="pl-k">throw</span> Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>Cannot read length of binary data<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(a)};<span class="pl-s3">a</span>.<span class="pl-en">writeI16</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(c.fromShort(a))};<span class="pl-s3">a</span>.<span class="pl-en">writeI32</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(c.fromInt(a))};<span class="pl-s3">a</span>.<span class="pl-en">writeI64</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(c.fromLong(a))};<span class="pl-s3">a</span>.<span class="pl-en">writeDouble</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(c.fromDouble(a))};<span class="pl-s3">a</span>.<span class="pl-en">writeString</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a<span class="pl-k">=</span>c.fromString(a);<span class="pl-v">this</span>.writeI32(a.byteLength);<span class="pl-v">this</span>.trans.<span class="pl-s3">write</span>(a)};<span class="pl-s3">a</span>.<span class="pl-en">readMessageBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>,b,c;</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>a){b<span class="pl-k">=</span>a<span class="pl-k">&amp;-</span><span class="pl-c1">65536</span>;<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">2147418112</span><span class="pl-k">!=</span>b)<span class="pl-k">throw</span> <span class="pl-en">console</span><span class="pl-s3">.log</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>BAD: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b),Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>Bad version in readMessageBegin: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);a<span class="pl-k">&amp;=</span><span class="pl-c1">255</span>;b<span class="pl-k">=</span><span class="pl-v">this</span>.readString().<span class="pl-sc">value</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-v">this</span>.strictRead)<span class="pl-k">throw</span> Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>No protocol version header<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(a);a<span class="pl-k">=</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span>}c<span class="pl-k">=</span><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>;<span class="pl-k">return</span>{fname<span class="pl-k">:</span>b,mtype<span class="pl-k">:</span>a,rseqid<span class="pl-k">:</span>c}};<span class="pl-s3">a</span>.<span class="pl-en">readMessageEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">readStructBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span>{fname<span class="pl-k">:</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}};<span class="pl-s3">a</span>.<span class="pl-en">readStructEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">readFieldBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span>b.STOP)<span class="pl-k">return</span>{fname<span class="pl-k">:</span><span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line">ftype<span class="pl-k">:</span>a,fid<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.readI16().<span class="pl-sc">value</span>;<span class="pl-k">return</span>{fname<span class="pl-k">:</span><span class="pl-c1">null</span>,ftype<span class="pl-k">:</span>a,fid<span class="pl-k">:</span>c}};<span class="pl-s3">a</span>.<span class="pl-en">readFieldEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">readMapBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.rstack<span class="pl-k">=</span>[];<span class="pl-v">this</span>.rpos<span class="pl-k">=</span>[<span class="pl-c1">1</span>];<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>;<span class="pl-k">return</span>{ktype<span class="pl-k">:</span>a,vtype<span class="pl-k">:</span>b,size<span class="pl-k">:</span>c}};<span class="pl-s3">a</span>.<span class="pl-en">readMapEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">readListBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>;<span class="pl-k">return</span>{etype<span class="pl-k">:</span>a,size<span class="pl-k">:</span>b}};<span class="pl-s3">a</span>.<span class="pl-en">readListEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">readSetBegin</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span>,b<span class="pl-k">=</span><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>;<span class="pl-k">return</span>{etype<span class="pl-k">:</span>a,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line">size<span class="pl-k">:</span>b}};<span class="pl-s3">a</span>.<span class="pl-en">readSetEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">readBool</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-v">this</span>.readByte().<span class="pl-sc">value</span><span class="pl-k">?</span>{value<span class="pl-k">:!</span><span class="pl-c1">1</span>}<span class="pl-k">:</span>{value<span class="pl-k">:!</span><span class="pl-c1">0</span>}};<span class="pl-s3">a</span>.<span class="pl-en">readByte</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(<span class="pl-c1">1</span>);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.toByte(a)}};<span class="pl-s3">a</span>.<span class="pl-en">readI16</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(<span class="pl-c1">2</span>);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.toShort(a)}};<span class="pl-s3">a</span>.<span class="pl-en">readI32</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(<span class="pl-c1">4</span>);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.toInt(a)}};<span class="pl-s3">a</span>.<span class="pl-en">readI64</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(<span class="pl-c1">8</span>);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.toLong(a)}};<span class="pl-s3">a</span>.<span class="pl-en">readDouble</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(<span class="pl-c1">8</span>);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.toDouble(a)}};<span class="pl-s3">a</span>.<span class="pl-en">readBinary</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line"><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>,a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(a);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.toBytes(a)}};<span class="pl-s3">a</span>.<span class="pl-en">readString</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.readI32().<span class="pl-sc">value</span>,a<span class="pl-k">=</span><span class="pl-v">this</span>.trans.read(a);<span class="pl-k">return</span>{value<span class="pl-k">:</span>c.<span class="pl-s3">toString</span>(a)}};<span class="pl-s3">a</span>.<span class="pl-en">getTransport</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.trans};<span class="pl-s3">a</span>.<span class="pl-en">skip</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> b.STOP<span class="pl-k">:</span><span class="pl-k">break</span>;<span class="pl-k">case</span> b.BOOL<span class="pl-k">:</span><span class="pl-v">this</span>.readBool();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.BYTE<span class="pl-k">:</span><span class="pl-v">this</span>.readByte();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.I16<span class="pl-k">:</span><span class="pl-v">this</span>.readI16();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.I32<span class="pl-k">:</span><span class="pl-v">this</span>.readI32();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.I64<span class="pl-k">:</span><span class="pl-v">this</span>.readI64();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.DOUBLE<span class="pl-k">:</span><span class="pl-v">this</span>.readDouble();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.STRING<span class="pl-k">:</span><span class="pl-v">this</span>.readString();<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line"><span class="pl-k">case</span> b.STRUCT<span class="pl-k">:</span><span class="pl-k">for</span>(<span class="pl-v">this</span>.readStructBegin();;){a<span class="pl-k">=</span><span class="pl-v">this</span>.readFieldBegin();<span class="pl-k">if</span>(a.ftype<span class="pl-k">===</span>b.STOP)<span class="pl-k">break</span>;<span class="pl-v">this</span>.skip(a.ftype);<span class="pl-v">this</span>.readFieldEnd()}<span class="pl-v">this</span>.readStructEnd();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.MAP<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.readMapBegin();<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a.<span class="pl-sc">size</span>;<span class="pl-k">++</span>c)<span class="pl-v">this</span>.skip(a.ktype),<span class="pl-v">this</span>.skip(a.vtype);<span class="pl-v">this</span>.readMapEnd();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.SET<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.readSetBegin();<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a.<span class="pl-sc">size</span>;<span class="pl-k">++</span>c)<span class="pl-v">this</span>.skip(a.etype);<span class="pl-v">this</span>.readSetEnd();<span class="pl-k">break</span>;<span class="pl-k">case</span> b.LIST<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.readListBegin();<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a.<span class="pl-sc">size</span>;<span class="pl-k">++</span>c)<span class="pl-v">this</span>.skip(a.etype);<span class="pl-v">this</span>.readListEnd();<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span><span class="pl-k">throw</span> Error(<span class="pl-s1"><span class="pl-pds">&quot;</span>Invalid type: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line">a);}}})(Thrift.BinaryProtocol.<span class="pl-sc">prototype</span>);<span class="pl-s3">Thrift</span>.<span class="pl-en">BinaryHttpTransport</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.url<span class="pl-k">=</span>a;<span class="pl-v">this</span>.buffer<span class="pl-k">=</span>[];<span class="pl-v">this</span>.received<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.offset<span class="pl-k">=</span><span class="pl-c1">0</span>};</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line">(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s3">a</span>.<span class="pl-en">open</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">close</span><span class="pl-k">=</span><span class="pl-st">function</span>(){};<span class="pl-s3">a</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">DataView</span>(<span class="pl-v">this</span>.received,<span class="pl-v">this</span>.offset,a);<span class="pl-v">this</span>.offset<span class="pl-k">+=</span>a;<span class="pl-k">return</span> b};<span class="pl-s3">a</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.buffer.<span class="pl-s3">push</span>(a)};<span class="pl-s3">a</span>.<span class="pl-en">flush</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error in BinaryHttpTransport.flush: Binary protocol does not support synchronous calls<span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-v">this</span>.buffer.reduce(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> a<span class="pl-k">+</span>b.byteLength},<span class="pl-c1">0</span>);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(a)),d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.buffer.forEach(<span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">null</span>,c<span class="pl-k">=</span>a.buffer<span class="pl-k">?</span>a <span class="pl-k">instanceof</span> Uint8Array<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a.buffer,</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line">a.byteOffset,a.byteLength)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a);b.set(c,d);d<span class="pl-k">+=</span>a.byteLength});<span class="pl-v">this</span>.buffer<span class="pl-k">=</span>[];<span class="pl-k">return</span> b};<span class="pl-s3">a</span>.<span class="pl-en">send</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){d<span class="pl-k">=</span><span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.slice.<span class="pl-s3">call</span>(d,<span class="pl-c1">0</span>);<span class="pl-s">var</span> f<span class="pl-k">=</span>d.<span class="pl-s3">pop</span>(),g<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d.<span class="pl-sc">length</span><span class="pl-k">?</span>d.<span class="pl-s3">pop</span>()<span class="pl-k">:</span>f;<span class="pl-s1"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!==typeof</span> g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>f);<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;h.<span class="pl-s3">open</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>POST<span class="pl-pds">&quot;</span></span>,<span class="pl-v">this</span>.url,<span class="pl-k">!</span><span class="pl-c1">0</span>);h.<span class="pl-s3">setRequestHeader</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Content-Type<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>application/x-thrift<span class="pl-pds">&quot;</span></span>);h.<span class="pl-s3">setRequestHeader</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>Accept<span class="pl-pds">&quot;</span></span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>application/x-thrift<span class="pl-pds">&quot;</span></span>);h.responseType<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>;<span class="pl-s3">h</span>.<span class="pl-en">onload</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.received<span class="pl-k">=</span>h.response;<span class="pl-v">this</span>.offset<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">try</span>{<span class="pl-s">var</span> b<span class="pl-k">=</span>e.<span class="pl-s3">call</span>(a)}<span class="pl-k">catch</span>(d){b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line">d,g<span class="pl-k">=</span>f}g(b)}.bind(<span class="pl-v">this</span>);<span class="pl-s3">h</span>.<span class="pl-en">onerror</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){f(a)};h.<span class="pl-s3">send</span>(b.buffer)}})(Thrift.BinaryHttpTransport.<span class="pl-sc">prototype</span>);EDAMErrorCode<span class="pl-k">=</span>{UNKNOWN<span class="pl-k">:</span><span class="pl-c1">1</span>,BAD_DATA_FORMAT<span class="pl-k">:</span><span class="pl-c1">2</span>,PERMISSION_DENIED<span class="pl-k">:</span><span class="pl-c1">3</span>,INTERNAL_ERROR<span class="pl-k">:</span><span class="pl-c1">4</span>,DATA_REQUIRED<span class="pl-k">:</span><span class="pl-c1">5</span>,LIMIT_REACHED<span class="pl-k">:</span><span class="pl-c1">6</span>,QUOTA_REACHED<span class="pl-k">:</span><span class="pl-c1">7</span>,INVALID_AUTH<span class="pl-k">:</span><span class="pl-c1">8</span>,AUTH_EXPIRED<span class="pl-k">:</span><span class="pl-c1">9</span>,DATA_CONFLICT<span class="pl-k">:</span><span class="pl-c1">10</span>,ENML_VALIDATION<span class="pl-k">:</span><span class="pl-c1">11</span>,SHARD_UNAVAILABLE<span class="pl-k">:</span><span class="pl-c1">12</span>,LEN_TOO_SHORT<span class="pl-k">:</span><span class="pl-c1">13</span>,LEN_TOO_LONG<span class="pl-k">:</span><span class="pl-c1">14</span>,TOO_FEW<span class="pl-k">:</span><span class="pl-c1">15</span>,TOO_MANY<span class="pl-k">:</span><span class="pl-c1">16</span>,UNSUPPORTED_OPERATION<span class="pl-k">:</span><span class="pl-c1">17</span>,TAKEN_DOWN<span class="pl-k">:</span><span class="pl-c1">18</span>,RATE_LIMIT_REACHED<span class="pl-k">:</span><span class="pl-c1">19</span>};</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line"><span class="pl-en">EDAMUserException</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.parameter<span class="pl-k">=</span><span class="pl-v">this</span>.errorCode<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.errorCode<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.errorCode<span class="pl-k">=</span>a.errorCode),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.parameter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.parameter<span class="pl-k">=</span>a.parameter))};Thrift.inherits(EDAMUserException,Thrift.TException);<span class="pl-s3">EDAMUserException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">name</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>EDAMUserException<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line"><span class="pl-s3">EDAMUserException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.errorCode<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.parameter<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line"><span class="pl-s3">EDAMUserException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>EDAMUserException<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.errorCode<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.errorCode<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>errorCode<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.errorCode),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.parameter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.parameter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>parameter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.parameter),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line"><span class="pl-en">EDAMSystemException</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.rateLimitDuration<span class="pl-k">=</span><span class="pl-v">this</span>.message<span class="pl-k">=</span><span class="pl-v">this</span>.errorCode<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.errorCode<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.errorCode<span class="pl-k">=</span>a.errorCode),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.message<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.message<span class="pl-k">=</span>a.message),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.rateLimitDuration<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.rateLimitDuration<span class="pl-k">=</span>a.rateLimitDuration))};Thrift.inherits(EDAMSystemException,Thrift.TException);<span class="pl-s3">EDAMSystemException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">name</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>EDAMSystemException<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line"><span class="pl-s3">EDAMSystemException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.errorCode<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.message<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.rateLimitDuration<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line"><span class="pl-s3">EDAMSystemException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>EDAMSystemException<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.errorCode<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.errorCode<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>errorCode<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.errorCode),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.message<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.message<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>message<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.message),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.rateLimitDuration<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.rateLimitDuration<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>rateLimitDuration<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.rateLimitDuration),</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line">a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">EDAMNotFoundException</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.identifier<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.identifier<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.identifier<span class="pl-k">=</span>a.identifier),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key))};Thrift.inherits(EDAMNotFoundException,Thrift.TException);<span class="pl-s3">EDAMNotFoundException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">name</span><span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>EDAMNotFoundException<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line"><span class="pl-s3">EDAMNotFoundException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.identifier<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line"><span class="pl-s3">EDAMNotFoundException</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>EDAMNotFoundException<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.identifier<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.identifier<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>identifier<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.identifier),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};EDAM_ATTRIBUTE_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_ATTRIBUTE_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">4096</span>;EDAM_ATTRIBUTE_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Zl}p{Zp}]{1,4096}$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line">EDAM_ATTRIBUTE_MAP_MAX<span class="pl-k">=</span>EDAM_ATTRIBUTE_LIST_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_GUID_LEN_MAX<span class="pl-k">=</span>EDAM_GUID_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">36</span>;EDAM_GUID_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$<span class="pl-pds">&quot;</span></span>;EDAM_EMAIL_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">6</span>;EDAM_EMAIL_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">255</span>;EDAM_EMAIL_LOCAL_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9!#$%&amp;&#39;*+/=?^_`{|}~-]+(.[A-Za-z0-9!#$%&amp;&#39;*+/=?^_`{|}~-]+)*$<span class="pl-pds">&quot;</span></span>;EDAM_EMAIL_DOMAIN_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9-]+(.[A-Za-z0-9-]+)*.([A-Za-z]{2,})$<span class="pl-pds">&quot;</span></span>;EDAM_EMAIL_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9!#$%&amp;&#39;*+/=?^_`{|}~-]+(.[A-Za-z0-9!#$%&amp;&#39;*+/=?^_`{|}~-]+)*@[A-Za-z0-9-]+(.[A-Za-z0-9-]+)*.([A-Za-z]{2,})$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line">EDAM_VAT_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^((AT)?U[0-9]{8}|(BE)?0?[0-9]{9}|(BG)?[0-9]{9,10}|(CY)?[0-9]{8}L|(CZ)?[0-9]{8,10}|(DE)?[0-9]{9}|(DK)?[0-9]{8}|(EE)?[0-9]{9}|(EL|GR)?[0-9]{9}|(ES)?[0-9A-Z][0-9]{7}[0-9A-Z]|(FI)?[0-9]{8}|(FR)?[0-9A-Z]{2}[0-9]{9}|(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|(HU)?[0-9]{8}|(IE)?[0-9]S[0-9]{5}L|(IT)?[0-9]{11}|(LT)?([0-9]{9}|[0-9]{12})|(LU)?[0-9]{8}|(LV)?[0-9]{11}|(MT)?[0-9]{8}|(NL)?[0-9]{9}B[0-9]{2}|(PL)?[0-9]{10}|(PT)?[0-9]{9}|(RO)?[0-9]{2,10}|(SE)?[0-9]{12}|(SI)?[0-9]{8}|(SK)?[0-9]{10})|[0-9]{9}MVA|[0-9]{6}|CHE[0-9]{9}(TVA|MWST|IVA)$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line">EDAM_TIMEZONE_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_TIMEZONE_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">32</span>;EDAM_TIMEZONE_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^([A-Za-z_-]+(/[A-Za-z_-]+)*)|(GMT(-|+)[0-9]{1,2}(:[0-9]{2})?)$<span class="pl-pds">&quot;</span></span>;EDAM_MIME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">3</span>;EDAM_MIME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">255</span>;EDAM_MIME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z]+/[A-Za-z0-9._+-]+$<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_GIF<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>image/gif<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_JPEG<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>image/jpeg<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_PNG<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>image/png<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_WAV<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>audio/wav<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_MP3<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>audio/mpeg<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_AMR<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>audio/amr<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_AAC<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>audio/aac<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_M4A<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>audio/mp4<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_MP4_VIDEO<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>video/mp4<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line">EDAM_MIME_TYPE_INK<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>application/vnd.evernote.ink<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_PDF<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>application/pdf<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPE_DEFAULT<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>application/octet-stream<span class="pl-pds">&quot;</span></span>;EDAM_MIME_TYPES<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>image/gif image/jpeg image/png audio/wav audio/mpeg audio/amr application/vnd.evernote.ink application/pdf video/mp4 audio/aac audio/mp4<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);EDAM_INDEXABLE_RESOURCE_MIME_TYPES<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>application/msword application/mspowerpoint application/excel application/vnd.ms-word application/vnd.ms-powerpoint application/vnd.ms-excel application/vnd.openxmlformats-officedocument.wordprocessingml.document application/vnd.openxmlformats-officedocument.presentationml.presentation application/vnd.openxmlformats-officedocument.spreadsheetml.sheet application/vnd.apple.pages application/vnd.apple.numbers application/vnd.apple.keynote application/x-iwork-pages-sffpages application/x-iwork-numbers-sffnumbers application/x-iwork-keynote-sffkey<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line">EDAM_SEARCH_QUERY_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">0</span>;EDAM_SEARCH_QUERY_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">1024</span>;EDAM_SEARCH_QUERY_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Zl}p{Zp}]{0,1024}$<span class="pl-pds">&quot;</span></span>;EDAM_HASH_LEN<span class="pl-k">=</span><span class="pl-c1">16</span>;EDAM_USER_USERNAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_USER_USERNAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">64</span>;EDAM_USER_USERNAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[a-z0-9]([a-z0-9_-]{0,62}[a-z0-9])?$<span class="pl-pds">&quot;</span></span>;EDAM_USER_NAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_USER_NAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">255</span>;EDAM_USER_NAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Zl}p{Zp}]{1,255}$<span class="pl-pds">&quot;</span></span>;EDAM_TAG_NAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_TAG_NAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_TAG_NAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^,p{Cc}p{Z}]([^,p{Cc}p{Zl}p{Zp}]{0,98}[^,p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line">EDAM_NOTE_TITLE_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_NOTE_TITLE_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">255</span>;EDAM_NOTE_TITLE_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Z}]([^p{Cc}p{Zl}p{Zp}]{0,253}[^p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;EDAM_NOTE_CONTENT_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">0</span>;EDAM_NOTE_CONTENT_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">5242880</span>;EDAM_APPLICATIONDATA_NAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">3</span>;EDAM_APPLICATIONDATA_NAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">32</span>;EDAM_APPLICATIONDATA_VALUE_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">0</span>;EDAM_APPLICATIONDATA_VALUE_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">4092</span>;EDAM_APPLICATIONDATA_ENTRY_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">4095</span>;EDAM_APPLICATIONDATA_NAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9_.-]{3,32}$<span class="pl-pds">&quot;</span></span>;EDAM_APPLICATIONDATA_VALUE_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}]{0,4092}$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line">EDAM_NOTEBOOK_NAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_NOTEBOOK_NAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_NOTEBOOK_NAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Z}]([^p{Cc}p{Zl}p{Zp}]{0,98}[^p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;EDAM_NOTEBOOK_STACK_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_NOTEBOOK_STACK_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_NOTEBOOK_STACK_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Z}]([^p{Cc}p{Zl}p{Zp}]{0,98}[^p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;EDAM_PUBLISHING_URI_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_PUBLISHING_URI_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">255</span>;EDAM_PUBLISHING_URI_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[a-zA-Z0-9.~_+-]{1,255}$<span class="pl-pds">&quot;</span></span>;EDAM_PUBLISHING_URI_PROHIBITED<span class="pl-k">=</span>[<span class="pl-s1"><span class="pl-pds">&quot;</span>..<span class="pl-pds">&quot;</span></span>];EDAM_PUBLISHING_DESCRIPTION_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line">EDAM_PUBLISHING_DESCRIPTION_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">200</span>;EDAM_PUBLISHING_DESCRIPTION_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Z}]([^p{Cc}p{Zl}p{Zp}]{0,198}[^p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;EDAM_SAVED_SEARCH_NAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_SAVED_SEARCH_NAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_SAVED_SEARCH_NAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Z}]([^p{Cc}p{Zl}p{Zp}]{0,98}[^p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;EDAM_USER_PASSWORD_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">6</span>;EDAM_USER_PASSWORD_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">64</span>;EDAM_USER_PASSWORD_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9!#$%&amp;&#39;()*+,./:;&lt;=&gt;?@^_`{|}~[]<span class="pl-cce">\\</span>-]{6,64}$<span class="pl-pds">&quot;</span></span>;EDAM_BUSINESS_URI_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">32</span>;EDAM_NOTE_TAGS_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_NOTE_RESOURCES_MAX<span class="pl-k">=</span><span class="pl-c1">1E3</span>;</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line">EDAM_BUSINESS_TAGS_MAX<span class="pl-k">=</span>EDAM_USER_TAGS_MAX<span class="pl-k">=</span><span class="pl-c1">1E5</span>;EDAM_USER_SAVED_SEARCHES_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_USER_NOTES_MAX<span class="pl-k">=</span><span class="pl-c1">1E5</span>;EDAM_BUSINESS_NOTES_MAX<span class="pl-k">=</span><span class="pl-c1">5E5</span>;EDAM_USER_NOTEBOOKS_MAX<span class="pl-k">=</span><span class="pl-c1">250</span>;EDAM_BUSINESS_NOTEBOOKS_MAX<span class="pl-k">=</span><span class="pl-c1">5E3</span>;EDAM_USER_RECENT_MAILED_ADDRESSES_MAX<span class="pl-k">=</span><span class="pl-c1">10</span>;EDAM_USER_MAIL_LIMIT_DAILY_FREE<span class="pl-k">=</span><span class="pl-c1">50</span>;EDAM_USER_MAIL_LIMIT_DAILY_PREMIUM<span class="pl-k">=</span><span class="pl-c1">200</span>;EDAM_USER_UPLOAD_LIMIT_FREE<span class="pl-k">=</span><span class="pl-c1">62914560</span>;EDAM_USER_UPLOAD_LIMIT_PREMIUM<span class="pl-k">=</span><span class="pl-c1">1073741824</span>;EDAM_USER_UPLOAD_LIMIT_BUSINESS<span class="pl-k">=</span><span class="pl-c1">2147483647</span>;EDAM_NOTE_SIZE_MAX_FREE<span class="pl-k">=</span><span class="pl-c1">26214400</span>;EDAM_NOTE_SIZE_MAX_PREMIUM<span class="pl-k">=</span><span class="pl-c1">104857600</span>;</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line">EDAM_RESOURCE_SIZE_MAX_FREE<span class="pl-k">=</span><span class="pl-c1">26214400</span>;EDAM_RESOURCE_SIZE_MAX_PREMIUM<span class="pl-k">=</span><span class="pl-c1">104857600</span>;EDAM_USER_LINKED_NOTEBOOK_MAX<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_NOTEBOOK_SHARED_NOTEBOOK_MAX<span class="pl-k">=</span>EDAM_USER_LINKED_NOTEBOOK_MAX_PREMIUM<span class="pl-k">=</span><span class="pl-c1">250</span>;EDAM_NOTE_CONTENT_CLASS_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">3</span>;EDAM_NOTE_CONTENT_CLASS_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">32</span>;EDAM_NOTE_CONTENT_CLASS_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9_.-]{3,32}$<span class="pl-pds">&quot;</span></span>;EDAM_HELLO_APP_CONTENT_CLASS_PREFIX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.hello.<span class="pl-pds">&quot;</span></span>;EDAM_FOOD_APP_CONTENT_CLASS_PREFIX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.food.<span class="pl-pds">&quot;</span></span>;EDAM_CONTENT_CLASS_HELLO_ENCOUNTER<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.hello.encounter<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line">EDAM_CONTENT_CLASS_HELLO_PROFILE<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.hello.profile<span class="pl-pds">&quot;</span></span>;EDAM_CONTENT_CLASS_FOOD_MEAL<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.food.meal<span class="pl-pds">&quot;</span></span>;EDAM_CONTENT_CLASS_SKITCH<span class="pl-k">=</span>EDAM_CONTENT_CLASS_SKITCH_PREFIX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.skitch<span class="pl-pds">&quot;</span></span>;EDAM_CONTENT_CLASS_SKITCH_PDF<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.skitch.pdf<span class="pl-pds">&quot;</span></span>;EDAM_CONTENT_CLASS_PENULTIMATE_PREFIX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.penultimate.<span class="pl-pds">&quot;</span></span>;EDAM_CONTENT_CLASS_PENULTIMATE_NOTEBOOK<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.penultimate.notebook<span class="pl-pds">&quot;</span></span>;EDAM_RELATED_PLAINTEXT_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_RELATED_PLAINTEXT_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">131072</span>;EDAM_RELATED_MAX_NOTES<span class="pl-k">=</span><span class="pl-c1">25</span>;EDAM_RELATED_MAX_NOTEBOOKS<span class="pl-k">=</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line">EDAM_RELATED_MAX_TAGS<span class="pl-k">=</span><span class="pl-c1">25</span>;EDAM_BUSINESS_NOTEBOOK_DESCRIPTION_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_BUSINESS_NOTEBOOK_DESCRIPTION_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">200</span>;EDAM_BUSINESS_NOTEBOOK_DESCRIPTION_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}p{Z}]([^p{Cc}p{Zl}p{Zp}]{0,198}[^p{Cc}p{Z}])?$<span class="pl-pds">&quot;</span></span>;EDAM_BUSINESS_PHONE_NUMBER_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">20</span>;EDAM_PREFERENCE_NAME_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">3</span>;EDAM_PREFERENCE_NAME_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">32</span>;EDAM_PREFERENCE_VALUE_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_PREFERENCE_VALUE_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">1024</span>;EDAM_MAX_PREFERENCES<span class="pl-k">=</span><span class="pl-c1">100</span>;EDAM_MAX_VALUES_PER_PREFERENCE<span class="pl-k">=</span><span class="pl-c1">256</span>;EDAM_PREFERENCE_NAME_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[A-Za-z0-9_.-]{3,32}$<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line">EDAM_PREFERENCE_VALUE_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}]{1,1024}$<span class="pl-pds">&quot;</span></span>;EDAM_PREFERENCE_SHORTCUTS<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>evernote.shortcuts<span class="pl-pds">&quot;</span></span>;EDAM_PREFERENCE_SHORTCUTS_MAX_VALUES<span class="pl-k">=</span><span class="pl-c1">250</span>;EDAM_DEVICE_ID_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">32</span>;EDAM_DEVICE_ID_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}]{1,32}$<span class="pl-pds">&quot;</span></span>;EDAM_DEVICE_DESCRIPTION_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">64</span>;EDAM_DEVICE_DESCRIPTION_REGEX<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>^[^p{Cc}]{1,64}$<span class="pl-pds">&quot;</span></span>;EDAM_SEARCH_SUGGESTIONS_MAX<span class="pl-k">=</span><span class="pl-c1">10</span>;EDAM_SEARCH_SUGGESTIONS_PREFIX_LEN_MAX<span class="pl-k">=</span><span class="pl-c1">1024</span>;EDAM_SEARCH_SUGGESTIONS_PREFIX_LEN_MIN<span class="pl-k">=</span><span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line"><span class="pl-en">NoteStore_getSyncState_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_getSyncState_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getSyncState_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncState_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSyncState_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line"><span class="pl-en">NoteStore_getSyncState_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_getSyncState_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncState_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncState</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncState_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSyncState_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getSyncStateWithMetrics_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.clientMetrics<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.clientMetrics<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.clientMetrics<span class="pl-k">=</span>a.clientMetrics))};<span class="pl-s3">NoteStore_getSyncStateWithMetrics_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncStateWithMetrics_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.clientMetrics<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ClientUsageMetrics</span>,<span class="pl-v">this</span>.clientMetrics.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncStateWithMetrics_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSyncStateWithMetrics_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clientMetrics<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clientMetrics<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>clientMetrics<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.clientMetrics.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line"><span class="pl-en">NoteStore_getSyncStateWithMetrics_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_getSyncStateWithMetrics_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncStateWithMetrics_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncState</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line"><span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncStateWithMetrics_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSyncStateWithMetrics_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getSyncChunk_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">=</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.afterUSN<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span>a.afterUSN),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxEntries<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span>a.maxEntries),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.fullSyncOnly<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">=</span>a.fullSyncOnly))};</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncChunk_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncChunk_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncChunk_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSyncChunk_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>afterUSN<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.afterUSN),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxEntries<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line">Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.maxEntries),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>fullSyncOnly<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.fullSyncOnly),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line"><span class="pl-en">NoteStore_getSyncChunk_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_getSyncChunk_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncChunk_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncChunk</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSyncChunk_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSyncChunk_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getFilteredSyncChunk_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.afterUSN<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span>a.afterUSN),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxEntries<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span>a.maxEntries),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.filter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span>a.filter))};</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getFilteredSyncChunk_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getFilteredSyncChunk_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncChunkFilter</span>,<span class="pl-v">this</span>.filter.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getFilteredSyncChunk_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getFilteredSyncChunk_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>afterUSN<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.afterUSN),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxEntries<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.maxEntries),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">4</span>),<span class="pl-v">this</span>.filter.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line"><span class="pl-en">NoteStore_getFilteredSyncChunk_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_getFilteredSyncChunk_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getFilteredSyncChunk_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncChunk</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line"><span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getFilteredSyncChunk_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getFilteredSyncChunk_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getLinkedNotebookSyncState_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.linkedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span>a.linkedNotebook))};<span class="pl-s3">NoteStore_getLinkedNotebookSyncState_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncState_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>,<span class="pl-v">this</span>.linkedNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncState_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getLinkedNotebookSyncState_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>linkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.linkedNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code js-file-line">a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code js-file-line"><span class="pl-en">NoteStore_getLinkedNotebookSyncState_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getLinkedNotebookSyncState_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncState_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncState</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncState_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getLinkedNotebookSyncState_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code js-file-line"><span class="pl-en">NoteStore_getLinkedNotebookSyncChunk_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">=</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.linkedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span>a.linkedNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.afterUSN<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span>a.afterUSN),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxEntries<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span>a.maxEntries),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.fullSyncOnly<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">=</span>a.fullSyncOnly))};</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncChunk_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncChunk_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>,<span class="pl-v">this</span>.linkedNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncChunk_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getLinkedNotebookSyncChunk_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>linkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.linkedNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.afterUSN<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>afterUSN<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.afterUSN),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxEntries<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxEntries<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">4</span>),a.writeI32(<span class="pl-v">this</span>.maxEntries),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullSyncOnly<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>fullSyncOnly<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.fullSyncOnly),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code js-file-line"><span class="pl-en">NoteStore_getLinkedNotebookSyncChunk_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getLinkedNotebookSyncChunk_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncChunk_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SyncChunk</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getLinkedNotebookSyncChunk_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getLinkedNotebookSyncChunk_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listNotebooks_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_listNotebooks_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listNotebooks_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code js-file-line"><span class="pl-en">NoteStore_listNotebooks_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_listNotebooks_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listNotebooks_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code js-file-line"><span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_getNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getDefaultNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_getDefaultNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getDefaultNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getDefaultNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getDefaultNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code js-file-line"><span class="pl-en">NoteStore_getDefaultNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_getDefaultNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getDefaultNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getDefaultNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getDefaultNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_createNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebook<span class="pl-k">=</span>a.notebook))};<span class="pl-s3">NoteStore_createNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,<span class="pl-v">this</span>.notebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code js-file-line"><span class="pl-en">NoteStore_createNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_createNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_updateNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebook<span class="pl-k">=</span>a.notebook))};<span class="pl-s3">NoteStore_updateNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,<span class="pl-v">this</span>.notebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_updateNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_expungeNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_expungeNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_expungeNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listTags_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_listTags_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTags_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTags_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listTags_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code js-file-line"><span class="pl-en">NoteStore_listTags_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_listTags_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTags_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTags_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listTags_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listTagsByNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.notebookGuid))};</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTagsByNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_listTagsByNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTagsByNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listTagsByNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.notebookGuid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code js-file-line"><span class="pl-en">NoteStore_listTagsByNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_listTagsByNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTagsByNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listTagsByNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listTagsByNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code js-file-line"><span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code js-file-line"><span class="pl-en">NoteStore_getTag_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_getTag_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getTag_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code js-file-line"><span class="pl-en">NoteStore_getTag_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_getTag_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getTag_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_createTag_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tag<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tag<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tag<span class="pl-k">=</span>a.tag))};<span class="pl-s3">NoteStore_createTag_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.tag<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>,<span class="pl-v">this</span>.tag.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createTag_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tag<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tag<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.tag.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code js-file-line"><span class="pl-en">NoteStore_createTag_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_createTag_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createTag_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_updateTag_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tag<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tag<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tag<span class="pl-k">=</span>a.tag))};<span class="pl-s3">NoteStore_updateTag_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.tag<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>,<span class="pl-v">this</span>.tag.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateTag_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tag<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tag<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.tag.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateTag_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_updateTag_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateTag_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_untagAll_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_untagAll_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code js-file-line"><span class="pl-s3">NoteStore_untagAll_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code js-file-line"><span class="pl-s3">NoteStore_untagAll_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_untagAll_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code js-file-line"><span class="pl-en">NoteStore_untagAll_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code js-file-line"><span class="pl-s3">NoteStore_untagAll_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code js-file-line"><span class="pl-s3">NoteStore_untagAll_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code js-file-line"><span class="pl-s3">NoteStore_untagAll_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_untagAll_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_expungeTag_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_expungeTag_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeTag_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeTag_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeTag_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_expungeTag_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeTag_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeTag_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listSearches_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_listSearches_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSearches_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSearches_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listSearches_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code js-file-line"><span class="pl-en">NoteStore_listSearches_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_listSearches_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSearches_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearch</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSearches_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listSearches_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getSearch_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_getSearch_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSearch_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code js-file-line"><span class="pl-en">NoteStore_getSearch_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_getSearch_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearch</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSearch_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_createSearch_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.search<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.search<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.search<span class="pl-k">=</span>a.search))};</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSearch_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_createSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.search<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearch</span>,<span class="pl-v">this</span>.search.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createSearch_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.search<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.search<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>search<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.search.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code js-file-line"><span class="pl-en">NoteStore_createSearch_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_createSearch_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearch</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createSearch_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_updateSearch_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.search<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.search<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.search<span class="pl-k">=</span>a.search))};<span class="pl-s3">NoteStore_updateSearch_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.search<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearch</span>,<span class="pl-v">this</span>.search.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateSearch_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.search<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.search<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>search<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.search.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateSearch_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_updateSearch_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateSearch_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_expungeSearch_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSearch_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_expungeSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSearch_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeSearch_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeSearch_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_expungeSearch_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSearch_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeSearch_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNotes_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span><span class="pl-v">this</span>.offset<span class="pl-k">=</span><span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.filter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span>a.filter),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.offset<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.offset<span class="pl-k">=</span>a.offset),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span>a.maxNotes))};<span class="pl-s3">NoteStore_findNotes_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteFilter</span>,<span class="pl-v">this</span>.filter.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.offset<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNotes_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.filter.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.offset<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.offset<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>offset<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.offset),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">4</span>),a.writeI32(<span class="pl-v">this</span>.maxNotes),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNotes_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_findNotes_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteList</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNotes_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNoteOffset_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.filter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span>a.filter),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_findNoteOffset_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteOffset_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteFilter</span>,<span class="pl-v">this</span>.filter.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteOffset_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNoteOffset_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.filter.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNoteOffset_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_findNoteOffset_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteOffset_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteOffset_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNoteOffset_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNotesMetadata_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.resultSpec<span class="pl-k">=</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span><span class="pl-v">this</span>.offset<span class="pl-k">=</span><span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.filter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span>a.filter),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.offset<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.offset<span class="pl-k">=</span>a.offset),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span>a.maxNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.resultSpec<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.resultSpec<span class="pl-k">=</span>a.resultSpec))};<span class="pl-s3">NoteStore_findNotesMetadata_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotesMetadata_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteFilter</span>,<span class="pl-v">this</span>.filter.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.offset<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.resultSpec<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NotesMetadataResultSpec</span>,<span class="pl-v">this</span>.resultSpec.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotesMetadata_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNotesMetadata_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.filter.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.offset<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.offset<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>offset<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code js-file-line">Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.offset),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">4</span>),a.writeI32(<span class="pl-v">this</span>.maxNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resultSpec<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resultSpec<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>resultSpec<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">5</span>),<span class="pl-v">this</span>.resultSpec.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNotesMetadata_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_findNotesMetadata_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotesMetadata_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NotesMetadataList</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNotesMetadata_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNotesMetadata_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNoteCounts_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.withTrash<span class="pl-k">=</span><span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.filter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span>a.filter),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withTrash<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withTrash<span class="pl-k">=</span>a.withTrash))};<span class="pl-s3">NoteStore_findNoteCounts_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteCounts_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteFilter</span>,<span class="pl-v">this</span>.filter.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withTrash<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteCounts_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNoteCounts_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.filter.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withTrash<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withTrash<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withTrash<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.withTrash),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code js-file-line"><span class="pl-en">NoteStore_findNoteCounts_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_findNoteCounts_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteCounts_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteCollectionCounts</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findNoteCounts_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findNoteCounts_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">=</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">=</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">=</span><span class="pl-v">this</span>.withContent<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withContent<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withContent<span class="pl-k">=</span>a.withContent),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withResourcesData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withResourcesData<span class="pl-k">=</span>a.withResourcesData),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withResourcesRecognition<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">=</span>a.withResourcesRecognition),</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withResourcesAlternateData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">=</span>a.withResourcesAlternateData))};<span class="pl-s3">NoteStore_getNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withContent<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code js-file-line"><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withContent<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withContent<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withContent<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.withContent),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withResourcesData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.withResourcesData),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withResourcesRecognition<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.withResourcesRecognition),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code js-file-line"><span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withResourcesAlternateData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.withResourcesAlternateData),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_getNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getNoteApplicationData_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationData_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getNoteApplicationData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteApplicationData_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteApplicationData_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNoteApplicationData_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LazyMap</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteApplicationData_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteApplicationDataEntry_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key))};<span class="pl-s3">NoteStore_getNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteApplicationDataEntry_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteApplicationDataEntry_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteApplicationDataEntry_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code js-file-line"><span class="pl-en">NoteStore_setNoteApplicationDataEntry_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">value</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span>a.<span class="pl-sc">value</span>))};<span class="pl-s3">NoteStore_setNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_setNoteApplicationDataEntry_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">value</span>),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code js-file-line"><span class="pl-en">NoteStore_setNoteApplicationDataEntry_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_setNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_setNoteApplicationDataEntry_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code js-file-line"><span class="pl-en">NoteStore_unsetNoteApplicationDataEntry_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key))};<span class="pl-s3">NoteStore_unsetNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetNoteApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_unsetNoteApplicationDataEntry_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code js-file-line"><span class="pl-en">NoteStore_unsetNoteApplicationDataEntry_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_unsetNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetNoteApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_unsetNoteApplicationDataEntry_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getNoteContent_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteContent_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getNoteContent_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteContent_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteContent_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteContent_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNoteContent_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteContent_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteContent_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteContent_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteSearchText_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tokenizeForIndexing<span class="pl-k">=</span><span class="pl-v">this</span>.noteOnly<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteOnly<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteOnly<span class="pl-k">=</span>a.noteOnly),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tokenizeForIndexing<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tokenizeForIndexing<span class="pl-k">=</span>a.tokenizeForIndexing))};<span class="pl-s3">NoteStore_getNoteSearchText_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteSearchText_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noteOnly<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.tokenizeForIndexing<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteSearchText_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteSearchText_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteOnly<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteOnly<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteOnly<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.noteOnly),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tokenizeForIndexing<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tokenizeForIndexing<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tokenizeForIndexing<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.tokenizeForIndexing),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteSearchText_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNoteSearchText_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteSearchText_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteSearchText_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteSearchText_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getResourceSearchText_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceSearchText_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getResourceSearchText_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceSearchText_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceSearchText_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceSearchText_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceSearchText_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceSearchText_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceSearchText_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceSearchText_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getNoteTagNames_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteTagNames_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getNoteTagNames_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteTagNames_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteTagNames_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteTagNames_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNoteTagNames_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteTagNames_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteTagNames_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteTagNames_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code js-file-line"><span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code js-file-line"><span class="pl-en">NoteStore_createNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.note<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.note<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.note<span class="pl-k">=</span>a.note))};<span class="pl-s3">NoteStore_createNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.note<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.note.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.note<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.note<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>note<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.note.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code js-file-line"><span class="pl-en">NoteStore_createNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_createNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_updateNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.note<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.note<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.note<span class="pl-k">=</span>a.note))};</td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_updateNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.note<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.note.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.note<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.note<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>note<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.note.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_updateNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_deleteNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code js-file-line"><span class="pl-s3">NoteStore_deleteNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_deleteNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code js-file-line"><span class="pl-s3">NoteStore_deleteNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_deleteNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code js-file-line"><span class="pl-en">NoteStore_deleteNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_deleteNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code js-file-line"><span class="pl-s3">NoteStore_deleteNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code js-file-line"><span class="pl-s3">NoteStore_deleteNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_deleteNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_expungeNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_expungeNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_expungeNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_expungeNotes_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.noteGuids<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuids<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuids<span class="pl-k">=</span>a.noteGuids))};</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotes_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_expungeNotes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.noteGuids<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.noteGuids.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeNotes_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuids<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuids){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuids<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">2</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.noteGuids.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.noteGuids)<span class="pl-v">this</span>.noteGuids.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code js-file-line">(c<span class="pl-k">=</span><span class="pl-v">this</span>.noteGuids[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeNotes_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_expungeNotes_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeNotes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeNotes_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_expungeInactiveNotes_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_expungeInactiveNotes_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeInactiveNotes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeInactiveNotes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeInactiveNotes_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeInactiveNotes_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_expungeInactiveNotes_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeInactiveNotes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeInactiveNotes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeInactiveNotes_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_copyNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.toNotebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.noteGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.toNotebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.toNotebookGuid<span class="pl-k">=</span>a.toNotebookGuid))};<span class="pl-s3">NoteStore_copyNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code js-file-line"><span class="pl-s3">NoteStore_copyNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.toNotebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code js-file-line"><span class="pl-s3">NoteStore_copyNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_copyNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.noteGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.toNotebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.toNotebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>toNotebookGuid<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.toNotebookGuid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code js-file-line"><span class="pl-en">NoteStore_copyNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code js-file-line">a.notFoundException))};<span class="pl-s3">NoteStore_copyNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code js-file-line"><span class="pl-s3">NoteStore_copyNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code js-file-line"><span class="pl-s3">NoteStore_copyNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_copyNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listNoteVersions_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.noteGuid))};</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNoteVersions_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_listNoteVersions_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNoteVersions_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listNoteVersions_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.noteGuid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code js-file-line"><span class="pl-en">NoteStore_listNoteVersions_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_listNoteVersions_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNoteVersions_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteVersionId</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listNoteVersions_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listNoteVersions_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code js-file-line"><span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteVersion_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">=</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">=</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.noteGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withResourcesData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withResourcesData<span class="pl-k">=</span>a.withResourcesData),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withResourcesRecognition<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code js-file-line">(<span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">=</span>a.withResourcesRecognition),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withResourcesAlternateData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">=</span>a.withResourcesAlternateData))};<span class="pl-s3">NoteStore_getNoteVersion_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteVersion_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteVersion_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteVersion_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.noteGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withResourcesData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.withResourcesData),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesRecognition<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withResourcesRecognition<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.withResourcesRecognition),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code js-file-line"><span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withResourcesAlternateData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withResourcesAlternateData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.withResourcesAlternateData),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code js-file-line"><span class="pl-en">NoteStore_getNoteVersion_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getNoteVersion_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteVersion_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getNoteVersion_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getNoteVersion_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResource_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.withAlternateData<span class="pl-k">=</span><span class="pl-v">this</span>.withAttributes<span class="pl-k">=</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">=</span><span class="pl-v">this</span>.withData<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withData<span class="pl-k">=</span>a.withData),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withRecognition<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withRecognition<span class="pl-k">=</span>a.withRecognition),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withAttributes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withAttributes<span class="pl-k">=</span>a.withAttributes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withAlternateData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withAlternateData<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code js-file-line">a.withAlternateData))};<span class="pl-s3">NoteStore_getResource_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResource_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code js-file-line"><span class="pl-v">this</span>.withAttributes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withAlternateData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResource_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResource_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,</td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.withData),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withRecognition<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.withRecognition),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withAttributes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withAttributes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withAttributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.withAttributes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withAlternateData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withAlternateData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withAlternateData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code js-file-line"><span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.withAlternateData),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResource_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResource_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResource_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Resource</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResource_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResource_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getResourceApplicationData_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationData_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getResourceApplicationData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceApplicationData_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceApplicationData_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceApplicationData_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LazyMap</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceApplicationData_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceApplicationDataEntry_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key))};<span class="pl-s3">NoteStore_getResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceApplicationDataEntry_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceApplicationDataEntry_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceApplicationDataEntry_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code js-file-line"><span class="pl-en">NoteStore_setResourceApplicationDataEntry_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span><span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">value</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span>a.<span class="pl-sc">value</span>))};<span class="pl-s3">NoteStore_setResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_setResourceApplicationDataEntry_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">value</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">value</span>),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code js-file-line"><span class="pl-en">NoteStore_setResourceApplicationDataEntry_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_setResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_setResourceApplicationDataEntry_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code js-file-line"><span class="pl-en">NoteStore_unsetResourceApplicationDataEntry_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.key<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.key<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.key<span class="pl-k">=</span>a.key))};<span class="pl-s3">NoteStore_unsetResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.key<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetResourceApplicationDataEntry_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_unsetResourceApplicationDataEntry_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.key<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>key<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.key),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code js-file-line"><span class="pl-en">NoteStore_unsetResourceApplicationDataEntry_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code js-file-line">a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_unsetResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code js-file-line"><span class="pl-s3">NoteStore_unsetResourceApplicationDataEntry_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_unsetResourceApplicationDataEntry_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateResource_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.resource<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.resource<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.resource<span class="pl-k">=</span>a.resource))};<span class="pl-s3">NoteStore_updateResource_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateResource_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.resource<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Resource</span>,<span class="pl-v">this</span>.resource.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateResource_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateResource_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resource<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resource<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>resource<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.resource.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateResource_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_updateResource_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateResource_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateResource_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateResource_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getResourceData_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceData_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getResourceData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceData_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceData_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceData_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceData_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeBinary(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceByHash_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.withAlternateData<span class="pl-k">=</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">=</span><span class="pl-v">this</span>.withData<span class="pl-k">=</span><span class="pl-v">this</span>.contentHash<span class="pl-k">=</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.noteGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contentHash<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contentHash<span class="pl-k">=</span>a.contentHash),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withData<span class="pl-k">=</span>a.withData),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withRecognition<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.withRecognition<span class="pl-k">=</span>a.withRecognition),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.withAlternateData<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code js-file-line">(<span class="pl-v">this</span>.withAlternateData<span class="pl-k">=</span>a.withAlternateData))};<span class="pl-s3">NoteStore_getResourceByHash_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceByHash_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.contentHash<span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code js-file-line">Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.withAlternateData<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceByHash_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceByHash_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.noteGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentHash<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentHash<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contentHash<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeBinary(<span class="pl-v">this</span>.contentHash),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withData<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.withData),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withRecognition<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withRecognition<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.withRecognition),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withAlternateData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.withAlternateData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>withAlternateData<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.withAlternateData),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceByHash_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceByHash_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceByHash_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Resource</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceByHash_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceByHash_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getResourceRecognition_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceRecognition_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getResourceRecognition_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceRecognition_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceRecognition_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceRecognition_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceRecognition_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceRecognition_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceRecognition_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceRecognition_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeBinary(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getResourceAlternateData_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAlternateData_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getResourceAlternateData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAlternateData_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceAlternateData_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceAlternateData_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceAlternateData_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAlternateData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAlternateData_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceAlternateData_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeBinary(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getResourceAttributes_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAttributes_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getResourceAttributes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAttributes_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceAttributes_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code js-file-line"><span class="pl-en">NoteStore_getResourceAttributes_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getResourceAttributes_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAttributes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ResourceAttributes</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getResourceAttributes_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getResourceAttributes_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getPublicNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.publicUri<span class="pl-k">=</span><span class="pl-v">this</span>.userId<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userId<span class="pl-k">=</span>a.userId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.publicUri<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.publicUri<span class="pl-k">=</span>a.publicUri))};</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getPublicNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getPublicNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.userId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.publicUri<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getPublicNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getPublicNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.userId),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publicUri<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publicUri<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>publicUri<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.publicUri),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code js-file-line"><span class="pl-en">NoteStore_getPublicNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_getPublicNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getPublicNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getPublicNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getPublicNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_createSharedNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.sharedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sharedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sharedNotebook<span class="pl-k">=</span>a.sharedNotebook))};<span class="pl-s3">NoteStore_createSharedNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSharedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.sharedNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebook</span>,<span class="pl-v">this</span>.sharedNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSharedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createSharedNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sharedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.sharedNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code js-file-line"><span class="pl-en">NoteStore_createSharedNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_createSharedNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSharedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createSharedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createSharedNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateSharedNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.sharedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sharedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sharedNotebook<span class="pl-k">=</span>a.sharedNotebook))};<span class="pl-s3">NoteStore_updateSharedNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSharedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.sharedNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebook</span>,<span class="pl-v">this</span>.sharedNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSharedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateSharedNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sharedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.sharedNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateSharedNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_updateSharedNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSharedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateSharedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateSharedNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code js-file-line"><span class="pl-en">NoteStore_setSharedNotebookRecipientSettings_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.recipientSettings<span class="pl-k">=</span><span class="pl-v">this</span>.sharedNotebookId<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sharedNotebookId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sharedNotebookId<span class="pl-k">=</span>a.sharedNotebookId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recipientSettings<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recipientSettings<span class="pl-k">=</span>a.recipientSettings))};<span class="pl-s3">NoteStore_setSharedNotebookRecipientSettings_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setSharedNotebookRecipientSettings_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.sharedNotebookId<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.recipientSettings<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebookRecipientSettings</span>,<span class="pl-v">this</span>.recipientSettings.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setSharedNotebookRecipientSettings_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_setSharedNotebookRecipientSettings_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebookId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebookId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sharedNotebookId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">2</span>),a.writeI64(<span class="pl-v">this</span>.sharedNotebookId),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recipientSettings<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recipientSettings<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recipientSettings<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.recipientSettings.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code js-file-line"><span class="pl-en">NoteStore_setSharedNotebookRecipientSettings_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code js-file-line">a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_setSharedNotebookRecipientSettings_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setSharedNotebookRecipientSettings_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code js-file-line"><span class="pl-s3">NoteStore_setSharedNotebookRecipientSettings_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_setSharedNotebookRecipientSettings_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code js-file-line"><span class="pl-en">NoteStore_sendMessageToSharedNotebookMembers_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.recipients<span class="pl-k">=</span><span class="pl-v">this</span>.messageText<span class="pl-k">=</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.notebookGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.messageText<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.messageText<span class="pl-k">=</span>a.messageText),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recipients<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recipients<span class="pl-k">=</span>a.recipients))};<span class="pl-s3">NoteStore_sendMessageToSharedNotebookMembers_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code js-file-line"><span class="pl-s3">NoteStore_sendMessageToSharedNotebookMembers_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.messageText<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.recipients<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;</td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code js-file-line"><span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.recipients.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code js-file-line"><span class="pl-s3">NoteStore_sendMessageToSharedNotebookMembers_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_sendMessageToSharedNotebookMembers_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.notebookGuid),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.messageText<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.messageText<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>messageText<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.messageText),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recipients<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recipients){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recipients<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">4</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.recipients.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.recipients)<span class="pl-v">this</span>.recipients.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.recipients[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code js-file-line"><span class="pl-en">NoteStore_sendMessageToSharedNotebookMembers_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code js-file-line">a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_sendMessageToSharedNotebookMembers_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code js-file-line"><span class="pl-s3">NoteStore_sendMessageToSharedNotebookMembers_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code js-file-line"><span class="pl-s3">NoteStore_sendMessageToSharedNotebookMembers_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_sendMessageToSharedNotebookMembers_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listSharedNotebooks_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSharedNotebooks_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_listSharedNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSharedNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listSharedNotebooks_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code js-file-line"><span class="pl-en">NoteStore_listSharedNotebooks_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_listSharedNotebooks_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSharedNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebook</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listSharedNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listSharedNotebooks_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code js-file-line"><span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeSharedNotebooks_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sharedNotebookIds<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">=</span>a.sharedNotebookIds))};<span class="pl-s3">NoteStore_expungeSharedNotebooks_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSharedNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.sharedNotebookIds.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSharedNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeSharedNotebooks_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebookIds){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sharedNotebookIds<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">2</span>);a.writeListBegin(Thrift.Type.I64,<span class="pl-v">this</span>.sharedNotebookIds.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.sharedNotebookIds)<span class="pl-v">this</span>.sharedNotebookIds.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.sharedNotebookIds[c],a.writeI64(c));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeSharedNotebooks_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_expungeSharedNotebooks_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSharedNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeSharedNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeSharedNotebooks_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code js-file-line"><span class="pl-en">NoteStore_createLinkedNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.linkedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span>a.linkedNotebook))};<span class="pl-s3">NoteStore_createLinkedNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createLinkedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>,<span class="pl-v">this</span>.linkedNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createLinkedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createLinkedNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>linkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.linkedNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code js-file-line"><span class="pl-en">NoteStore_createLinkedNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_createLinkedNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createLinkedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code js-file-line"><span class="pl-s3">NoteStore_createLinkedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_createLinkedNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateLinkedNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.linkedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span>a.linkedNotebook))};<span class="pl-s3">NoteStore_updateLinkedNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateLinkedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.linkedNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>,<span class="pl-v">this</span>.linkedNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateLinkedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateLinkedNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>linkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.linkedNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code js-file-line"><span class="pl-en">NoteStore_updateLinkedNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_updateLinkedNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateLinkedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code js-file-line"><span class="pl-s3">NoteStore_updateLinkedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_updateLinkedNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_listLinkedNotebooks_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">NoteStore_listLinkedNotebooks_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listLinkedNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listLinkedNotebooks_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listLinkedNotebooks_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code js-file-line"><span class="pl-en">NoteStore_listLinkedNotebooks_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_listLinkedNotebooks_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listLinkedNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.success<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>;d.read(a);<span class="pl-v">this</span>.success.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code js-file-line"><span class="pl-s3">NoteStore_listLinkedNotebooks_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_listLinkedNotebooks_result<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">0</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.success.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.success)<span class="pl-v">this</span>.success.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.success[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code js-file-line"><span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeLinkedNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_expungeLinkedNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeLinkedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeLinkedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeLinkedNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code js-file-line"><span class="pl-en">NoteStore_expungeLinkedNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_expungeLinkedNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeLinkedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code js-file-line"><span class="pl-s3">NoteStore_expungeLinkedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_expungeLinkedNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">0</span>),a.writeI32(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_authenticateToSharedNotebook_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-v">this</span>.shareKey<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shareKey<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shareKey<span class="pl-k">=</span>a.shareKey),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken))};</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNotebook_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_authenticateToSharedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shareKey<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNotebook_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_authenticateToSharedNotebook_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareKey<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareKey<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shareKey<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.shareKey),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code js-file-line"><span class="pl-en">NoteStore_authenticateToSharedNotebook_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code js-file-line">a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_authenticateToSharedNotebook_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNotebook_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_authenticateToSharedNotebook_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_getSharedNotebookByAuth_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSharedNotebookByAuth_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_getSharedNotebookByAuth_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSharedNotebookByAuth_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSharedNotebookByAuth_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code js-file-line"><span class="pl-en">NoteStore_getSharedNotebookByAuth_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_getSharedNotebookByAuth_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSharedNotebookByAuth_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebook</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code js-file-line"><span class="pl-s3">NoteStore_getSharedNotebookByAuth_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_getSharedNotebookByAuth_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_emailNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.parameters<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.parameters<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.parameters<span class="pl-k">=</span>a.parameters))};</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code js-file-line"><span class="pl-s3">NoteStore_emailNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_emailNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.parameters<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteEmailParameters</span>,<span class="pl-v">this</span>.parameters.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code js-file-line"><span class="pl-s3">NoteStore_emailNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_emailNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.parameters<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.parameters<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>parameters<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.parameters.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code js-file-line"><span class="pl-en">NoteStore_emailNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};</td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code js-file-line"><span class="pl-s3">NoteStore_emailNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code js-file-line"><span class="pl-s3">NoteStore_emailNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code js-file-line"><span class="pl-s3">NoteStore_emailNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_emailNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_shareNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};<span class="pl-s3">NoteStore_shareNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code js-file-line"><span class="pl-s3">NoteStore_shareNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code js-file-line"><span class="pl-s3">NoteStore_shareNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_shareNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code js-file-line"><span class="pl-en">NoteStore_shareNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_shareNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code js-file-line"><span class="pl-s3">NoteStore_shareNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code js-file-line"><span class="pl-s3">NoteStore_shareNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_shareNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_stopSharingNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid))};</td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code js-file-line"><span class="pl-s3">NoteStore_stopSharingNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">NoteStore_stopSharingNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code js-file-line"><span class="pl-s3">NoteStore_stopSharingNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_stopSharingNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code js-file-line"><span class="pl-en">NoteStore_stopSharingNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code js-file-line"><span class="pl-s3">NoteStore_stopSharingNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code js-file-line"><span class="pl-s3">NoteStore_stopSharingNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code js-file-line"><span class="pl-s3">NoteStore_stopSharingNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_stopSharingNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStore_authenticateToSharedNote_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-v">this</span>.noteKey<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteKey<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteKey<span class="pl-k">=</span>a.noteKey),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken))};<span class="pl-s3">NoteStore_authenticateToSharedNote_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteKey<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNote_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_authenticateToSharedNote_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteKey<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteKey<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteKey<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.noteKey),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code js-file-line"><span class="pl-en">NoteStore_authenticateToSharedNote_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code js-file-line">(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">NoteStore_authenticateToSharedNote_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code js-file-line"><span class="pl-s3">NoteStore_authenticateToSharedNote_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_authenticateToSharedNote_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code js-file-line"><span class="pl-en">NoteStore_findRelated_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.resultSpec<span class="pl-k">=</span><span class="pl-v">this</span>.query<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.query<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.query<span class="pl-k">=</span>a.query),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.resultSpec<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.resultSpec<span class="pl-k">=</span>a.resultSpec))};<span class="pl-s3">NoteStore_findRelated_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findRelated_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.query<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RelatedQuery</span>,<span class="pl-v">this</span>.query.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.resultSpec<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RelatedResultSpec</span>,<span class="pl-v">this</span>.resultSpec.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findRelated_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findRelated_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.query<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.query<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>query<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.query.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resultSpec<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resultSpec<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>resultSpec<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.resultSpec.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code js-file-line"><span class="pl-en">NoteStore_findRelated_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code js-file-line">(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException))};<span class="pl-s3">NoteStore_findRelated_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findRelated_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RelatedResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code js-file-line">Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code js-file-line"><span class="pl-s3">NoteStore_findRelated_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteStore_findRelated_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteStoreClient</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.<span class="pl-sc">input</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.output<span class="pl-k">=!</span>c<span class="pl-k">?</span>a<span class="pl-k">:</span>c;<span class="pl-v">this</span>.seqid<span class="pl-k">=</span><span class="pl-c1">0</span>};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getSyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getSyncState(a),<span class="pl-v">this</span>.recv_getSyncState();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getSyncState(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getSyncState)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getSyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getSyncState<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSyncState_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getSyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSyncState_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getSyncState failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getSyncStateWithMetrics</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getSyncStateWithMetrics(a,c),<span class="pl-v">this</span>.recv_getSyncStateWithMetrics();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getSyncStateWithMetrics(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getSyncStateWithMetrics)};</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getSyncStateWithMetrics</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getSyncStateWithMetrics<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSyncStateWithMetrics_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.clientMetrics<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getSyncStateWithMetrics</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSyncStateWithMetrics_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getSyncStateWithMetrics failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getSyncChunk(a,c,b,d),<span class="pl-v">this</span>.recv_getSyncChunk();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_getSyncChunk(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_getSyncChunk)};</td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getSyncChunk<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSyncChunk_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.afterUSN<span class="pl-k">=</span>c;f.maxEntries<span class="pl-k">=</span>b;f.fullSyncOnly<span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSyncChunk_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getSyncChunk failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getFilteredSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getFilteredSyncChunk(a,c,b,d),<span class="pl-v">this</span>.recv_getFilteredSyncChunk();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_getFilteredSyncChunk(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_getFilteredSyncChunk)};</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getFilteredSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getFilteredSyncChunk<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getFilteredSyncChunk_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.afterUSN<span class="pl-k">=</span>c;f.maxEntries<span class="pl-k">=</span>b;f.filter<span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getFilteredSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getFilteredSyncChunk_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getFilteredSyncChunk failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getLinkedNotebookSyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getLinkedNotebookSyncState(a,c),<span class="pl-v">this</span>.recv_getLinkedNotebookSyncState();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getLinkedNotebookSyncState(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getLinkedNotebookSyncState)};</td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getLinkedNotebookSyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getLinkedNotebookSyncState<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getLinkedNotebookSyncState_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.linkedNotebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getLinkedNotebookSyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getLinkedNotebookSyncState_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getLinkedNotebookSyncState failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getLinkedNotebookSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getLinkedNotebookSyncChunk(a,c,b,d,e),<span class="pl-v">this</span>.recv_getLinkedNotebookSyncChunk();<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.send_getLinkedNotebookSyncChunk(a,c,b,d,e,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,g,arguments,<span class="pl-v">this</span>.recv_getLinkedNotebookSyncChunk)};</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getLinkedNotebookSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getLinkedNotebookSyncChunk<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getLinkedNotebookSyncChunk_args</span>;g.authenticationToken<span class="pl-k">=</span>a;g.linkedNotebook<span class="pl-k">=</span>c;g.afterUSN<span class="pl-k">=</span>b;g.maxEntries<span class="pl-k">=</span>d;g.fullSyncOnly<span class="pl-k">=</span>e;g.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(f)};</td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getLinkedNotebookSyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getLinkedNotebookSyncChunk_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getLinkedNotebookSyncChunk failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listNotebooks(a),<span class="pl-v">this</span>.recv_listNotebooks();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_listNotebooks(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_listNotebooks)};</td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listNotebooks_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listNotebooks_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listNotebooks failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNotebook(a,c),<span class="pl-v">this</span>.recv_getNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getNotebook)};</td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getDefaultNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getDefaultNotebook(a),<span class="pl-v">this</span>.recv_getDefaultNotebook();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getDefaultNotebook(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getDefaultNotebook)};</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getDefaultNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getDefaultNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getDefaultNotebook_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getDefaultNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getDefaultNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getDefaultNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">createNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_createNotebook(a,c),<span class="pl-v">this</span>.recv_createNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_createNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_createNotebook)};</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_createNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>createNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.notebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_createNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>createNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateNotebook(a,c),<span class="pl-v">this</span>.recv_updateNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateNotebook)};</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.notebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeNotebook(a,c),<span class="pl-v">this</span>.recv_expungeNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeNotebook)};</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listTags</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listTags(a),<span class="pl-v">this</span>.recv_listTags();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_listTags(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_listTags)};</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listTags</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listTags<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listTags_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listTags</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listTags_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listTags failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listTagsByNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listTagsByNotebook(a,c),<span class="pl-v">this</span>.recv_listTagsByNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_listTagsByNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_listTagsByNotebook)};</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listTagsByNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listTagsByNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listTagsByNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.notebookGuid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listTagsByNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listTagsByNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listTagsByNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getTag(a,c),<span class="pl-v">this</span>.recv_getTag();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getTag(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getTag)};</td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getTag<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getTag_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getTag_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getTag failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">createTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_createTag(a,c),<span class="pl-v">this</span>.recv_createTag();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_createTag(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_createTag)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_createTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>createTag<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createTag_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.tag<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_createTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createTag_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>createTag failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateTag(a,c),<span class="pl-v">this</span>.recv_updateTag();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateTag(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateTag)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateTag<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateTag_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.tag<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateTag_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateTag failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">untagAll</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-v">this</span>.send_untagAll(a,c),<span class="pl-v">this</span>.recv_untagAll();<span class="pl-k">else</span>{<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_untagAll(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_untagAll)}};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_untagAll</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>untagAll<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_untagAll_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_untagAll</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_untagAll_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;};</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeTag(a,c),<span class="pl-v">this</span>.recv_expungeTag();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeTag(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeTag)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeTag<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeTag_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeTag</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeTag_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeTag failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listSearches</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listSearches(a),<span class="pl-v">this</span>.recv_listSearches();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_listSearches(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_listSearches)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listSearches</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listSearches<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listSearches_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listSearches</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listSearches_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listSearches failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getSearch(a,c),<span class="pl-v">this</span>.recv_getSearch();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getSearch(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getSearch)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getSearch<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSearch_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSearch_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getSearch failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">createSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_createSearch(a,c),<span class="pl-v">this</span>.recv_createSearch();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_createSearch(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_createSearch)};</td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_createSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>createSearch<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createSearch_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.search<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_createSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createSearch_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>createSearch failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateSearch(a,c),<span class="pl-v">this</span>.recv_updateSearch();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateSearch(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateSearch)};</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSearch<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateSearch_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.search<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateSearch_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateSearch failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeSearch(a,c),<span class="pl-v">this</span>.recv_expungeSearch();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeSearch(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeSearch)};</td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeSearch<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeSearch_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeSearch_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeSearch failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">findNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_findNotes(a,c,b,d),<span class="pl-v">this</span>.recv_findNotes();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_findNotes(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_findNotes)};</td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_findNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>findNotes<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNotes_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.filter<span class="pl-k">=</span>c;f.offset<span class="pl-k">=</span>b;f.maxNotes<span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_findNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNotes_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>findNotes failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">findNoteOffset</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_findNoteOffset(a,c,b),<span class="pl-v">this</span>.recv_findNoteOffset();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_findNoteOffset(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_findNoteOffset)};</td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_findNoteOffset</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>findNoteOffset<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNoteOffset_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.filter<span class="pl-k">=</span>c;e.guid<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_findNoteOffset</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNoteOffset_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>findNoteOffset failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">findNotesMetadata</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_findNotesMetadata(a,c,b,d,e),<span class="pl-v">this</span>.recv_findNotesMetadata();<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.send_findNotesMetadata(a,c,b,d,e,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,g,arguments,<span class="pl-v">this</span>.recv_findNotesMetadata)};</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_findNotesMetadata</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>findNotesMetadata<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNotesMetadata_args</span>;g.authenticationToken<span class="pl-k">=</span>a;g.filter<span class="pl-k">=</span>c;g.offset<span class="pl-k">=</span>b;g.maxNotes<span class="pl-k">=</span>d;g.resultSpec<span class="pl-k">=</span>e;g.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(f)};</td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_findNotesMetadata</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNotesMetadata_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>findNotesMetadata failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">findNoteCounts</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_findNoteCounts(a,c,b),<span class="pl-v">this</span>.recv_findNoteCounts();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_findNoteCounts(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_findNoteCounts)};</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_findNoteCounts</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>findNoteCounts<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNoteCounts_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.filter<span class="pl-k">=</span>c;e.withTrash<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_findNoteCounts</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findNoteCounts_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>findNoteCounts failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNote(a,c,b,d,e,f),<span class="pl-v">this</span>.recv_getNote();<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNote(a,c,b,d,e,f,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,h,arguments,<span class="pl-v">this</span>.recv_getNote)};</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNote_args</span>;h.authenticationToken<span class="pl-k">=</span>a;h.guid<span class="pl-k">=</span>c;h.withContent<span class="pl-k">=</span>b;h.withResourcesData<span class="pl-k">=</span>d;h.withResourcesRecognition<span class="pl-k">=</span>e;h.withResourcesAlternateData<span class="pl-k">=</span>f;h.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(g)};</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteApplicationData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteApplicationData(a,c),<span class="pl-v">this</span>.recv_getNoteApplicationData();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteApplicationData(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getNoteApplicationData)};</td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteApplicationData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteApplicationData<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteApplicationData_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteApplicationData</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteApplicationData_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteApplicationData failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteApplicationDataEntry(a,c,b),<span class="pl-v">this</span>.recv_getNoteApplicationDataEntry();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteApplicationDataEntry(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_getNoteApplicationDataEntry)};</td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteApplicationDataEntry<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteApplicationDataEntry_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.guid<span class="pl-k">=</span>c;e.key<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteApplicationDataEntry_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteApplicationDataEntry failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_setNoteApplicationDataEntry(a,c,b,d),<span class="pl-v">this</span>.recv_setNoteApplicationDataEntry();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_setNoteApplicationDataEntry(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_setNoteApplicationDataEntry)};</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_setNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>setNoteApplicationDataEntry<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_setNoteApplicationDataEntry_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.guid<span class="pl-k">=</span>c;f.key<span class="pl-k">=</span>b;f.<span class="pl-sc">value</span><span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_setNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_setNoteApplicationDataEntry_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>setNoteApplicationDataEntry failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">unsetNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_unsetNoteApplicationDataEntry(a,c,b),<span class="pl-v">this</span>.recv_unsetNoteApplicationDataEntry();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_unsetNoteApplicationDataEntry(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_unsetNoteApplicationDataEntry)};</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_unsetNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>unsetNoteApplicationDataEntry<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_unsetNoteApplicationDataEntry_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.guid<span class="pl-k">=</span>c;e.key<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_unsetNoteApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_unsetNoteApplicationDataEntry_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code js-file-line">a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>unsetNoteApplicationDataEntry failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteContent</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteContent(a,c),<span class="pl-v">this</span>.recv_getNoteContent();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteContent(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getNoteContent)};</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteContent</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteContent<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteContent_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteContent</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteContent_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteContent failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteSearchText</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteSearchText(a,c,b,d),<span class="pl-v">this</span>.recv_getNoteSearchText();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteSearchText(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_getNoteSearchText)};</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteSearchText</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteSearchText<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteSearchText_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.guid<span class="pl-k">=</span>c;f.noteOnly<span class="pl-k">=</span>b;f.tokenizeForIndexing<span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteSearchText</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteSearchText_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteSearchText failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceSearchText</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceSearchText(a,c),<span class="pl-v">this</span>.recv_getResourceSearchText();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceSearchText(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getResourceSearchText)};</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceSearchText</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceSearchText<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceSearchText_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceSearchText</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceSearchText_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceSearchText failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteTagNames</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteTagNames(a,c),<span class="pl-v">this</span>.recv_getNoteTagNames();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteTagNames(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getNoteTagNames)};</td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteTagNames</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteTagNames<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteTagNames_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteTagNames</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteTagNames_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteTagNames failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">createNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_createNote(a,c),<span class="pl-v">this</span>.recv_createNote();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_createNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_createNote)};</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_createNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>createNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.note<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_createNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>createNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateNote(a,c),<span class="pl-v">this</span>.recv_updateNote();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateNote)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.note<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">deleteNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_deleteNote(a,c),<span class="pl-v">this</span>.recv_deleteNote();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_deleteNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_deleteNote)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_deleteNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deleteNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_deleteNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_deleteNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_deleteNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>deleteNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeNote(a,c),<span class="pl-v">this</span>.recv_expungeNote();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeNote)};</td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeNotes(a,c),<span class="pl-v">this</span>.recv_expungeNotes();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeNotes(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeNotes)};</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeNotes<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeNotes_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.noteGuids<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeNotes_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeNotes failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeInactiveNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeInactiveNotes(a),<span class="pl-v">this</span>.recv_expungeInactiveNotes();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeInactiveNotes(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_expungeInactiveNotes)};</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeInactiveNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeInactiveNotes<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeInactiveNotes_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeInactiveNotes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeInactiveNotes_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeInactiveNotes failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">copyNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_copyNote(a,c,b),<span class="pl-v">this</span>.recv_copyNote();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_copyNote(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_copyNote)};</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_copyNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>copyNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_copyNote_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.noteGuid<span class="pl-k">=</span>c;e.toNotebookGuid<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_copyNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_copyNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>copyNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listNoteVersions</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listNoteVersions(a,c),<span class="pl-v">this</span>.recv_listNoteVersions();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_listNoteVersions(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_listNoteVersions)};</td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listNoteVersions</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listNoteVersions<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listNoteVersions_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.noteGuid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listNoteVersions</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listNoteVersions_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listNoteVersions failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteVersion(a,c,b,d,e,f),<span class="pl-v">this</span>.recv_getNoteVersion();<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteVersion(a,c,b,d,e,f,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,h,arguments,<span class="pl-v">this</span>.recv_getNoteVersion)};</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteVersion<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteVersion_args</span>;h.authenticationToken<span class="pl-k">=</span>a;h.noteGuid<span class="pl-k">=</span>c;h.updateSequenceNum<span class="pl-k">=</span>b;h.withResourcesData<span class="pl-k">=</span>d;h.withResourcesRecognition<span class="pl-k">=</span>e;h.withResourcesAlternateData<span class="pl-k">=</span>f;h.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(g)};</td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getNoteVersion_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteVersion failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResource</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResource(a,c,b,d,e,f),<span class="pl-v">this</span>.recv_getResource();<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResource(a,c,b,d,e,f,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,h,arguments,<span class="pl-v">this</span>.recv_getResource)};</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResource</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResource<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResource_args</span>;h.authenticationToken<span class="pl-k">=</span>a;h.guid<span class="pl-k">=</span>c;h.withData<span class="pl-k">=</span>b;h.withRecognition<span class="pl-k">=</span>d;h.withAttributes<span class="pl-k">=</span>e;h.withAlternateData<span class="pl-k">=</span>f;h.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(g)};</td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResource</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResource_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResource failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceApplicationData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceApplicationData(a,c),<span class="pl-v">this</span>.recv_getResourceApplicationData();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceApplicationData(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getResourceApplicationData)};</td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceApplicationData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceApplicationData<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceApplicationData_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceApplicationData</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceApplicationData_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceApplicationData failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceApplicationDataEntry(a,c,b),<span class="pl-v">this</span>.recv_getResourceApplicationDataEntry();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceApplicationDataEntry(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_getResourceApplicationDataEntry)};</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceApplicationDataEntry<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceApplicationDataEntry_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.guid<span class="pl-k">=</span>c;e.key<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceApplicationDataEntry_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code js-file-line">a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceApplicationDataEntry failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_setResourceApplicationDataEntry(a,c,b,d),<span class="pl-v">this</span>.recv_setResourceApplicationDataEntry();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_setResourceApplicationDataEntry(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_setResourceApplicationDataEntry)};</td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_setResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>setResourceApplicationDataEntry<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_setResourceApplicationDataEntry_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.guid<span class="pl-k">=</span>c;f.key<span class="pl-k">=</span>b;f.<span class="pl-sc">value</span><span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_setResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_setResourceApplicationDataEntry_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code js-file-line">a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>setResourceApplicationDataEntry failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">unsetResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_unsetResourceApplicationDataEntry(a,c,b),<span class="pl-v">this</span>.recv_unsetResourceApplicationDataEntry();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_unsetResourceApplicationDataEntry(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_unsetResourceApplicationDataEntry)};</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_unsetResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>unsetResourceApplicationDataEntry<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_unsetResourceApplicationDataEntry_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.guid<span class="pl-k">=</span>c;e.key<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_unsetResourceApplicationDataEntry</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_unsetResourceApplicationDataEntry_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;</td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>unsetResourceApplicationDataEntry failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateResource</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateResource(a,c),<span class="pl-v">this</span>.recv_updateResource();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateResource(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateResource)};</td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateResource</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateResource<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateResource_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.resource<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateResource</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateResource_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateResource failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceData(a,c),<span class="pl-v">this</span>.recv_getResourceData();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceData(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getResourceData)};</td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceData<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceData_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceData</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceData_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceData failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceByHash</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceByHash(a,c,b,d,e,f),<span class="pl-v">this</span>.recv_getResourceByHash();<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceByHash(a,c,b,d,e,f,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,h,arguments,<span class="pl-v">this</span>.recv_getResourceByHash)};</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceByHash</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceByHash<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceByHash_args</span>;h.authenticationToken<span class="pl-k">=</span>a;h.noteGuid<span class="pl-k">=</span>c;h.contentHash<span class="pl-k">=</span>b;h.withData<span class="pl-k">=</span>d;h.withRecognition<span class="pl-k">=</span>e;h.withAlternateData<span class="pl-k">=</span>f;h.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(g)};</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceByHash</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceByHash_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceByHash failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceRecognition</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceRecognition(a,c),<span class="pl-v">this</span>.recv_getResourceRecognition();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceRecognition(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getResourceRecognition)};</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceRecognition</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceRecognition<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceRecognition_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceRecognition</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceRecognition_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceRecognition failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceAlternateData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceAlternateData(a,c),<span class="pl-v">this</span>.recv_getResourceAlternateData();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceAlternateData(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getResourceAlternateData)};</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceAlternateData</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceAlternateData<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceAlternateData_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceAlternateData</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceAlternateData_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceAlternateData failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getResourceAttributes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getResourceAttributes(a,c),<span class="pl-v">this</span>.recv_getResourceAttributes();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getResourceAttributes(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getResourceAttributes)};</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getResourceAttributes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceAttributes<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceAttributes_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getResourceAttributes</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getResourceAttributes_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getResourceAttributes failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getPublicNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getPublicNotebook(a,c),<span class="pl-v">this</span>.recv_getPublicNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_getPublicNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_getPublicNotebook)};</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getPublicNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getPublicNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getPublicNotebook_args</span>;d.userId<span class="pl-k">=</span>a;d.publicUri<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getPublicNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getPublicNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getPublicNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">createSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_createSharedNotebook(a,c),<span class="pl-v">this</span>.recv_createSharedNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_createSharedNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_createSharedNotebook)};</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_createSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>createSharedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createSharedNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.sharedNotebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_createSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createSharedNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>createSharedNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateSharedNotebook(a,c),<span class="pl-v">this</span>.recv_updateSharedNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateSharedNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateSharedNotebook)};</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSharedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateSharedNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.sharedNotebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateSharedNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateSharedNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">setSharedNotebookRecipientSettings</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_setSharedNotebookRecipientSettings(a,c,b),<span class="pl-v">this</span>.recv_setSharedNotebookRecipientSettings();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_setSharedNotebookRecipientSettings(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_setSharedNotebookRecipientSettings)};</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_setSharedNotebookRecipientSettings</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>setSharedNotebookRecipientSettings<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_setSharedNotebookRecipientSettings_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.sharedNotebookId<span class="pl-k">=</span>c;e.recipientSettings<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_setSharedNotebookRecipientSettings</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_setSharedNotebookRecipientSettings_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>setSharedNotebookRecipientSettings failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">sendMessageToSharedNotebookMembers</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_sendMessageToSharedNotebookMembers(a,c,b,d),<span class="pl-v">this</span>.recv_sendMessageToSharedNotebookMembers();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_sendMessageToSharedNotebookMembers(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_sendMessageToSharedNotebookMembers)};</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_sendMessageToSharedNotebookMembers</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sendMessageToSharedNotebookMembers<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_sendMessageToSharedNotebookMembers_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.notebookGuid<span class="pl-k">=</span>c;f.messageText<span class="pl-k">=</span>b;f.recipients<span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_sendMessageToSharedNotebookMembers</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_sendMessageToSharedNotebookMembers_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>sendMessageToSharedNotebookMembers failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listSharedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listSharedNotebooks(a),<span class="pl-v">this</span>.recv_listSharedNotebooks();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_listSharedNotebooks(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_listSharedNotebooks)};</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listSharedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listSharedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listSharedNotebooks_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listSharedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listSharedNotebooks_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listSharedNotebooks failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeSharedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeSharedNotebooks(a,c),<span class="pl-v">this</span>.recv_expungeSharedNotebooks();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeSharedNotebooks(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeSharedNotebooks)};</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeSharedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeSharedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeSharedNotebooks_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.sharedNotebookIds<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeSharedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeSharedNotebooks_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeSharedNotebooks failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">createLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_createLinkedNotebook(a,c),<span class="pl-v">this</span>.recv_createLinkedNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_createLinkedNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_createLinkedNotebook)};</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_createLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>createLinkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createLinkedNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.linkedNotebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_createLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_createLinkedNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>createLinkedNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">updateLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_updateLinkedNotebook(a,c),<span class="pl-v">this</span>.recv_updateLinkedNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_updateLinkedNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_updateLinkedNotebook)};</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_updateLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateLinkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateLinkedNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.linkedNotebook<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_updateLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_updateLinkedNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>updateLinkedNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">listLinkedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_listLinkedNotebooks(a),<span class="pl-v">this</span>.recv_listLinkedNotebooks();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_listLinkedNotebooks(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_listLinkedNotebooks)};</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_listLinkedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>listLinkedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listLinkedNotebooks_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_listLinkedNotebooks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_listLinkedNotebooks_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>listLinkedNotebooks failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">expungeLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_expungeLinkedNotebook(a,c),<span class="pl-v">this</span>.recv_expungeLinkedNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_expungeLinkedNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_expungeLinkedNotebook)};</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_expungeLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeLinkedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeLinkedNotebook_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_expungeLinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_expungeLinkedNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>expungeLinkedNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">authenticateToSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_authenticateToSharedNotebook(a,c),<span class="pl-v">this</span>.recv_authenticateToSharedNotebook();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_authenticateToSharedNotebook(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_authenticateToSharedNotebook)};</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_authenticateToSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateToSharedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_authenticateToSharedNotebook_args</span>;d.shareKey<span class="pl-k">=</span>a;d.authenticationToken<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_authenticateToSharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_authenticateToSharedNotebook_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code js-file-line">a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateToSharedNotebook failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getSharedNotebookByAuth</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getSharedNotebookByAuth(a),<span class="pl-v">this</span>.recv_getSharedNotebookByAuth();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getSharedNotebookByAuth(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getSharedNotebookByAuth)};</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getSharedNotebookByAuth</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getSharedNotebookByAuth<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSharedNotebookByAuth_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getSharedNotebookByAuth</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_getSharedNotebookByAuth_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getSharedNotebookByAuth failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">emailNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-v">this</span>.send_emailNote(a,c),<span class="pl-v">this</span>.recv_emailNote();<span class="pl-k">else</span>{<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_emailNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_emailNote)}};</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_emailNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>emailNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_emailNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.parameters<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_emailNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_emailNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;};</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">shareNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_shareNote(a,c),<span class="pl-v">this</span>.recv_shareNote();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_shareNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_shareNote)};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_shareNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shareNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_shareNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_shareNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_shareNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>shareNote failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code js-file-line">};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">stopSharingNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-v">this</span>.send_stopSharingNote(a,c),<span class="pl-v">this</span>.recv_stopSharingNote();<span class="pl-k">else</span>{<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.send_stopSharingNote(a,c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,d,arguments,<span class="pl-v">this</span>.recv_stopSharingNote)}};</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_stopSharingNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>stopSharingNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_stopSharingNote_args</span>;d.authenticationToken<span class="pl-k">=</span>a;d.guid<span class="pl-k">=</span>c;d.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(b)};</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_stopSharingNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_stopSharingNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;};</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">authenticateToSharedNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_authenticateToSharedNote(a,c,b),<span class="pl-v">this</span>.recv_authenticateToSharedNote();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_authenticateToSharedNote(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_authenticateToSharedNote)};</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_authenticateToSharedNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateToSharedNote<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_authenticateToSharedNote_args</span>;e.guid<span class="pl-k">=</span>a;e.noteKey<span class="pl-k">=</span>c;e.authenticationToken<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_authenticateToSharedNote</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_authenticateToSharedNote_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateToSharedNote failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">findRelated</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_findRelated(a,c,b),<span class="pl-v">this</span>.recv_findRelated();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_findRelated(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_findRelated)};</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_findRelated</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>findRelated<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findRelated_args</span>;e.authenticationToken<span class="pl-k">=</span>a;e.query<span class="pl-k">=</span>c;e.resultSpec<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code js-file-line"><span class="pl-s3">NoteStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_findRelated</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteStore_findRelated_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>findRelated failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code js-file-line">};<span class="pl-en">SyncState</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.uploaded<span class="pl-k">=</span><span class="pl-v">this</span>.updateCount<span class="pl-k">=</span><span class="pl-v">this</span>.fullSyncBefore<span class="pl-k">=</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.currentTime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.currentTime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.fullSyncBefore<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.fullSyncBefore<span class="pl-k">=</span>a.fullSyncBefore),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.updateCount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.uploaded<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.uploaded<span class="pl-k">=</span>a.uploaded))};<span class="pl-s3">SyncState</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code js-file-line"><span class="pl-s3">SyncState</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.fullSyncBefore<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.uploaded<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code js-file-line"><span class="pl-s3">SyncState</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SyncState<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>currentTime<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.currentTime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullSyncBefore<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullSyncBefore<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>fullSyncBefore<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">2</span>),a.writeI64(<span class="pl-v">this</span>.fullSyncBefore),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.updateCount),</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploaded<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploaded<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>uploaded<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">4</span>),a.writeI64(<span class="pl-v">this</span>.uploaded),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code js-file-line"><span class="pl-en">SyncChunk</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.expungedLinkedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.linkedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.expungedSearches<span class="pl-k">=</span><span class="pl-v">this</span>.expungedTags<span class="pl-k">=</span><span class="pl-v">this</span>.expungedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.expungedNotes<span class="pl-k">=</span><span class="pl-v">this</span>.resources<span class="pl-k">=</span><span class="pl-v">this</span>.searches<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">=</span><span class="pl-v">this</span>.notebooks<span class="pl-k">=</span><span class="pl-v">this</span>.notes<span class="pl-k">=</span><span class="pl-v">this</span>.updateCount<span class="pl-k">=</span><span class="pl-v">this</span>.chunkHighUSN<span class="pl-k">=</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.currentTime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.currentTime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.chunkHighUSN<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.chunkHighUSN<span class="pl-k">=</span>a.chunkHighUSN),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.updateCount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notes<span class="pl-k">=</span>a.notes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code js-file-line">a.notebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebooks<span class="pl-k">=</span>a.notebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">tags</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">=</span>a.<span class="pl-sc">tags</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.searches<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.searches<span class="pl-k">=</span>a.searches),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.resources<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.resources<span class="pl-k">=</span>a.resources),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expungedNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expungedNotes<span class="pl-k">=</span>a.expungedNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expungedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expungedNotebooks<span class="pl-k">=</span>a.expungedNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expungedTags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expungedTags<span class="pl-k">=</span>a.expungedTags),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expungedSearches<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expungedSearches<span class="pl-k">=</span>a.expungedSearches),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.linkedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.linkedNotebooks<span class="pl-k">=</span>a.linkedNotebooks),</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expungedLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expungedLinkedNotebooks<span class="pl-k">=</span>a.expungedLinkedNotebooks))};<span class="pl-s3">SyncChunk</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code js-file-line"><span class="pl-s3">SyncChunk</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.chunkHighUSN<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notes<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>;d.read(a);<span class="pl-v">this</span>.notes.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,d.read(a),<span class="pl-v">this</span>.notebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>,d.read(a),<span class="pl-v">this</span>.<span class="pl-sc">tags</span>.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.searches<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearch</span>,d.read(a),<span class="pl-v">this</span>.searches.<span class="pl-s3">push</span>(d);</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code js-file-line">a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.resources<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Resource</span>,d.read(a),<span class="pl-v">this</span>.resources.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.expungedNotes<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.expungedNotes.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.expungedNotebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code js-file-line"><span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.expungedNotebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.expungedTags<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.expungedTags.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.expungedSearches<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.expungedSearches.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.linkedNotebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LinkedNotebook</span>,d.read(a),<span class="pl-v">this</span>.linkedNotebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.expungedLinkedNotebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.expungedLinkedNotebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code js-file-line"><span class="pl-s3">SyncChunk</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SyncChunk<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>currentTime<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.currentTime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.chunkHighUSN<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.chunkHighUSN<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>chunkHighUSN<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.chunkHighUSN),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.updateCount),</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notes<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">4</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.notes.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.notes)<span class="pl-v">this</span>.notes.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.notes[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">5</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.notebooks.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.notebooks)<span class="pl-v">this</span>.notebooks.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code js-file-line">(b<span class="pl-k">=</span><span class="pl-v">this</span>.notebooks[b],b.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span>){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tags<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">6</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.<span class="pl-sc">tags</span>.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> d <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-sc">tags</span>)<span class="pl-v">this</span>.<span class="pl-sc">tags</span>.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span>[d],d.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.searches<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.searches){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>searches<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">7</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.searches.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> e <span class="pl-k">in</span> <span class="pl-v">this</span>.searches)<span class="pl-v">this</span>.searches.hasOwnProperty(e)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code js-file-line">(e<span class="pl-k">=</span><span class="pl-v">this</span>.searches[e],e.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resources<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resources){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">8</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.resources.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> f <span class="pl-k">in</span> <span class="pl-v">this</span>.resources)<span class="pl-v">this</span>.resources.hasOwnProperty(f)<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-v">this</span>.resources[f],f.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedNotes){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungedNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">9</span>);a.writeListBegin(Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code js-file-line"><span class="pl-v">this</span>.expungedNotes.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> g <span class="pl-k">in</span> <span class="pl-v">this</span>.expungedNotes)<span class="pl-v">this</span>.expungedNotes.hasOwnProperty(g)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-v">this</span>.expungedNotes[g],a.writeString(g));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedNotebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">10</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.expungedNotebooks.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> h <span class="pl-k">in</span> <span class="pl-v">this</span>.expungedNotebooks)<span class="pl-v">this</span>.expungedNotebooks.hasOwnProperty(h)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-v">this</span>.expungedNotebooks[h],a.writeString(h));a.writeListEnd();</td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code js-file-line">a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedTags<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedTags){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungedTags<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">11</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.expungedTags.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> j <span class="pl-k">in</span> <span class="pl-v">this</span>.expungedTags)<span class="pl-v">this</span>.expungedTags.hasOwnProperty(j)<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-v">this</span>.expungedTags[j],a.writeString(j));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedSearches<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedSearches){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungedSearches<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">12</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.expungedSearches.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> k <span class="pl-k">in</span> <span class="pl-v">this</span>.expungedSearches)<span class="pl-v">this</span>.expungedSearches.hasOwnProperty(k)<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-v">this</span>.expungedSearches[k],a.writeString(k));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.linkedNotebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>linkedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">13</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.linkedNotebooks.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> l <span class="pl-k">in</span> <span class="pl-v">this</span>.linkedNotebooks)<span class="pl-v">this</span>.linkedNotebooks.hasOwnProperty(l)<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-v">this</span>.linkedNotebooks[l],l.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedLinkedNotebooks<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungedLinkedNotebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungedLinkedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">14</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.expungedLinkedNotebooks.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> m <span class="pl-k">in</span> <span class="pl-v">this</span>.expungedLinkedNotebooks)<span class="pl-v">this</span>.expungedLinkedNotebooks.hasOwnProperty(m)<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-v">this</span>.expungedLinkedNotebooks[m],a.writeString(m));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code js-file-line"><span class="pl-en">SyncChunkFilter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.requireNoteContentClass<span class="pl-k">=</span><span class="pl-v">this</span>.includeNoteResourceApplicationDataFullMap<span class="pl-k">=</span><span class="pl-v">this</span>.includeResourceApplicationDataFullMap<span class="pl-k">=</span><span class="pl-v">this</span>.includeNoteApplicationDataFullMap<span class="pl-k">=</span><span class="pl-v">this</span>.includeExpunged<span class="pl-k">=</span><span class="pl-v">this</span>.includeLinkedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.includeResources<span class="pl-k">=</span><span class="pl-v">this</span>.includeSearches<span class="pl-k">=</span><span class="pl-v">this</span>.includeTags<span class="pl-k">=</span><span class="pl-v">this</span>.includeNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.includeNoteAttributes<span class="pl-k">=</span><span class="pl-v">this</span>.includeNoteResources<span class="pl-k">=</span><span class="pl-v">this</span>.includeNotes<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNotes<span class="pl-k">=</span>a.includeNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNoteResources<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNoteResources<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code js-file-line">a.includeNoteResources),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNoteAttributes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNoteAttributes<span class="pl-k">=</span>a.includeNoteAttributes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNotebooks<span class="pl-k">=</span>a.includeNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeTags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeTags<span class="pl-k">=</span>a.includeTags),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeSearches<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeSearches<span class="pl-k">=</span>a.includeSearches),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeResources<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeResources<span class="pl-k">=</span>a.includeResources),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeLinkedNotebooks<span class="pl-k">=</span>a.includeLinkedNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeExpunged<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeExpunged<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code js-file-line">a.includeExpunged),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNoteApplicationDataFullMap<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNoteApplicationDataFullMap<span class="pl-k">=</span>a.includeNoteApplicationDataFullMap),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeResourceApplicationDataFullMap<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeResourceApplicationDataFullMap<span class="pl-k">=</span>a.includeResourceApplicationDataFullMap),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNoteResourceApplicationDataFullMap<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNoteResourceApplicationDataFullMap<span class="pl-k">=</span>a.includeNoteResourceApplicationDataFullMap),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.requireNoteContentClass<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.requireNoteContentClass<span class="pl-k">=</span>a.requireNoteContentClass))};</td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code js-file-line"><span class="pl-s3">SyncChunkFilter</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code js-file-line"><span class="pl-s3">SyncChunkFilter</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNoteResources<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNoteAttributes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code js-file-line"><span class="pl-v">this</span>.includeTags<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeSearches<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeResources<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeLinkedNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeExpunged<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNoteApplicationDataFullMap<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code js-file-line">Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeResourceApplicationDataFullMap<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNoteResourceApplicationDataFullMap<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.requireNoteContentClass<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code js-file-line"><span class="pl-s3">SyncChunkFilter</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SyncChunkFilter<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">1</span>),a.writeBool(<span class="pl-v">this</span>.includeNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteResources<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteResources<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNoteResources<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.includeNoteResources),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteAttributes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteAttributes<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNoteAttributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.includeNoteAttributes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.includeNotebooks),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeTags<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeTags<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeTags<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.includeTags),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeSearches<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeSearches<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeSearches<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.includeSearches),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeResources<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeResources<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeResources<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.includeResources),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeLinkedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeLinkedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.includeLinkedNotebooks),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeExpunged<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeExpunged<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeExpunged<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">9</span>),a.writeBool(<span class="pl-v">this</span>.includeExpunged),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteApplicationDataFullMap<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteApplicationDataFullMap<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNoteApplicationDataFullMap<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">10</span>),a.writeBool(<span class="pl-v">this</span>.includeNoteApplicationDataFullMap),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeResourceApplicationDataFullMap<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeResourceApplicationDataFullMap<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeResourceApplicationDataFullMap<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">12</span>),a.writeBool(<span class="pl-v">this</span>.includeResourceApplicationDataFullMap),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteResourceApplicationDataFullMap<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNoteResourceApplicationDataFullMap<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNoteResourceApplicationDataFullMap<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">13</span>),a.writeBool(<span class="pl-v">this</span>.includeNoteResourceApplicationDataFullMap),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.requireNoteContentClass<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.requireNoteContentClass<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>requireNoteContentClass<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code js-file-line"><span class="pl-c1">11</span>),a.writeString(<span class="pl-v">this</span>.requireNoteContentClass),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code js-file-line"><span class="pl-en">NoteFilter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.emphasized<span class="pl-k">=</span><span class="pl-v">this</span>.inactive<span class="pl-k">=</span><span class="pl-v">this</span>.timeZone<span class="pl-k">=</span><span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.words<span class="pl-k">=</span><span class="pl-v">this</span>.ascending<span class="pl-k">=</span><span class="pl-v">this</span>.order<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.order<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.order<span class="pl-k">=</span>a.order),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.ascending<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.ascending<span class="pl-k">=</span>a.ascending),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.words<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.words<span class="pl-k">=</span>a.words),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.notebookGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tagGuids<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span>a.tagGuids),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.timeZone<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.timeZone<span class="pl-k">=</span>a.timeZone),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.inactive<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.inactive<span class="pl-k">=</span>a.inactive),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.emphasized<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code js-file-line">(<span class="pl-v">this</span>.emphasized<span class="pl-k">=</span>a.emphasized))};<span class="pl-s3">NoteFilter</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code js-file-line"><span class="pl-s3">NoteFilter</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.order<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.ascending<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.words<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code js-file-line">[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.tagGuids.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.timeZone<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.inactive<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.emphasized<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code js-file-line"><span class="pl-s3">NoteFilter</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteFilter<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.order<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.order<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>order<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.order),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.ascending<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.ascending<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>ascending<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.ascending),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.words<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.words<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>words<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.words),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.notebookGuid),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagGuids<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagGuids){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tagGuids<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">5</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.tagGuids.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.tagGuids)<span class="pl-v">this</span>.tagGuids.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.tagGuids[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.timeZone<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.timeZone<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>timeZone<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.timeZone),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.inactive<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.inactive<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>inactive<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.inactive),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.emphasized<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.emphasized<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>emphasized<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">8</span>),a.writeString(<span class="pl-v">this</span>.emphasized),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code js-file-line"><span class="pl-en">NoteList</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.updateCount<span class="pl-k">=</span><span class="pl-v">this</span>.searchedWords<span class="pl-k">=</span><span class="pl-v">this</span>.stoppedWords<span class="pl-k">=</span><span class="pl-v">this</span>.notes<span class="pl-k">=</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">=</span><span class="pl-v">this</span>.startIndex<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.startIndex<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.startIndex<span class="pl-k">=</span>a.startIndex),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.totalNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.totalNotes<span class="pl-k">=</span>a.totalNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notes<span class="pl-k">=</span>a.notes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.stoppedWords<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.stoppedWords<span class="pl-k">=</span>a.stoppedWords),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.searchedWords<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.searchedWords<span class="pl-k">=</span>a.searchedWords),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.updateCount))};<span class="pl-s3">NoteList</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code js-file-line"><span class="pl-s3">NoteList</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.startIndex<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notes<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>;d.read(a);<span class="pl-v">this</span>.notes.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code js-file-line"><span class="pl-c1">0</span>;<span class="pl-v">this</span>.stoppedWords<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.stoppedWords.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.searchedWords<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.searchedWords.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code js-file-line"><span class="pl-s3">NoteList</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteList<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.startIndex<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.startIndex<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>startIndex<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.startIndex),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>totalNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.totalNotes),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notes<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">3</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.notes.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.notes)<span class="pl-v">this</span>.notes.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.notes[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stoppedWords<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stoppedWords){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>stoppedWords<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">4</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.stoppedWords.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.stoppedWords)<span class="pl-v">this</span>.stoppedWords.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.stoppedWords[b],a.writeString(b));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.searchedWords<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.searchedWords){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>searchedWords<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code js-file-line">Thrift.Type.LIST,<span class="pl-c1">5</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.searchedWords.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> d <span class="pl-k">in</span> <span class="pl-v">this</span>.searchedWords)<span class="pl-v">this</span>.searchedWords.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.searchedWords[d],a.writeString(d));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">6</span>),a.writeI32(<span class="pl-v">this</span>.updateCount),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code js-file-line"><span class="pl-en">NoteMetadata</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.largestResourceSize<span class="pl-k">=</span><span class="pl-v">this</span>.largestResourceMime<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.deleted<span class="pl-k">=</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span><span class="pl-v">this</span>.created<span class="pl-k">=</span><span class="pl-v">this</span>.contentLength<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span>a.<span class="pl-sc">title</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contentLength<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contentLength<span class="pl-k">=</span>a.contentLength),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.created<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.created<span class="pl-k">=</span>a.created),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.updated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deleted<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.deleted<span class="pl-k">=</span>a.deleted),</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.notebookGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tagGuids<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span>a.tagGuids),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span>a.<span class="pl-sc">attributes</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.largestResourceMime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.largestResourceMime<span class="pl-k">=</span>a.largestResourceMime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.largestResourceSize<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.largestResourceSize<span class="pl-k">=</span>a.largestResourceSize))};<span class="pl-s3">NoteMetadata</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code js-file-line"><span class="pl-s3">NoteMetadata</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.contentLength<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.created<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.deleted<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.tagGuids.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteAttributes</span>,</td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code js-file-line"><span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">20</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.largestResourceMime<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">21</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.largestResourceSize<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code js-file-line"><span class="pl-s3">NoteMetadata</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteMetadata<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">title</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentLength<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentLength<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contentLength<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">5</span>),a.writeI32(<span class="pl-v">this</span>.contentLength),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code js-file-line"><span class="pl-v">this</span>.created<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.created<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>created<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">6</span>),a.writeI64(<span class="pl-v">this</span>.created),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">7</span>),a.writeI64(<span class="pl-v">this</span>.updated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deleted<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deleted<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">8</span>),a.writeI64(<span class="pl-v">this</span>.deleted),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code js-file-line">Thrift.Type.I32,<span class="pl-c1">10</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">11</span>),a.writeString(<span class="pl-v">this</span>.notebookGuid),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagGuids<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagGuids){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tagGuids<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">12</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.tagGuids.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.tagGuids)<span class="pl-v">this</span>.tagGuids.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.tagGuids[c],a.writeString(c));a.writeListEnd();</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code js-file-line">a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>attributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">14</span>),<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.largestResourceMime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.largestResourceMime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>largestResourceMime<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">20</span>),a.writeString(<span class="pl-v">this</span>.largestResourceMime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.largestResourceSize<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.largestResourceSize<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>largestResourceSize<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">21</span>),a.writeI32(<span class="pl-v">this</span>.largestResourceSize),</td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code js-file-line">a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code js-file-line"><span class="pl-en">NotesMetadataList</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.updateCount<span class="pl-k">=</span><span class="pl-v">this</span>.searchedWords<span class="pl-k">=</span><span class="pl-v">this</span>.stoppedWords<span class="pl-k">=</span><span class="pl-v">this</span>.notes<span class="pl-k">=</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">=</span><span class="pl-v">this</span>.startIndex<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.startIndex<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.startIndex<span class="pl-k">=</span>a.startIndex),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.totalNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.totalNotes<span class="pl-k">=</span>a.totalNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notes<span class="pl-k">=</span>a.notes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.stoppedWords<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.stoppedWords<span class="pl-k">=</span>a.stoppedWords),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.searchedWords<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.searchedWords<span class="pl-k">=</span>a.searchedWords),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.updateCount))};<span class="pl-s3">NotesMetadataList</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code js-file-line"><span class="pl-s3">NotesMetadataList</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.startIndex<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notes<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteMetadata</span>;d.read(a);<span class="pl-v">this</span>.notes.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code js-file-line">Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.stoppedWords<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.stoppedWords.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.searchedWords<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.searchedWords.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code js-file-line"><span class="pl-s3">NotesMetadataList</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NotesMetadataList<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.startIndex<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.startIndex<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>startIndex<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.startIndex),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.totalNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>totalNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.totalNotes),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notes<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">3</span>);a.writeListBegin(Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code js-file-line"><span class="pl-v">this</span>.notes.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.notes)<span class="pl-v">this</span>.notes.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.notes[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stoppedWords<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stoppedWords){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>stoppedWords<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">4</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.stoppedWords.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.stoppedWords)<span class="pl-v">this</span>.stoppedWords.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.stoppedWords[b],a.writeString(b));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.searchedWords<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.searchedWords){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>searchedWords<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code js-file-line">Thrift.Type.LIST,<span class="pl-c1">5</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.searchedWords.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> d <span class="pl-k">in</span> <span class="pl-v">this</span>.searchedWords)<span class="pl-v">this</span>.searchedWords.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.searchedWords[d],a.writeString(d));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">6</span>),a.writeI32(<span class="pl-v">this</span>.updateCount),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code js-file-line"><span class="pl-en">NotesMetadataResultSpec</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.includeLargestResourceSize<span class="pl-k">=</span><span class="pl-v">this</span>.includeLargestResourceMime<span class="pl-k">=</span><span class="pl-v">this</span>.includeAttributes<span class="pl-k">=</span><span class="pl-v">this</span>.includeTagGuids<span class="pl-k">=</span><span class="pl-v">this</span>.includeNotebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.includeUpdateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.includeDeleted<span class="pl-k">=</span><span class="pl-v">this</span>.includeUpdated<span class="pl-k">=</span><span class="pl-v">this</span>.includeCreated<span class="pl-k">=</span><span class="pl-v">this</span>.includeContentLength<span class="pl-k">=</span><span class="pl-v">this</span>.includeTitle<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeTitle<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeTitle<span class="pl-k">=</span>a.includeTitle),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeContentLength<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeContentLength<span class="pl-k">=</span>a.includeContentLength),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeCreated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeCreated<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code js-file-line">a.includeCreated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeUpdated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeUpdated<span class="pl-k">=</span>a.includeUpdated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeDeleted<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeDeleted<span class="pl-k">=</span>a.includeDeleted),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeUpdateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeUpdateSequenceNum<span class="pl-k">=</span>a.includeUpdateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeNotebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeNotebookGuid<span class="pl-k">=</span>a.includeNotebookGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeTagGuids<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeTagGuids<span class="pl-k">=</span>a.includeTagGuids),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeAttributes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeAttributes<span class="pl-k">=</span>a.includeAttributes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeLargestResourceMime<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code js-file-line">(<span class="pl-v">this</span>.includeLargestResourceMime<span class="pl-k">=</span>a.includeLargestResourceMime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeLargestResourceSize<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeLargestResourceSize<span class="pl-k">=</span>a.includeLargestResourceSize))};<span class="pl-s3">NotesMetadataResultSpec</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code js-file-line"><span class="pl-s3">NotesMetadataResultSpec</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeTitle<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeContentLength<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeCreated<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeUpdated<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code js-file-line"><span class="pl-v">this</span>.includeDeleted<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeUpdateSequenceNum<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeNotebookGuid<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeTagGuids<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeAttributes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">20</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeLargestResourceMime<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">21</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeLargestResourceSize<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code js-file-line"><span class="pl-s3">NotesMetadataResultSpec</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NotesMetadataResultSpec<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeTitle<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeTitle<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeTitle<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.includeTitle),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeContentLength<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeContentLength<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeContentLength<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.includeContentLength),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeCreated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeCreated<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeCreated<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.includeCreated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeUpdated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeUpdated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeUpdated<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.includeUpdated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeDeleted<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeDeleted<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeDeleted<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.includeDeleted),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeUpdateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeUpdateSequenceNum<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeUpdateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">10</span>),a.writeBool(<span class="pl-v">this</span>.includeUpdateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNotebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeNotebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeNotebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">11</span>),a.writeBool(<span class="pl-v">this</span>.includeNotebookGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeTagGuids<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeTagGuids<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeTagGuids<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">12</span>),a.writeBool(<span class="pl-v">this</span>.includeTagGuids),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeAttributes<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeAttributes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeAttributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">14</span>),a.writeBool(<span class="pl-v">this</span>.includeAttributes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeLargestResourceMime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeLargestResourceMime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeLargestResourceMime<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">20</span>),a.writeBool(<span class="pl-v">this</span>.includeLargestResourceMime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeLargestResourceSize<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeLargestResourceSize<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeLargestResourceSize<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,</td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code js-file-line"><span class="pl-c1">21</span>),a.writeBool(<span class="pl-v">this</span>.includeLargestResourceSize),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">NoteCollectionCounts</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.trashCount<span class="pl-k">=</span><span class="pl-v">this</span>.tagCounts<span class="pl-k">=</span><span class="pl-v">this</span>.notebookCounts<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookCounts<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookCounts<span class="pl-k">=</span>a.notebookCounts),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tagCounts<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tagCounts<span class="pl-k">=</span>a.tagCounts),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.trashCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.trashCount<span class="pl-k">=</span>a.trashCount))};<span class="pl-s3">NoteCollectionCounts</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code js-file-line"><span class="pl-s3">NoteCollectionCounts</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.MAP){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notebookCounts<span class="pl-k">=</span>{};c<span class="pl-k">=</span>a.readMapBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a.rpos[a.rpos.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-s3">pop</span>();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,e<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.notebookCounts[d]<span class="pl-k">=</span>e}a.readMapEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.MAP){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.tagCounts<span class="pl-k">=</span>{};c<span class="pl-k">=</span>a.readMapBegin().<span class="pl-sc">size</span>;</td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code js-file-line"><span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a.rpos[a.rpos.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-s3">pop</span>(),e<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,e<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.tagCounts[d]<span class="pl-k">=</span>e;a.readMapEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.trashCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code js-file-line"><span class="pl-s3">NoteCollectionCounts</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteCollectionCounts<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookCounts<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookCounts){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookCounts<span class="pl-pds">&quot;</span></span>,Thrift.Type.MAP,<span class="pl-c1">1</span>);a.writeMapBegin(Thrift.Type.STRING,Thrift.Type.I32,Thrift.objectLength(<span class="pl-v">this</span>.notebookCounts));<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.notebookCounts)<span class="pl-k">if</span>(<span class="pl-v">this</span>.notebookCounts.hasOwnProperty(c)){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.notebookCounts[c];a.writeString(c);a.writeI32(b)}a.writeMapEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagCounts<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code js-file-line"><span class="pl-v">this</span>.tagCounts){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tagCounts<span class="pl-pds">&quot;</span></span>,Thrift.Type.MAP,<span class="pl-c1">2</span>);a.writeMapBegin(Thrift.Type.STRING,Thrift.Type.I32,Thrift.objectLength(<span class="pl-v">this</span>.tagCounts));<span class="pl-k">for</span>(<span class="pl-s">var</span> d <span class="pl-k">in</span> <span class="pl-v">this</span>.tagCounts)<span class="pl-v">this</span>.tagCounts.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.tagCounts[d],a.writeString(d),a.writeI32(c));a.writeMapEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.trashCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.trashCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>trashCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.trashCount),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code js-file-line"><span class="pl-en">NoteEmailParameters</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.message<span class="pl-k">=</span><span class="pl-v">this</span>.subject<span class="pl-k">=</span><span class="pl-v">this</span>.ccAddresses<span class="pl-k">=</span><span class="pl-v">this</span>.toAddresses<span class="pl-k">=</span><span class="pl-v">this</span>.note<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.note<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.note<span class="pl-k">=</span>a.note),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.toAddresses<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.toAddresses<span class="pl-k">=</span>a.toAddresses),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.ccAddresses<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.ccAddresses<span class="pl-k">=</span>a.ccAddresses),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.subject<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.subject<span class="pl-k">=</span>a.subject),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.message<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.message<span class="pl-k">=</span>a.message))};<span class="pl-s3">NoteEmailParameters</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code js-file-line"><span class="pl-s3">NoteEmailParameters</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.note<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>,<span class="pl-v">this</span>.note.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.toAddresses<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.toAddresses.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.ccAddresses<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.ccAddresses.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.subject<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.message<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code js-file-line"><span class="pl-s3">NoteEmailParameters</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteEmailParameters<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.note<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.note<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>note<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.note.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.toAddresses<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.toAddresses){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>toAddresses<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">3</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.toAddresses.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.toAddresses)<span class="pl-v">this</span>.toAddresses.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.toAddresses[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.ccAddresses<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.ccAddresses){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>ccAddresses<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">4</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.ccAddresses.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.ccAddresses)<span class="pl-v">this</span>.ccAddresses.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.ccAddresses[b],a.writeString(b));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.subject<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.subject<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>subject<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">5</span>),a.writeString(<span class="pl-v">this</span>.subject),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.message<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.message<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>message<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.message),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code js-file-line"><span class="pl-en">NoteVersionId</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span><span class="pl-v">this</span>.saved<span class="pl-k">=</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.updated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.saved<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.saved<span class="pl-k">=</span>a.saved),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span>a.<span class="pl-sc">title</span>))};<span class="pl-s3">NoteVersionId</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code js-file-line"><span class="pl-s3">NoteVersionId</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.saved<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code js-file-line"><span class="pl-s3">NoteVersionId</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteVersionId<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">2</span>),a.writeI64(<span class="pl-v">this</span>.updated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.saved<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.saved<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>saved<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">3</span>),a.writeI64(<span class="pl-v">this</span>.saved),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">title</span>),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">ClientUsageMetrics</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.sessions<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sessions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sessions<span class="pl-k">=</span>a.sessions)};<span class="pl-s3">ClientUsageMetrics</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code js-file-line"><span class="pl-s3">ClientUsageMetrics</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.sessions<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code js-file-line"><span class="pl-s3">ClientUsageMetrics</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>ClientUsageMetrics<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sessions<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sessions<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sessions<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.sessions),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code js-file-line"><span class="pl-en">RelatedQuery</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.referenceUri<span class="pl-k">=</span><span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-v">this</span>.plainText<span class="pl-k">=</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.noteGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.plainText<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.plainText<span class="pl-k">=</span>a.plainText),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.filter<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span>a.filter),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.referenceUri<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.referenceUri<span class="pl-k">=</span>a.referenceUri))};<span class="pl-s3">RelatedQuery</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code js-file-line"><span class="pl-s3">RelatedQuery</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.plainText<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.filter<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteFilter</span>,<span class="pl-v">this</span>.filter.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.referenceUri<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code js-file-line"><span class="pl-s3">RelatedQuery</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>RelatedQuery<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.noteGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.plainText<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.plainText<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>plainText<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.plainText),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.filter<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.filter.<span class="pl-s3">write</span>(a),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.referenceUri<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.referenceUri<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>referenceUri<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.referenceUri),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">RelatedResult</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.containingNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">=</span><span class="pl-v">this</span>.notebooks<span class="pl-k">=</span><span class="pl-v">this</span>.notes<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notes<span class="pl-k">=</span>a.notes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebooks<span class="pl-k">=</span>a.notebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">tags</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">=</span>a.<span class="pl-sc">tags</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.containingNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.containingNotebooks<span class="pl-k">=</span>a.containingNotebooks))};</td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code js-file-line"><span class="pl-s3">RelatedResult</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code js-file-line"><span class="pl-s3">RelatedResult</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notes<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Note</span>;d.read(a);<span class="pl-v">this</span>.notes.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.notebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Notebook</span>,d.read(a),<span class="pl-v">this</span>.notebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);</td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Tag</span>,d.read(a),<span class="pl-v">this</span>.<span class="pl-sc">tags</span>.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.containingNotebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NotebookDescriptor</span>,d.read(a),<span class="pl-v">this</span>.containingNotebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code js-file-line"><span class="pl-s3">RelatedResult</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>RelatedResult<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notes){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notes<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">1</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.notes.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.notes)<span class="pl-v">this</span>.notes.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.notes[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">2</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.notebooks.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.notebooks)<span class="pl-v">this</span>.notebooks.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code js-file-line">(b<span class="pl-k">=</span><span class="pl-v">this</span>.notebooks[b],b.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span>){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tags<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">3</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.<span class="pl-sc">tags</span>.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> d <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-sc">tags</span>)<span class="pl-v">this</span>.<span class="pl-sc">tags</span>.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">tags</span>[d],d.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.containingNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.containingNotebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>containingNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">4</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.containingNotebooks.<span class="pl-sc">length</span>);</td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> e <span class="pl-k">in</span> <span class="pl-v">this</span>.containingNotebooks)<span class="pl-v">this</span>.containingNotebooks.hasOwnProperty(e)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-v">this</span>.containingNotebooks[e],e.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code js-file-line"><span class="pl-en">RelatedResultSpec</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.includeContainingNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.writableNotebooksOnly<span class="pl-k">=</span><span class="pl-v">this</span>.maxTags<span class="pl-k">=</span><span class="pl-v">this</span>.maxNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span>a.maxNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxNotebooks<span class="pl-k">=</span>a.maxNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxTags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxTags<span class="pl-k">=</span>a.maxTags),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.writableNotebooksOnly<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.writableNotebooksOnly<span class="pl-k">=</span>a.writableNotebooksOnly),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeContainingNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeContainingNotebooks<span class="pl-k">=</span>a.includeContainingNotebooks))};</td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code js-file-line"><span class="pl-s3">RelatedResultSpec</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code js-file-line"><span class="pl-s3">RelatedResultSpec</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxNotebooks<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxTags<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.writableNotebooksOnly<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeContainingNotebooks<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code js-file-line">a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code js-file-line"><span class="pl-s3">RelatedResultSpec</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>RelatedResultSpec<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.maxNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.maxNotebooks),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxTags<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxTags<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxTags<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.maxTags),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.writableNotebooksOnly<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.writableNotebooksOnly<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>writableNotebooksOnly<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.writableNotebooksOnly),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeContainingNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeContainingNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeContainingNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.includeContainingNotebooks),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code js-file-line">PrivilegeLevel<span class="pl-k">=</span>{NORMAL<span class="pl-k">:</span><span class="pl-c1">1</span>,PREMIUM<span class="pl-k">:</span><span class="pl-c1">3</span>,VIP<span class="pl-k">:</span><span class="pl-c1">5</span>,MANAGER<span class="pl-k">:</span><span class="pl-c1">7</span>,SUPPORT<span class="pl-k">:</span><span class="pl-c1">8</span>,ADMIN<span class="pl-k">:</span><span class="pl-c1">9</span>};QueryFormat<span class="pl-k">=</span>{USER<span class="pl-k">:</span><span class="pl-c1">1</span>,SEXP<span class="pl-k">:</span><span class="pl-c1">2</span>};NoteSortOrder<span class="pl-k">=</span>{CREATED<span class="pl-k">:</span><span class="pl-c1">1</span>,UPDATED<span class="pl-k">:</span><span class="pl-c1">2</span>,RELEVANCE<span class="pl-k">:</span><span class="pl-c1">3</span>,UPDATE_SEQUENCE_NUMBER<span class="pl-k">:</span><span class="pl-c1">4</span>,TITLE<span class="pl-k">:</span><span class="pl-c1">5</span>};PremiumOrderStatus<span class="pl-k">=</span>{NONE<span class="pl-k">:</span><span class="pl-c1">0</span>,PENDING<span class="pl-k">:</span><span class="pl-c1">1</span>,ACTIVE<span class="pl-k">:</span><span class="pl-c1">2</span>,FAILED<span class="pl-k">:</span><span class="pl-c1">3</span>,CANCELLATION_PENDING<span class="pl-k">:</span><span class="pl-c1">4</span>,CANCELED<span class="pl-k">:</span><span class="pl-c1">5</span>};SharedNotebookPrivilegeLevel<span class="pl-k">=</span>{READ_NOTEBOOK<span class="pl-k">:</span><span class="pl-c1">0</span>,MODIFY_NOTEBOOK_PLUS_ACTIVITY<span class="pl-k">:</span><span class="pl-c1">1</span>,READ_NOTEBOOK_PLUS_ACTIVITY<span class="pl-k">:</span><span class="pl-c1">2</span>,GROUP<span class="pl-k">:</span><span class="pl-c1">3</span>,FULL_ACCESS<span class="pl-k">:</span><span class="pl-c1">4</span>,BUSINESS_FULL_ACCESS<span class="pl-k">:</span><span class="pl-c1">5</span>};SponsoredGroupRole<span class="pl-k">=</span>{GROUP_MEMBER<span class="pl-k">:</span><span class="pl-c1">1</span>,GROUP_ADMIN<span class="pl-k">:</span><span class="pl-c1">2</span>,GROUP_OWNER<span class="pl-k">:</span><span class="pl-c1">3</span>};</td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code js-file-line">BusinessUserRole<span class="pl-k">=</span>{ADMIN<span class="pl-k">:</span><span class="pl-c1">1</span>,NORMAL<span class="pl-k">:</span><span class="pl-c1">2</span>};SharedNotebookInstanceRestrictions<span class="pl-k">=</span>{ONLY_JOINED_OR_PREVIEW<span class="pl-k">:</span><span class="pl-c1">1</span>,NO_SHARED_NOTEBOOKS<span class="pl-k">:</span><span class="pl-c1">2</span>};ReminderEmailConfig<span class="pl-k">=</span>{DO_NOT_SEND<span class="pl-k">:</span><span class="pl-c1">1</span>,SEND_DAILY_EMAIL<span class="pl-k">:</span><span class="pl-c1">2</span>};CLASSIFICATION_RECIPE_USER_NON_RECIPE<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>000<span class="pl-pds">&quot;</span></span>;CLASSIFICATION_RECIPE_USER_RECIPE<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>001<span class="pl-pds">&quot;</span></span>;CLASSIFICATION_RECIPE_SERVICE_RECIPE<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>002<span class="pl-pds">&quot;</span></span>;EDAM_NOTE_SOURCE_WEB_CLIP<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>web.clip<span class="pl-pds">&quot;</span></span>;EDAM_NOTE_SOURCE_MAIL_CLIP<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mail.clip<span class="pl-pds">&quot;</span></span>;EDAM_NOTE_SOURCE_MAIL_SMTP_GATEWAY<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>mail.smtp<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code js-file-line"><span class="pl-en">Data</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">body</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">size</span><span class="pl-k">=</span><span class="pl-v">this</span>.bodyHash<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.bodyHash<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.bodyHash<span class="pl-k">=</span>a.bodyHash),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">size</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">size</span><span class="pl-k">=</span>a.<span class="pl-sc">size</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">body</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">body</span><span class="pl-k">=</span>a.<span class="pl-sc">body</span>))};<span class="pl-s3">Data</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code js-file-line"><span class="pl-s3">Data</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.bodyHash<span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">size</span><span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">body</span><span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code js-file-line"><span class="pl-s3">Data</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Data<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.bodyHash<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.bodyHash<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>bodyHash<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeBinary(<span class="pl-v">this</span>.bodyHash),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">size</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">size</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>size<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.<span class="pl-sc">size</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">body</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">body</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeBinary(<span class="pl-v">this</span>.<span class="pl-sc">body</span>),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code js-file-line"><span class="pl-en">UserAttributes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.reminderEmailConfig<span class="pl-k">=</span><span class="pl-v">this</span>.useEmailAutoFiling<span class="pl-k">=</span><span class="pl-v">this</span>.taxExempt<span class="pl-k">=</span><span class="pl-v">this</span>.hideSponsorBilling<span class="pl-k">=</span><span class="pl-v">this</span>.businessAddress<span class="pl-k">=</span><span class="pl-v">this</span>.educationalDiscount<span class="pl-k">=</span><span class="pl-v">this</span>.referralProof<span class="pl-k">=</span><span class="pl-v">this</span>.recognitionLanguage<span class="pl-k">=</span><span class="pl-v">this</span>.groupName<span class="pl-k">=</span><span class="pl-v">this</span>.twitterId<span class="pl-k">=</span><span class="pl-v">this</span>.twitterUserName<span class="pl-k">=</span><span class="pl-v">this</span>.clipFullPage<span class="pl-k">=</span><span class="pl-v">this</span>.preferredCountry<span class="pl-k">=</span><span class="pl-v">this</span>.preferredLanguage<span class="pl-k">=</span><span class="pl-v">this</span>.partnerEmailOptInDate<span class="pl-k">=</span><span class="pl-v">this</span>.emailOptOutDate<span class="pl-k">=</span><span class="pl-v">this</span>.dailyEmailLimit<span class="pl-k">=</span><span class="pl-v">this</span>.sentEmailCount<span class="pl-k">=</span><span class="pl-v">this</span>.sentEmailDate<span class="pl-k">=</span><span class="pl-v">this</span>.refererCode<span class="pl-k">=</span><span class="pl-v">this</span>.referralCount<span class="pl-k">=</span><span class="pl-v">this</span>.maxReferrals<span class="pl-k">=</span><span class="pl-v">this</span>.dateAgreedToTermsOfService<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code js-file-line"><span class="pl-v">this</span>.comments<span class="pl-k">=</span><span class="pl-v">this</span>.recentMailedAddresses<span class="pl-k">=</span><span class="pl-v">this</span>.incomingEmailAddress<span class="pl-k">=</span><span class="pl-v">this</span>.viewedPromotions<span class="pl-k">=</span><span class="pl-v">this</span>.preactivation<span class="pl-k">=</span><span class="pl-v">this</span>.defaultLongitude<span class="pl-k">=</span><span class="pl-v">this</span>.defaultLatitude<span class="pl-k">=</span><span class="pl-v">this</span>.defaultLocationName<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.defaultLocationName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.defaultLocationName<span class="pl-k">=</span>a.defaultLocationName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.defaultLatitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.defaultLatitude<span class="pl-k">=</span>a.defaultLatitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.defaultLongitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.defaultLongitude<span class="pl-k">=</span>a.defaultLongitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.preactivation<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.preactivation<span class="pl-k">=</span>a.preactivation),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.viewedPromotions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.viewedPromotions<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code js-file-line">a.viewedPromotions),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.incomingEmailAddress<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.incomingEmailAddress<span class="pl-k">=</span>a.incomingEmailAddress),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recentMailedAddresses<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recentMailedAddresses<span class="pl-k">=</span>a.recentMailedAddresses),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.comments<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.comments<span class="pl-k">=</span>a.comments),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.dateAgreedToTermsOfService<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.dateAgreedToTermsOfService<span class="pl-k">=</span>a.dateAgreedToTermsOfService),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.maxReferrals<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.maxReferrals<span class="pl-k">=</span>a.maxReferrals),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.referralCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.referralCount<span class="pl-k">=</span>a.referralCount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.refererCode<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.refererCode<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code js-file-line">a.refererCode),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sentEmailDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sentEmailDate<span class="pl-k">=</span>a.sentEmailDate),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sentEmailCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sentEmailCount<span class="pl-k">=</span>a.sentEmailCount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.dailyEmailLimit<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.dailyEmailLimit<span class="pl-k">=</span>a.dailyEmailLimit),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.emailOptOutDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.emailOptOutDate<span class="pl-k">=</span>a.emailOptOutDate),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.partnerEmailOptInDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.partnerEmailOptInDate<span class="pl-k">=</span>a.partnerEmailOptInDate),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.preferredLanguage<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.preferredLanguage<span class="pl-k">=</span>a.preferredLanguage),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.preferredCountry<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.preferredCountry<span class="pl-k">=</span>a.preferredCountry),</td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.clipFullPage<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.clipFullPage<span class="pl-k">=</span>a.clipFullPage),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.twitterUserName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.twitterUserName<span class="pl-k">=</span>a.twitterUserName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.twitterId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.twitterId<span class="pl-k">=</span>a.twitterId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.groupName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.groupName<span class="pl-k">=</span>a.groupName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recognitionLanguage<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recognitionLanguage<span class="pl-k">=</span>a.recognitionLanguage),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.referralProof<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.referralProof<span class="pl-k">=</span>a.referralProof),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.educationalDiscount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.educationalDiscount<span class="pl-k">=</span>a.educationalDiscount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessAddress<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessAddress<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code js-file-line">a.businessAddress),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.hideSponsorBilling<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.hideSponsorBilling<span class="pl-k">=</span>a.hideSponsorBilling),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.taxExempt<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.taxExempt<span class="pl-k">=</span>a.taxExempt),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.useEmailAutoFiling<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.useEmailAutoFiling<span class="pl-k">=</span>a.useEmailAutoFiling),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.reminderEmailConfig<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.reminderEmailConfig<span class="pl-k">=</span>a.reminderEmailConfig))};<span class="pl-s3">UserAttributes</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code js-file-line"><span class="pl-s3">UserAttributes</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.defaultLocationName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.defaultLatitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.defaultLongitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.preactivation<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code js-file-line">Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.viewedPromotions<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.viewedPromotions.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.incomingEmailAddress<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.recentMailedAddresses<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.recentMailedAddresses.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code js-file-line"><span class="pl-v">this</span>.comments<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.dateAgreedToTermsOfService<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.maxReferrals<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.referralCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.refererCode<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">15</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.sentEmailDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.sentEmailCount<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code js-file-line">a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.dailyEmailLimit<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.emailOptOutDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">19</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.partnerEmailOptInDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">20</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.preferredLanguage<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">21</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.preferredCountry<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">22</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.clipFullPage<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code js-file-line">a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">23</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.twitterUserName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">24</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.twitterId<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">25</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.groupName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">26</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.recognitionLanguage<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">28</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.referralProof<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">29</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.educationalDiscount<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code js-file-line">a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">30</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.businessAddress<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">31</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.hideSponsorBilling<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">32</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.taxExempt<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">33</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.useEmailAutoFiling<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">34</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.reminderEmailConfig<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code js-file-line"><span class="pl-s3">UserAttributes</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserAttributes<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultLocationName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultLocationName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>defaultLocationName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.defaultLocationName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultLatitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultLatitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>defaultLatitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">2</span>),a.writeDouble(<span class="pl-v">this</span>.defaultLatitude),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultLongitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultLongitude<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>defaultLongitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">3</span>),a.writeDouble(<span class="pl-v">this</span>.defaultLongitude),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.preactivation<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.preactivation<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>preactivation<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.preactivation),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.viewedPromotions<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.viewedPromotions){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>viewedPromotions<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">5</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.viewedPromotions.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.viewedPromotions)<span class="pl-v">this</span>.viewedPromotions.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code js-file-line">(c<span class="pl-k">=</span><span class="pl-v">this</span>.viewedPromotions[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.incomingEmailAddress<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.incomingEmailAddress<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>incomingEmailAddress<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.incomingEmailAddress),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recentMailedAddresses<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recentMailedAddresses){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recentMailedAddresses<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">7</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.recentMailedAddresses.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.recentMailedAddresses)<span class="pl-v">this</span>.recentMailedAddresses.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code js-file-line">(b<span class="pl-k">=</span><span class="pl-v">this</span>.recentMailedAddresses[b],a.writeString(b));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.comments<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.comments<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>comments<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">9</span>),a.writeString(<span class="pl-v">this</span>.comments),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.dateAgreedToTermsOfService<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.dateAgreedToTermsOfService<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>dateAgreedToTermsOfService<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">11</span>),a.writeI64(<span class="pl-v">this</span>.dateAgreedToTermsOfService),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxReferrals<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.maxReferrals<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>maxReferrals<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code js-file-line">Thrift.Type.I32,<span class="pl-c1">12</span>),a.writeI32(<span class="pl-v">this</span>.maxReferrals),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.referralCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.referralCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>referralCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">13</span>),a.writeI32(<span class="pl-v">this</span>.referralCount),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.refererCode<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.refererCode<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>refererCode<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">14</span>),a.writeString(<span class="pl-v">this</span>.refererCode),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sentEmailDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sentEmailDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sentEmailDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">15</span>),a.writeI64(<span class="pl-v">this</span>.sentEmailDate),</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sentEmailCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sentEmailCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sentEmailCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">16</span>),a.writeI32(<span class="pl-v">this</span>.sentEmailCount),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.dailyEmailLimit<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.dailyEmailLimit<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>dailyEmailLimit<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">17</span>),a.writeI32(<span class="pl-v">this</span>.dailyEmailLimit),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.emailOptOutDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.emailOptOutDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>emailOptOutDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">18</span>),a.writeI64(<span class="pl-v">this</span>.emailOptOutDate),</td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.partnerEmailOptInDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.partnerEmailOptInDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>partnerEmailOptInDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">19</span>),a.writeI64(<span class="pl-v">this</span>.partnerEmailOptInDate),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.preferredLanguage<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.preferredLanguage<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>preferredLanguage<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">20</span>),a.writeString(<span class="pl-v">this</span>.preferredLanguage),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.preferredCountry<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.preferredCountry<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>preferredCountry<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code js-file-line"><span class="pl-c1">21</span>),a.writeString(<span class="pl-v">this</span>.preferredCountry),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clipFullPage<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clipFullPage<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>clipFullPage<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">22</span>),a.writeBool(<span class="pl-v">this</span>.clipFullPage),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.twitterUserName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.twitterUserName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>twitterUserName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">23</span>),a.writeString(<span class="pl-v">this</span>.twitterUserName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.twitterId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.twitterId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>twitterId<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">24</span>),a.writeString(<span class="pl-v">this</span>.twitterId),</td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.groupName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.groupName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>groupName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">25</span>),a.writeString(<span class="pl-v">this</span>.groupName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recognitionLanguage<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recognitionLanguage<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recognitionLanguage<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">26</span>),a.writeString(<span class="pl-v">this</span>.recognitionLanguage),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.referralProof<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.referralProof<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>referralProof<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">28</span>),a.writeString(<span class="pl-v">this</span>.referralProof),</td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.educationalDiscount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.educationalDiscount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>educationalDiscount<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">29</span>),a.writeBool(<span class="pl-v">this</span>.educationalDiscount),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessAddress<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessAddress<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessAddress<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">30</span>),a.writeString(<span class="pl-v">this</span>.businessAddress),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.hideSponsorBilling<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.hideSponsorBilling<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>hideSponsorBilling<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code js-file-line"><span class="pl-c1">31</span>),a.writeBool(<span class="pl-v">this</span>.hideSponsorBilling),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.taxExempt<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.taxExempt<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>taxExempt<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">32</span>),a.writeBool(<span class="pl-v">this</span>.taxExempt),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.useEmailAutoFiling<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.useEmailAutoFiling<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>useEmailAutoFiling<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">33</span>),a.writeBool(<span class="pl-v">this</span>.useEmailAutoFiling),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderEmailConfig<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderEmailConfig<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>reminderEmailConfig<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code js-file-line"><span class="pl-c1">34</span>),a.writeI32(<span class="pl-v">this</span>.reminderEmailConfig),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code js-file-line"><span class="pl-en">Accounting</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.nextChargeDate<span class="pl-k">=</span><span class="pl-v">this</span>.unitDiscount<span class="pl-k">=</span><span class="pl-v">this</span>.businessRole<span class="pl-k">=</span><span class="pl-v">this</span>.businessName<span class="pl-k">=</span><span class="pl-v">this</span>.businessId<span class="pl-k">=</span><span class="pl-v">this</span>.unitPrice<span class="pl-k">=</span><span class="pl-v">this</span>.currency<span class="pl-k">=</span><span class="pl-v">this</span>.lastRequestedCharge<span class="pl-k">=</span><span class="pl-v">this</span>.premiumSubscriptionNumber<span class="pl-k">=</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span><span class="pl-v">this</span>.premiumLockUntil<span class="pl-k">=</span><span class="pl-v">this</span>.nextPaymentDue<span class="pl-k">=</span><span class="pl-v">this</span>.lastFailedChargeReason<span class="pl-k">=</span><span class="pl-v">this</span>.lastFailedCharge<span class="pl-k">=</span><span class="pl-v">this</span>.lastSuccessfulCharge<span class="pl-k">=</span><span class="pl-v">this</span>.premiumServiceSKU<span class="pl-k">=</span><span class="pl-v">this</span>.premiumServiceStart<span class="pl-k">=</span><span class="pl-v">this</span>.premiumCommerceService<span class="pl-k">=</span><span class="pl-v">this</span>.premiumOrderNumber<span class="pl-k">=</span><span class="pl-v">this</span>.premiumServiceStatus<span class="pl-k">=</span><span class="pl-v">this</span>.uploadLimitNextMonth<span class="pl-k">=</span><span class="pl-v">this</span>.uploadLimitEnd<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code js-file-line"><span class="pl-v">this</span>.uploadLimit<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.uploadLimit<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.uploadLimit<span class="pl-k">=</span>a.uploadLimit),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.uploadLimitEnd<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.uploadLimitEnd<span class="pl-k">=</span>a.uploadLimitEnd),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.uploadLimitNextMonth<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.uploadLimitNextMonth<span class="pl-k">=</span>a.uploadLimitNextMonth),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumServiceStatus<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumServiceStatus<span class="pl-k">=</span>a.premiumServiceStatus),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumOrderNumber<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumOrderNumber<span class="pl-k">=</span>a.premiumOrderNumber),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumCommerceService<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumCommerceService<span class="pl-k">=</span>a.premiumCommerceService),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumServiceStart<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code js-file-line">(<span class="pl-v">this</span>.premiumServiceStart<span class="pl-k">=</span>a.premiumServiceStart),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumServiceSKU<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumServiceSKU<span class="pl-k">=</span>a.premiumServiceSKU),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.lastSuccessfulCharge<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.lastSuccessfulCharge<span class="pl-k">=</span>a.lastSuccessfulCharge),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.lastFailedCharge<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.lastFailedCharge<span class="pl-k">=</span>a.lastFailedCharge),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.lastFailedChargeReason<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.lastFailedChargeReason<span class="pl-k">=</span>a.lastFailedChargeReason),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.nextPaymentDue<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.nextPaymentDue<span class="pl-k">=</span>a.nextPaymentDue),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumLockUntil<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumLockUntil<span class="pl-k">=</span>a.premiumLockUntil),</td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.updated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumSubscriptionNumber<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumSubscriptionNumber<span class="pl-k">=</span>a.premiumSubscriptionNumber),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.lastRequestedCharge<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.lastRequestedCharge<span class="pl-k">=</span>a.lastRequestedCharge),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.currency<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.currency<span class="pl-k">=</span>a.currency),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.unitPrice<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.unitPrice<span class="pl-k">=</span>a.unitPrice),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessId<span class="pl-k">=</span>a.businessId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessName<span class="pl-k">=</span>a.businessName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessRole<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessRole<span class="pl-k">=</span>a.businessRole),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code js-file-line">a.unitDiscount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.unitDiscount<span class="pl-k">=</span>a.unitDiscount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.nextChargeDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.nextChargeDate<span class="pl-k">=</span>a.nextChargeDate))};<span class="pl-s3">Accounting</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code js-file-line"><span class="pl-s3">Accounting</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.uploadLimit<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.uploadLimitEnd<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.uploadLimitNextMonth<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.premiumServiceStatus<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code js-file-line"><span class="pl-v">this</span>.premiumOrderNumber<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.premiumCommerceService<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.premiumServiceStart<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.premiumServiceSKU<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.lastSuccessfulCharge<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.lastFailedCharge<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code js-file-line">Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.lastFailedChargeReason<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.nextPaymentDue<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.premiumLockUntil<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.premiumSubscriptionNumber<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.lastRequestedCharge<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code js-file-line"><span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.currency<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">19</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.unitPrice<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">20</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.businessId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">21</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.businessName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">22</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.businessRole<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">23</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.unitDiscount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">24</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code js-file-line"><span class="pl-v">this</span>.nextChargeDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code js-file-line"><span class="pl-s3">Accounting</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Accounting<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploadLimit<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploadLimit<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>uploadLimit<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.uploadLimit),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploadLimitEnd<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploadLimitEnd<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>uploadLimitEnd<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">2</span>),a.writeI64(<span class="pl-v">this</span>.uploadLimitEnd),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploadLimitNextMonth<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uploadLimitNextMonth<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>uploadLimitNextMonth<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,</td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeI64(<span class="pl-v">this</span>.uploadLimitNextMonth),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumServiceStatus<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumServiceStatus<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumServiceStatus<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">4</span>),a.writeI32(<span class="pl-v">this</span>.premiumServiceStatus),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumOrderNumber<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumOrderNumber<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumOrderNumber<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">5</span>),a.writeString(<span class="pl-v">this</span>.premiumOrderNumber),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumCommerceService<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumCommerceService<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumCommerceService<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.premiumCommerceService),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumServiceStart<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumServiceStart<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumServiceStart<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">7</span>),a.writeI64(<span class="pl-v">this</span>.premiumServiceStart),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumServiceSKU<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumServiceSKU<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumServiceSKU<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">8</span>),a.writeString(<span class="pl-v">this</span>.premiumServiceSKU),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code js-file-line"><span class="pl-v">this</span>.lastSuccessfulCharge<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastSuccessfulCharge<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>lastSuccessfulCharge<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">9</span>),a.writeI64(<span class="pl-v">this</span>.lastSuccessfulCharge),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastFailedCharge<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastFailedCharge<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>lastFailedCharge<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">10</span>),a.writeI64(<span class="pl-v">this</span>.lastFailedCharge),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastFailedChargeReason<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastFailedChargeReason<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>lastFailedChargeReason<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">11</span>),a.writeString(<span class="pl-v">this</span>.lastFailedChargeReason),</td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.nextPaymentDue<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.nextPaymentDue<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>nextPaymentDue<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">12</span>),a.writeI64(<span class="pl-v">this</span>.nextPaymentDue),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumLockUntil<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumLockUntil<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumLockUntil<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">13</span>),a.writeI64(<span class="pl-v">this</span>.premiumLockUntil),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">14</span>),a.writeI64(<span class="pl-v">this</span>.updated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code js-file-line"><span class="pl-v">this</span>.premiumSubscriptionNumber<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumSubscriptionNumber<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumSubscriptionNumber<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">16</span>),a.writeString(<span class="pl-v">this</span>.premiumSubscriptionNumber),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastRequestedCharge<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastRequestedCharge<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>lastRequestedCharge<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">17</span>),a.writeI64(<span class="pl-v">this</span>.lastRequestedCharge),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currency<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currency<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>currency<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">18</span>),a.writeString(<span class="pl-v">this</span>.currency),</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.unitPrice<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.unitPrice<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>unitPrice<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">19</span>),a.writeI32(<span class="pl-v">this</span>.unitPrice),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">20</span>),a.writeI32(<span class="pl-v">this</span>.businessId),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">21</span>),a.writeString(<span class="pl-v">this</span>.businessName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessRole<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessRole<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessRole<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">22</span>),a.writeI32(<span class="pl-v">this</span>.businessRole),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.unitDiscount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.unitDiscount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>unitDiscount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">23</span>),a.writeI32(<span class="pl-v">this</span>.unitDiscount),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.nextChargeDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.nextChargeDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>nextChargeDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">24</span>),a.writeI64(<span class="pl-v">this</span>.nextChargeDate),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code js-file-line"><span class="pl-en">BusinessUserInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.email<span class="pl-k">=</span><span class="pl-v">this</span>.role<span class="pl-k">=</span><span class="pl-v">this</span>.businessName<span class="pl-k">=</span><span class="pl-v">this</span>.businessId<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessId<span class="pl-k">=</span>a.businessId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessName<span class="pl-k">=</span>a.businessName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.role<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.role<span class="pl-k">=</span>a.role),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.email<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.email<span class="pl-k">=</span>a.email))};<span class="pl-s3">BusinessUserInfo</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code js-file-line"><span class="pl-s3">BusinessUserInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.businessId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.businessName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.role<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.email<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code js-file-line"><span class="pl-s3">BusinessUserInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>BusinessUserInfo<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.businessId),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.businessName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.role<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.role<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>role<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.role),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.email<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.email<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>email<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.email),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code js-file-line"><span class="pl-en">PremiumInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.premiumUpgradable<span class="pl-k">=</span><span class="pl-v">this</span>.sponsoredGroupRole<span class="pl-k">=</span><span class="pl-v">this</span>.sponsoredGroupName<span class="pl-k">=</span><span class="pl-v">this</span>.canPurchaseUploadAllowance<span class="pl-k">=</span><span class="pl-v">this</span>.premiumCancellationPending<span class="pl-k">=</span><span class="pl-v">this</span>.premiumPending<span class="pl-k">=</span><span class="pl-v">this</span>.premiumExtendable<span class="pl-k">=</span><span class="pl-v">this</span>.premiumExpirationDate<span class="pl-k">=</span><span class="pl-v">this</span>.premiumRecurring<span class="pl-k">=</span><span class="pl-v">this</span>.premium<span class="pl-k">=</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.currentTime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.currentTime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premium<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premium<span class="pl-k">=</span>a.premium),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumRecurring<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumRecurring<span class="pl-k">=</span>a.premiumRecurring),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumExpirationDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumExpirationDate<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code js-file-line">a.premiumExpirationDate),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumExtendable<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumExtendable<span class="pl-k">=</span>a.premiumExtendable),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumPending<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumPending<span class="pl-k">=</span>a.premiumPending),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumCancellationPending<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumCancellationPending<span class="pl-k">=</span>a.premiumCancellationPending),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.canPurchaseUploadAllowance<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.canPurchaseUploadAllowance<span class="pl-k">=</span>a.canPurchaseUploadAllowance),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sponsoredGroupName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sponsoredGroupName<span class="pl-k">=</span>a.sponsoredGroupName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sponsoredGroupRole<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sponsoredGroupRole<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code js-file-line">a.sponsoredGroupRole),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumUpgradable<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumUpgradable<span class="pl-k">=</span>a.premiumUpgradable))};<span class="pl-s3">PremiumInfo</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code js-file-line"><span class="pl-s3">PremiumInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.premium<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.premiumRecurring<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.premiumExpirationDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.premiumExtendable<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code js-file-line">a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.premiumPending<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.premiumCancellationPending<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.canPurchaseUploadAllowance<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.sponsoredGroupName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.sponsoredGroupRole<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code js-file-line"><span class="pl-v">this</span>.premiumUpgradable<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code js-file-line"><span class="pl-s3">PremiumInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>PremiumInfo<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>currentTime<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.currentTime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premium<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premium<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premium<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.premium),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumRecurring<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumRecurring<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumRecurring<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.premiumRecurring),</td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumExpirationDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumExpirationDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumExpirationDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">4</span>),a.writeI64(<span class="pl-v">this</span>.premiumExpirationDate),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumExtendable<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumExtendable<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumExtendable<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.premiumExtendable),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumPending<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumPending<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumPending<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),</td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code js-file-line">a.writeBool(<span class="pl-v">this</span>.premiumPending),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumCancellationPending<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumCancellationPending<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumCancellationPending<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.premiumCancellationPending),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.canPurchaseUploadAllowance<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.canPurchaseUploadAllowance<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>canPurchaseUploadAllowance<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.canPurchaseUploadAllowance),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sponsoredGroupName<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sponsoredGroupName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sponsoredGroupName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">9</span>),a.writeString(<span class="pl-v">this</span>.sponsoredGroupName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sponsoredGroupRole<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sponsoredGroupRole<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sponsoredGroupRole<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">10</span>),a.writeI32(<span class="pl-v">this</span>.sponsoredGroupRole),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumUpgradable<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumUpgradable<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumUpgradable<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">11</span>),a.writeBool(<span class="pl-v">this</span>.premiumUpgradable),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code js-file-line">a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code js-file-line"><span class="pl-en">User</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.businessUserInfo<span class="pl-k">=</span><span class="pl-v">this</span>.premiumInfo<span class="pl-k">=</span><span class="pl-v">this</span>.accounting<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-v">this</span>.shardId<span class="pl-k">=</span><span class="pl-v">this</span>.active<span class="pl-k">=</span><span class="pl-v">this</span>.deleted<span class="pl-k">=</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span><span class="pl-v">this</span>.created<span class="pl-k">=</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span><span class="pl-v">this</span>.timezone<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span><span class="pl-v">this</span>.email<span class="pl-k">=</span><span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span>a.<span class="pl-sc">id</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.email<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.email<span class="pl-k">=</span>a.email),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.<span class="pl-sc">name</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.timezone<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.timezone<span class="pl-k">=</span>a.timezone),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.privilege<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.privilege),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.created<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code js-file-line">(<span class="pl-v">this</span>.created<span class="pl-k">=</span>a.created),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.updated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deleted<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.deleted<span class="pl-k">=</span>a.deleted),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.active<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.active<span class="pl-k">=</span>a.active),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shardId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shardId<span class="pl-k">=</span>a.shardId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span>a.<span class="pl-sc">attributes</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.accounting<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.accounting<span class="pl-k">=</span>a.accounting),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.premiumInfo<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.premiumInfo<span class="pl-k">=</span>a.premiumInfo),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessUserInfo<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessUserInfo<span class="pl-k">=</span>a.businessUserInfo))};<span class="pl-s3">User</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code js-file-line"><span class="pl-s3">User</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.email<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.timezone<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.created<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.deleted<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.active<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shardId<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">15</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">UserAttributes</span>,<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.accounting<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Accounting</span>,<span class="pl-v">this</span>.accounting.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.premiumInfo<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">PremiumInfo</span>,<span class="pl-v">this</span>.premiumInfo.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.businessUserInfo<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BusinessUserInfo</span>,<span class="pl-v">this</span>.businessUserInfo.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code js-file-line"><span class="pl-s3">User</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>User<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.<span class="pl-sc">id</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.email<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.email<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>email<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.email),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">name</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.timezone<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.timezone<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>timezone<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.timezone),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>privilege<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">7</span>),a.writeI32(<span class="pl-v">this</span>.privilege),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.created<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.created<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>created<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">9</span>),a.writeI64(<span class="pl-v">this</span>.created),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">10</span>),a.writeI64(<span class="pl-v">this</span>.updated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deleted<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deleted<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">11</span>),a.writeI64(<span class="pl-v">this</span>.deleted),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.active<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.active<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>active<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">13</span>),a.writeBool(<span class="pl-v">this</span>.active),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shardId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shardId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shardId<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">14</span>),a.writeString(<span class="pl-v">this</span>.shardId),</td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>attributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">15</span>),<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.accounting<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.accounting<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>accounting<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">16</span>),<span class="pl-v">this</span>.accounting.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumInfo<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.premiumInfo<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>premiumInfo<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">17</span>),<span class="pl-v">this</span>.premiumInfo.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessUserInfo<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code js-file-line"><span class="pl-v">this</span>.businessUserInfo<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessUserInfo<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">18</span>),<span class="pl-v">this</span>.businessUserInfo.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">Tag</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.parentGuid<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.<span class="pl-sc">name</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.parentGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.parentGuid<span class="pl-k">=</span>a.parentGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum))};<span class="pl-s3">Tag</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code js-file-line"><span class="pl-s3">Tag</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.parentGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code js-file-line"><span class="pl-s3">Tag</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Tag<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">name</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.parentGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.parentGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>parentGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.parentGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">4</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">LazyMap</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.fullMap<span class="pl-k">=</span><span class="pl-v">this</span>.keysOnly<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.keysOnly<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.keysOnly<span class="pl-k">=</span>a.keysOnly),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.fullMap<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.fullMap<span class="pl-k">=</span>a.fullMap))};<span class="pl-s3">LazyMap</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code js-file-line"><span class="pl-s3">LazyMap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.SET){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.keysOnly<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readSetBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.keysOnly.<span class="pl-s3">push</span>(d)}a.readSetEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.MAP){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.fullMap<span class="pl-k">=</span>{};c<span class="pl-k">=</span>a.readMapBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a.rpos[a.rpos.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-s3">pop</span>();<span class="pl-s">var</span> e<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,</td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code js-file-line">e<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.fullMap[d]<span class="pl-k">=</span>e}a.readMapEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code js-file-line"><span class="pl-s3">LazyMap</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>LazyMap<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.keysOnly<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.keysOnly){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>keysOnly<span class="pl-pds">&quot;</span></span>,Thrift.Type.SET,<span class="pl-c1">1</span>);a.writeSetBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.keysOnly.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.keysOnly)<span class="pl-v">this</span>.keysOnly.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.keysOnly[c],a.writeString(c));a.writeSetEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullMap<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fullMap){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>fullMap<span class="pl-pds">&quot;</span></span>,Thrift.Type.MAP,<span class="pl-c1">2</span>);a.writeMapBegin(Thrift.Type.STRING,Thrift.Type.STRING,Thrift.objectLength(<span class="pl-v">this</span>.fullMap));</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.fullMap)<span class="pl-v">this</span>.fullMap.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.fullMap[b],a.writeString(b),a.writeString(c));a.writeMapEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code js-file-line"><span class="pl-en">ResourceAttributes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.applicationData<span class="pl-k">=</span><span class="pl-v">this</span>.attachment<span class="pl-k">=</span><span class="pl-v">this</span>.fileName<span class="pl-k">=</span><span class="pl-v">this</span>.recoType<span class="pl-k">=</span><span class="pl-v">this</span>.clientWillIndex<span class="pl-k">=</span><span class="pl-v">this</span>.cameraModel<span class="pl-k">=</span><span class="pl-v">this</span>.cameraMake<span class="pl-k">=</span><span class="pl-v">this</span>.altitude<span class="pl-k">=</span><span class="pl-v">this</span>.longitude<span class="pl-k">=</span><span class="pl-v">this</span>.latitude<span class="pl-k">=</span><span class="pl-v">this</span>.timestamp<span class="pl-k">=</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sourceURL<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sourceURL<span class="pl-k">=</span>a.sourceURL),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.timestamp<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.timestamp<span class="pl-k">=</span>a.timestamp),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.latitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.latitude<span class="pl-k">=</span>a.latitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.longitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.longitude<span class="pl-k">=</span>a.longitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.altitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.altitude<span class="pl-k">=</span>a.altitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.cameraMake<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code js-file-line">(<span class="pl-v">this</span>.cameraMake<span class="pl-k">=</span>a.cameraMake),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.cameraModel<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.cameraModel<span class="pl-k">=</span>a.cameraModel),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.clientWillIndex<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.clientWillIndex<span class="pl-k">=</span>a.clientWillIndex),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recoType<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recoType<span class="pl-k">=</span>a.recoType),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.fileName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.fileName<span class="pl-k">=</span>a.fileName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.attachment<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.attachment<span class="pl-k">=</span>a.attachment),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.applicationData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.applicationData<span class="pl-k">=</span>a.applicationData))};<span class="pl-s3">ResourceAttributes</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code js-file-line"><span class="pl-s3">ResourceAttributes</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.timestamp<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.latitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.longitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.altitude<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code js-file-line">a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.cameraMake<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.cameraModel<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.clientWillIndex<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.recoType<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.fileName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.attachment<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.applicationData<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LazyMap</span>,<span class="pl-v">this</span>.applicationData.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code js-file-line"><span class="pl-s3">ResourceAttributes</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>ResourceAttributes<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sourceURL<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.sourceURL),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.timestamp<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.timestamp<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>timestamp<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">2</span>),a.writeI64(<span class="pl-v">this</span>.timestamp),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.latitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.latitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>latitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">3</span>),a.writeDouble(<span class="pl-v">this</span>.latitude),</td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.longitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.longitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>longitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">4</span>),a.writeDouble(<span class="pl-v">this</span>.longitude),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.altitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.altitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>altitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">5</span>),a.writeDouble(<span class="pl-v">this</span>.altitude),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.cameraMake<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.cameraMake<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>cameraMake<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.cameraMake),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.cameraModel<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code js-file-line"><span class="pl-v">this</span>.cameraModel<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>cameraModel<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">7</span>),a.writeString(<span class="pl-v">this</span>.cameraModel),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clientWillIndex<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clientWillIndex<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>clientWillIndex<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.clientWillIndex),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recoType<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recoType<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recoType<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">9</span>),a.writeString(<span class="pl-v">this</span>.recoType),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fileName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.fileName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>fileName<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">10</span>),a.writeString(<span class="pl-v">this</span>.fileName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.attachment<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.attachment<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>attachment<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">11</span>),a.writeBool(<span class="pl-v">this</span>.attachment),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.applicationData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.applicationData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>applicationData<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">12</span>),<span class="pl-v">this</span>.applicationData.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code js-file-line"><span class="pl-en">Resource</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.alternateData<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-v">this</span>.recognition<span class="pl-k">=</span><span class="pl-v">this</span>.active<span class="pl-k">=</span><span class="pl-v">this</span>.duration<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.mime<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.noteGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">data</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span>a.<span class="pl-sc">data</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.mime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.mime<span class="pl-k">=</span>a.mime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>a.<span class="pl-sc">width</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>a.<span class="pl-sc">height</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.duration<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.duration<span class="pl-k">=</span>a.duration),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.active<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code js-file-line">(<span class="pl-v">this</span>.active<span class="pl-k">=</span>a.active),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recognition<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recognition<span class="pl-k">=</span>a.recognition),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span>a.<span class="pl-sc">attributes</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.alternateData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.alternateData<span class="pl-k">=</span>a.alternateData))};<span class="pl-s3">Resource</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code js-file-line"><span class="pl-s3">Resource</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Data</span>,<span class="pl-v">this</span>.<span class="pl-sc">data</span>.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.mime<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I16<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>a.readI16().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I16<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>a.readI16().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I16<span class="pl-k">?</span><span class="pl-v">this</span>.duration<span class="pl-k">=</span>a.readI16().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.active<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.recognition<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Data</span>,<span class="pl-v">this</span>.recognition.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ResourceAttributes</span>,<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.alternateData<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Data</span>,<span class="pl-v">this</span>.alternateData.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code js-file-line"><span class="pl-s3">Resource</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Resource<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.noteGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">data</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>data<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.<span class="pl-sc">data</span>.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.mime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.mime<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>mime<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.mime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,Thrift.Type.I16,<span class="pl-c1">5</span>),a.writeI16(<span class="pl-v">this</span>.<span class="pl-sc">width</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,Thrift.Type.I16,<span class="pl-c1">6</span>),a.writeI16(<span class="pl-v">this</span>.<span class="pl-sc">height</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.duration<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.duration<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>duration<span class="pl-pds">&quot;</span></span>,Thrift.Type.I16,<span class="pl-c1">7</span>),a.writeI16(<span class="pl-v">this</span>.duration),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.active<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.active<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>active<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.active),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recognition<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recognition<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recognition<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">9</span>),<span class="pl-v">this</span>.recognition.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>attributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">11</span>),<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code js-file-line">Thrift.Type.I32,<span class="pl-c1">12</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.alternateData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.alternateData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>alternateData<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">13</span>),<span class="pl-v">this</span>.alternateData.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code js-file-line"><span class="pl-en">NoteAttributes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.lastEditorId<span class="pl-k">=</span><span class="pl-v">this</span>.creatorId<span class="pl-k">=</span><span class="pl-v">this</span>.classifications<span class="pl-k">=</span><span class="pl-v">this</span>.lastEditedBy<span class="pl-k">=</span><span class="pl-v">this</span>.applicationData<span class="pl-k">=</span><span class="pl-v">this</span>.contentClass<span class="pl-k">=</span><span class="pl-v">this</span>.placeName<span class="pl-k">=</span><span class="pl-v">this</span>.reminderTime<span class="pl-k">=</span><span class="pl-v">this</span>.reminderDoneTime<span class="pl-k">=</span><span class="pl-v">this</span>.reminderOrder<span class="pl-k">=</span><span class="pl-v">this</span>.shareDate<span class="pl-k">=</span><span class="pl-v">this</span>.sourceApplication<span class="pl-k">=</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">source</span><span class="pl-k">=</span><span class="pl-v">this</span>.author<span class="pl-k">=</span><span class="pl-v">this</span>.altitude<span class="pl-k">=</span><span class="pl-v">this</span>.longitude<span class="pl-k">=</span><span class="pl-v">this</span>.latitude<span class="pl-k">=</span><span class="pl-v">this</span>.subjectDate<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.subjectDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.subjectDate<span class="pl-k">=</span>a.subjectDate),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.latitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.latitude<span class="pl-k">=</span>a.latitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.longitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.longitude<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code js-file-line">a.longitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.altitude<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.altitude<span class="pl-k">=</span>a.altitude),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.author<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.author<span class="pl-k">=</span>a.author),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">source</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">source</span><span class="pl-k">=</span>a.<span class="pl-sc">source</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sourceURL<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sourceURL<span class="pl-k">=</span>a.sourceURL),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sourceApplication<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sourceApplication<span class="pl-k">=</span>a.sourceApplication),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shareDate<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shareDate<span class="pl-k">=</span>a.shareDate),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.reminderOrder<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.reminderOrder<span class="pl-k">=</span>a.reminderOrder),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.reminderDoneTime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.reminderDoneTime<span class="pl-k">=</span>a.reminderDoneTime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.reminderTime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.reminderTime<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code js-file-line">a.reminderTime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.placeName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.placeName<span class="pl-k">=</span>a.placeName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contentClass<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contentClass<span class="pl-k">=</span>a.contentClass),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.applicationData<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.applicationData<span class="pl-k">=</span>a.applicationData),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.lastEditedBy<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.lastEditedBy<span class="pl-k">=</span>a.lastEditedBy),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.classifications<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.classifications<span class="pl-k">=</span>a.classifications),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.creatorId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.creatorId<span class="pl-k">=</span>a.creatorId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.lastEditorId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.lastEditorId<span class="pl-k">=</span>a.lastEditorId))};<span class="pl-s3">NoteAttributes</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code js-file-line"><span class="pl-s3">NoteAttributes</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.subjectDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.latitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.longitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.DOUBLE<span class="pl-k">?</span><span class="pl-v">this</span>.altitude<span class="pl-k">=</span>a.readDouble().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.author<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code js-file-line">a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">source</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">15</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.sourceApplication<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.shareDate<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.reminderOrder<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">19</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.reminderDoneTime<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">20</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.reminderTime<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">21</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.placeName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">22</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.contentClass<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">23</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.applicationData<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">LazyMap</span>,<span class="pl-v">this</span>.applicationData.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">24</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.lastEditedBy<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">26</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.MAP){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.classifications<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code js-file-line">{};c<span class="pl-k">=</span>a.readMapBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>a.rpos[a.rpos.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a.rstack.<span class="pl-s3">pop</span>();<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,e<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.classifications[d]<span class="pl-k">=</span>e}a.readMapEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">27</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.creatorId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">28</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.lastEditorId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code js-file-line"><span class="pl-s3">NoteAttributes</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NoteAttributes<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.subjectDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.subjectDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>subjectDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.subjectDate),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.latitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.latitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>latitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">10</span>),a.writeDouble(<span class="pl-v">this</span>.latitude),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.longitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.longitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>longitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">11</span>),a.writeDouble(<span class="pl-v">this</span>.longitude),</td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.altitude<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.altitude<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>altitude<span class="pl-pds">&quot;</span></span>,Thrift.Type.DOUBLE,<span class="pl-c1">12</span>),a.writeDouble(<span class="pl-v">this</span>.altitude),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.author<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.author<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>author<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">13</span>),a.writeString(<span class="pl-v">this</span>.author),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">source</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">source</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>source<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">14</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">source</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sourceURL<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sourceURL<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">15</span>),a.writeString(<span class="pl-v">this</span>.sourceURL),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sourceApplication<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sourceApplication<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sourceApplication<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">16</span>),a.writeString(<span class="pl-v">this</span>.sourceApplication),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareDate<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareDate<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shareDate<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">17</span>),a.writeI64(<span class="pl-v">this</span>.shareDate),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderOrder<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderOrder<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>reminderOrder<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,</td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code js-file-line"><span class="pl-c1">18</span>),a.writeI64(<span class="pl-v">this</span>.reminderOrder),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderDoneTime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderDoneTime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>reminderDoneTime<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">19</span>),a.writeI64(<span class="pl-v">this</span>.reminderDoneTime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderTime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderTime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>reminderTime<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">20</span>),a.writeI64(<span class="pl-v">this</span>.reminderTime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.placeName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.placeName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>placeName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">21</span>),a.writeString(<span class="pl-v">this</span>.placeName),</td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentClass<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentClass<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contentClass<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">22</span>),a.writeString(<span class="pl-v">this</span>.contentClass),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.applicationData<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.applicationData<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>applicationData<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">23</span>),<span class="pl-v">this</span>.applicationData.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastEditedBy<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastEditedBy<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>lastEditedBy<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">24</span>),a.writeString(<span class="pl-v">this</span>.lastEditedBy),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.classifications<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.classifications){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>classifications<span class="pl-pds">&quot;</span></span>,Thrift.Type.MAP,<span class="pl-c1">26</span>);a.writeMapBegin(Thrift.Type.STRING,Thrift.Type.STRING,Thrift.objectLength(<span class="pl-v">this</span>.classifications));<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.classifications)<span class="pl-k">if</span>(<span class="pl-v">this</span>.classifications.hasOwnProperty(c)){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.classifications[c];a.writeString(c);a.writeString(b)}a.writeMapEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.creatorId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.creatorId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>creatorId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">27</span>),a.writeI32(<span class="pl-v">this</span>.creatorId),</td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastEditorId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.lastEditorId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>lastEditorId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">28</span>),a.writeI32(<span class="pl-v">this</span>.lastEditorId),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code js-file-line"><span class="pl-en">Note</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.tagNames<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-v">this</span>.resources<span class="pl-k">=</span><span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.active<span class="pl-k">=</span><span class="pl-v">this</span>.deleted<span class="pl-k">=</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span><span class="pl-v">this</span>.created<span class="pl-k">=</span><span class="pl-v">this</span>.contentLength<span class="pl-k">=</span><span class="pl-v">this</span>.contentHash<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">content</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span>a.<span class="pl-sc">title</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">content</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">content</span><span class="pl-k">=</span>a.<span class="pl-sc">content</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contentHash<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contentHash<span class="pl-k">=</span>a.contentHash),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contentLength<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contentLength<span class="pl-k">=</span>a.contentLength),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.created<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code js-file-line">(<span class="pl-v">this</span>.created<span class="pl-k">=</span>a.created),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.updated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deleted<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.deleted<span class="pl-k">=</span>a.deleted),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.active<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.active<span class="pl-k">=</span>a.active),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.notebookGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tagGuids<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span>a.tagGuids),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.resources<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.resources<span class="pl-k">=</span>a.resources),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span>a.<span class="pl-sc">attributes</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.tagNames<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.tagNames<span class="pl-k">=</span>a.tagNames))};</td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code js-file-line"><span class="pl-s3">Note</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code js-file-line"><span class="pl-s3">Note</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">content</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.contentHash<span class="pl-k">=</span>a.readBinary().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.contentLength<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.created<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.updated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.deleted<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.active<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code js-file-line"><span class="pl-c1">0</span>;<span class="pl-v">this</span>.tagGuids<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>;<span class="pl-v">this</span>.tagGuids.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.resources<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Resource</span>,d.read(a),<span class="pl-v">this</span>.resources.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NoteAttributes</span>,<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">15</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.tagNames<span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code js-file-line">c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span>,<span class="pl-v">this</span>.tagNames.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code js-file-line"><span class="pl-s3">Note</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Note<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">title</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>title<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">title</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">content</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">content</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>content<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">content</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentHash<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentHash<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contentHash<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeBinary(<span class="pl-v">this</span>.contentHash),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentLength<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contentLength<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contentLength<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">5</span>),a.writeI32(<span class="pl-v">this</span>.contentLength),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.created<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.created<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>created<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">6</span>),a.writeI64(<span class="pl-v">this</span>.created),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">7</span>),a.writeI64(<span class="pl-v">this</span>.updated),</td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deleted<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deleted<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deleted<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">8</span>),a.writeI64(<span class="pl-v">this</span>.deleted),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.active<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.active<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>active<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">9</span>),a.writeBool(<span class="pl-v">this</span>.active),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">10</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code js-file-line"><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">11</span>),a.writeString(<span class="pl-v">this</span>.notebookGuid),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagGuids<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagGuids){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tagGuids<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">12</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.tagGuids.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.tagGuids)<span class="pl-v">this</span>.tagGuids.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.tagGuids[c],a.writeString(c));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resources<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.resources){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code js-file-line"><span class="pl-c1">13</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.resources.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.resources)<span class="pl-v">this</span>.resources.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.resources[b],b.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">attributes</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>attributes<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">14</span>),<span class="pl-v">this</span>.<span class="pl-sc">attributes</span>.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagNames<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.tagNames){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>tagNames<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">15</span>);a.writeListBegin(Thrift.Type.STRING,<span class="pl-v">this</span>.tagNames.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> d <span class="pl-k">in</span> <span class="pl-v">this</span>.tagNames)<span class="pl-v">this</span>.tagNames.hasOwnProperty(d)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code js-file-line">(d<span class="pl-k">=</span><span class="pl-v">this</span>.tagNames[d],a.writeString(d));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">Publishing</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.publicDescription<span class="pl-k">=</span><span class="pl-v">this</span>.ascending<span class="pl-k">=</span><span class="pl-v">this</span>.order<span class="pl-k">=</span><span class="pl-v">this</span>.uri<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.uri<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.uri<span class="pl-k">=</span>a.uri),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.order<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.order<span class="pl-k">=</span>a.order),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.ascending<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.ascending<span class="pl-k">=</span>a.ascending),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.publicDescription<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.publicDescription<span class="pl-k">=</span>a.publicDescription))};<span class="pl-s3">Publishing</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code js-file-line"><span class="pl-s3">Publishing</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.uri<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.order<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.ascending<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.publicDescription<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code js-file-line"><span class="pl-s3">Publishing</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Publishing<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uri<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uri<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>uri<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.uri),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.order<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.order<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>order<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.order),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.ascending<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.ascending<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>ascending<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.ascending),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publicDescription<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publicDescription<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>publicDescription<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.publicDescription),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">BusinessNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.recommended<span class="pl-k">=</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span><span class="pl-v">this</span>.notebookDescription<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookDescription<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookDescription<span class="pl-k">=</span>a.notebookDescription),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.privilege<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.privilege),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recommended<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recommended<span class="pl-k">=</span>a.recommended))};</td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code js-file-line"><span class="pl-s3">BusinessNotebook</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">BusinessNotebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookDescription<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.recommended<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code js-file-line"><span class="pl-s3">BusinessNotebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>BusinessNotebook<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookDescription<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookDescription<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookDescription<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.notebookDescription),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>privilege<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.privilege),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recommended<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recommended<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recommended<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.recommended),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">SavedSearchScope</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.includeBusinessLinkedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.includePersonalLinkedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.includeAccount<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeAccount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeAccount<span class="pl-k">=</span>a.includeAccount),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includePersonalLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includePersonalLinkedNotebooks<span class="pl-k">=</span>a.includePersonalLinkedNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.includeBusinessLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.includeBusinessLinkedNotebooks<span class="pl-k">=</span>a.includeBusinessLinkedNotebooks))};</td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code js-file-line"><span class="pl-s3">SavedSearchScope</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">SavedSearchScope</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeAccount<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includePersonalLinkedNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.includeBusinessLinkedNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code js-file-line"><span class="pl-s3">SavedSearchScope</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SavedSearchScope<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeAccount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeAccount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeAccount<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">1</span>),a.writeBool(<span class="pl-v">this</span>.includeAccount),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includePersonalLinkedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includePersonalLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includePersonalLinkedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.includePersonalLinkedNotebooks),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeBusinessLinkedNotebooks<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.includeBusinessLinkedNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>includeBusinessLinkedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.includeBusinessLinkedNotebooks),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code js-file-line"><span class="pl-en">SavedSearch</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.<span class="pl-sc">scope</span><span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.format<span class="pl-k">=</span><span class="pl-v">this</span>.query<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.<span class="pl-sc">name</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.query<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.query<span class="pl-k">=</span>a.query),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.format<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.format<span class="pl-k">=</span>a.format),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">scope</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">scope</span><span class="pl-k">=</span>a.<span class="pl-sc">scope</span>))};<span class="pl-s3">SavedSearch</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code js-file-line"><span class="pl-s3">SavedSearch</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.query<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.format<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-sc">scope</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SavedSearchScope</span>,<span class="pl-v">this</span>.<span class="pl-sc">scope</span>.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code js-file-line"><span class="pl-s3">SavedSearch</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SavedSearch<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">name</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.query<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.query<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>query<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.query),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.format<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.format<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>format<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">4</span>),a.writeI32(<span class="pl-v">this</span>.format),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">5</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">scope</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">scope</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>scope<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">6</span>),<span class="pl-v">this</span>.<span class="pl-sc">scope</span>.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code js-file-line"><span class="pl-en">SharedNotebookRecipientSettings</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.reminderNotifyInApp<span class="pl-k">=</span><span class="pl-v">this</span>.reminderNotifyEmail<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.reminderNotifyEmail<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.reminderNotifyEmail<span class="pl-k">=</span>a.reminderNotifyEmail),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.reminderNotifyInApp<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.reminderNotifyInApp<span class="pl-k">=</span>a.reminderNotifyInApp))};<span class="pl-s3">SharedNotebookRecipientSettings</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code js-file-line"><span class="pl-s3">SharedNotebookRecipientSettings</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.reminderNotifyEmail<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.reminderNotifyInApp<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code js-file-line"><span class="pl-s3">SharedNotebookRecipientSettings</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SharedNotebookRecipientSettings<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderNotifyEmail<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderNotifyEmail<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>reminderNotifyEmail<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">1</span>),a.writeBool(<span class="pl-v">this</span>.reminderNotifyEmail),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderNotifyInApp<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.reminderNotifyInApp<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>reminderNotifyInApp<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.reminderNotifyInApp),a.writeFieldEnd());a.writeFieldStop();</td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code js-file-line">a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code js-file-line"><span class="pl-en">SharedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.recipientSettings<span class="pl-k">=</span><span class="pl-v">this</span>.allowPreview<span class="pl-k">=</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span><span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-v">this</span>.shareKey<span class="pl-k">=</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">=</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">=</span><span class="pl-v">this</span>.requireLogin<span class="pl-k">=</span><span class="pl-v">this</span>.notebookModifiable<span class="pl-k">=</span><span class="pl-v">this</span>.email<span class="pl-k">=</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span><span class="pl-v">this</span>.userId<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span>a.<span class="pl-sc">id</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userId<span class="pl-k">=</span>a.userId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookGuid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.notebookGuid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.email<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.email<span class="pl-k">=</span>a.email),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookModifiable<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookModifiable<span class="pl-k">=</span>a.notebookModifiable),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code js-file-line">a.requireLogin<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.requireLogin<span class="pl-k">=</span>a.requireLogin),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.serviceCreated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.serviceCreated<span class="pl-k">=</span>a.serviceCreated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.serviceUpdated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.serviceUpdated<span class="pl-k">=</span>a.serviceUpdated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shareKey<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shareKey<span class="pl-k">=</span>a.shareKey),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.privilege<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.privilege),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.allowPreview<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.allowPreview<span class="pl-k">=</span>a.allowPreview),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.recipientSettings<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.recipientSettings<span class="pl-k">=</span>a.recipientSettings))};<span class="pl-s3">SharedNotebook</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code js-file-line"><span class="pl-s3">SharedNotebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.userId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.email<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.notebookModifiable<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.requireLogin<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shareKey<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code js-file-line">Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.allowPreview<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.recipientSettings<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebookRecipientSettings</span>,<span class="pl-v">this</span>.recipientSettings.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code js-file-line"><span class="pl-s3">SharedNotebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>SharedNotebook<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">id</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.<span class="pl-sc">id</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">2</span>),a.writeI32(<span class="pl-v">this</span>.userId),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookGuid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookGuid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.notebookGuid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.email<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.email<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>email<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.email),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookModifiable<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookModifiable<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookModifiable<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.notebookModifiable),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.requireLogin<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.requireLogin<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>requireLogin<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.requireLogin),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>serviceCreated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">7</span>),a.writeI64(<span class="pl-v">this</span>.serviceCreated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>serviceUpdated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">10</span>),a.writeI64(<span class="pl-v">this</span>.serviceUpdated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareKey<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareKey<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shareKey<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">8</span>),a.writeString(<span class="pl-v">this</span>.shareKey),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code js-file-line"><span class="pl-c1">9</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>privilege<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">11</span>),a.writeI32(<span class="pl-v">this</span>.privilege),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.allowPreview<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.allowPreview<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>allowPreview<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">12</span>),a.writeBool(<span class="pl-v">this</span>.allowPreview),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recipientSettings<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.recipientSettings<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>recipientSettings<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">13</span>),<span class="pl-v">this</span>.recipientSettings.<span class="pl-s3">write</span>(a),</td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code js-file-line">a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code js-file-line"><span class="pl-en">NotebookRestrictions</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.expungeWhichSharedNotebookRestrictions<span class="pl-k">=</span><span class="pl-v">this</span>.updateWhichSharedNotebookRestrictions<span class="pl-k">=</span><span class="pl-v">this</span>.noCreateSharedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.noSetParentTag<span class="pl-k">=</span><span class="pl-v">this</span>.noExpungeTags<span class="pl-k">=</span><span class="pl-v">this</span>.noUpdateTags<span class="pl-k">=</span><span class="pl-v">this</span>.noCreateTags<span class="pl-k">=</span><span class="pl-v">this</span>.noPublishToBusinessLibrary<span class="pl-k">=</span><span class="pl-v">this</span>.noPublishToPublic<span class="pl-k">=</span><span class="pl-v">this</span>.noSetNotebookStack<span class="pl-k">=</span><span class="pl-v">this</span>.noSetDefaultNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.noExpungeNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.noUpdateNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.noSendMessageToRecipients<span class="pl-k">=</span><span class="pl-v">this</span>.noEmailNotes<span class="pl-k">=</span><span class="pl-v">this</span>.noShareNotes<span class="pl-k">=</span><span class="pl-v">this</span>.noExpungeNotes<span class="pl-k">=</span><span class="pl-v">this</span>.noUpdateNotes<span class="pl-k">=</span><span class="pl-v">this</span>.noCreateNotes<span class="pl-k">=</span><span class="pl-v">this</span>.noReadNotes<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code js-file-line"><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noReadNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noReadNotes<span class="pl-k">=</span>a.noReadNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noCreateNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noCreateNotes<span class="pl-k">=</span>a.noCreateNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noUpdateNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noUpdateNotes<span class="pl-k">=</span>a.noUpdateNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noExpungeNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noExpungeNotes<span class="pl-k">=</span>a.noExpungeNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noShareNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noShareNotes<span class="pl-k">=</span>a.noShareNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noEmailNotes<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noEmailNotes<span class="pl-k">=</span>a.noEmailNotes),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noSendMessageToRecipients<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noSendMessageToRecipients<span class="pl-k">=</span>a.noSendMessageToRecipients),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noUpdateNotebook<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code js-file-line">(<span class="pl-v">this</span>.noUpdateNotebook<span class="pl-k">=</span>a.noUpdateNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noExpungeNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noExpungeNotebook<span class="pl-k">=</span>a.noExpungeNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noSetDefaultNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noSetDefaultNotebook<span class="pl-k">=</span>a.noSetDefaultNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noSetNotebookStack<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noSetNotebookStack<span class="pl-k">=</span>a.noSetNotebookStack),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noPublishToPublic<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noPublishToPublic<span class="pl-k">=</span>a.noPublishToPublic),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noPublishToBusinessLibrary<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noPublishToBusinessLibrary<span class="pl-k">=</span>a.noPublishToBusinessLibrary),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noCreateTags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noCreateTags<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code js-file-line">a.noCreateTags),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noUpdateTags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noUpdateTags<span class="pl-k">=</span>a.noUpdateTags),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noExpungeTags<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noExpungeTags<span class="pl-k">=</span>a.noExpungeTags),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noSetParentTag<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noSetParentTag<span class="pl-k">=</span>a.noSetParentTag),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noCreateSharedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noCreateSharedNotebooks<span class="pl-k">=</span>a.noCreateSharedNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateWhichSharedNotebookRestrictions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateWhichSharedNotebookRestrictions<span class="pl-k">=</span>a.updateWhichSharedNotebookRestrictions),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expungeWhichSharedNotebookRestrictions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expungeWhichSharedNotebookRestrictions<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code js-file-line">a.expungeWhichSharedNotebookRestrictions))};<span class="pl-s3">NotebookRestrictions</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code js-file-line"><span class="pl-s3">NotebookRestrictions</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noReadNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noCreateNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noUpdateNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noExpungeNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code js-file-line"><span class="pl-v">this</span>.noShareNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noEmailNotes<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noSendMessageToRecipients<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noUpdateNotebook<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noExpungeNotebook<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noSetDefaultNotebook<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code js-file-line"><span class="pl-v">this</span>.noSetNotebookStack<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noPublishToPublic<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noPublishToBusinessLibrary<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noCreateTags<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">15</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noUpdateTags<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noExpungeTags<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code js-file-line"><span class="pl-v">this</span>.noSetParentTag<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">18</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.noCreateSharedNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">19</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateWhichSharedNotebookRestrictions<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">20</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.expungeWhichSharedNotebookRestrictions<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code js-file-line"><span class="pl-s3">NotebookRestrictions</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NotebookRestrictions<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noReadNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noReadNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noReadNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">1</span>),a.writeBool(<span class="pl-v">this</span>.noReadNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noCreateNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noCreateNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noCreateNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">2</span>),a.writeBool(<span class="pl-v">this</span>.noCreateNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noUpdateNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noUpdateNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noUpdateNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,</td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeBool(<span class="pl-v">this</span>.noUpdateNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noExpungeNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noExpungeNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noExpungeNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.noExpungeNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noShareNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noShareNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noShareNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.noShareNotes),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noEmailNotes<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noEmailNotes<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noEmailNotes<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.noEmailNotes),</td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSendMessageToRecipients<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSendMessageToRecipients<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noSendMessageToRecipients<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.noSendMessageToRecipients),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noUpdateNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noUpdateNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noUpdateNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.noUpdateNotebook),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noExpungeNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noExpungeNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noExpungeNotebook<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">9</span>),a.writeBool(<span class="pl-v">this</span>.noExpungeNotebook),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSetDefaultNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSetDefaultNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noSetDefaultNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">10</span>),a.writeBool(<span class="pl-v">this</span>.noSetDefaultNotebook),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSetNotebookStack<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSetNotebookStack<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noSetNotebookStack<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">11</span>),a.writeBool(<span class="pl-v">this</span>.noSetNotebookStack),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noPublishToPublic<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noPublishToPublic<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noPublishToPublic<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">12</span>),a.writeBool(<span class="pl-v">this</span>.noPublishToPublic),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noPublishToBusinessLibrary<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noPublishToBusinessLibrary<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noPublishToBusinessLibrary<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">13</span>),a.writeBool(<span class="pl-v">this</span>.noPublishToBusinessLibrary),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noCreateTags<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noCreateTags<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noCreateTags<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">14</span>),a.writeBool(<span class="pl-v">this</span>.noCreateTags),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noUpdateTags<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noUpdateTags<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noUpdateTags<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">15</span>),a.writeBool(<span class="pl-v">this</span>.noUpdateTags),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noExpungeTags<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noExpungeTags<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noExpungeTags<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">16</span>),a.writeBool(<span class="pl-v">this</span>.noExpungeTags),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSetParentTag<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noSetParentTag<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noSetParentTag<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">17</span>),a.writeBool(<span class="pl-v">this</span>.noSetParentTag),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noCreateSharedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code js-file-line"><span class="pl-v">this</span>.noCreateSharedNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noCreateSharedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">18</span>),a.writeBool(<span class="pl-v">this</span>.noCreateSharedNotebooks),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateWhichSharedNotebookRestrictions<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateWhichSharedNotebookRestrictions<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateWhichSharedNotebookRestrictions<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">19</span>),a.writeI32(<span class="pl-v">this</span>.updateWhichSharedNotebookRestrictions),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungeWhichSharedNotebookRestrictions<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expungeWhichSharedNotebookRestrictions<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expungeWhichSharedNotebookRestrictions<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">20</span>),a.writeI32(<span class="pl-v">this</span>.expungeWhichSharedNotebookRestrictions),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code js-file-line"><span class="pl-en">Notebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.restrictions<span class="pl-k">=</span><span class="pl-v">this</span>.contact<span class="pl-k">=</span><span class="pl-v">this</span>.businessNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.sharedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">=</span><span class="pl-v">this</span>.stack<span class="pl-k">=</span><span class="pl-v">this</span>.published<span class="pl-k">=</span><span class="pl-v">this</span>.publishing<span class="pl-k">=</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">=</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">=</span><span class="pl-v">this</span>.defaultNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.<span class="pl-sc">name</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.defaultNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.defaultNotebook<span class="pl-k">=</span>a.defaultNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.serviceCreated<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code js-file-line">(<span class="pl-v">this</span>.serviceCreated<span class="pl-k">=</span>a.serviceCreated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.serviceUpdated<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.serviceUpdated<span class="pl-k">=</span>a.serviceUpdated),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.publishing<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.publishing<span class="pl-k">=</span>a.publishing),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.published<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.published<span class="pl-k">=</span>a.published),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.stack<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.stack<span class="pl-k">=</span>a.stack),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sharedNotebookIds<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">=</span>a.sharedNotebookIds),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.sharedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.sharedNotebooks<span class="pl-k">=</span>a.sharedNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessNotebook<span class="pl-k">=</span>a.businessNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contact<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contact<span class="pl-k">=</span>a.contact),</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.restrictions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.restrictions<span class="pl-k">=</span>a.restrictions))};<span class="pl-s3">Notebook</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code js-file-line"><span class="pl-s3">Notebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.defaultNotebook<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code js-file-line">a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.publishing<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Publishing</span>,<span class="pl-v">this</span>.publishing.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.published<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.stack<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span>;</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code js-file-line"><span class="pl-v">this</span>.sharedNotebookIds.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">14</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.sharedNotebooks<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b)d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">SharedNotebook</span>,d.read(a),<span class="pl-v">this</span>.sharedNotebooks.<span class="pl-s3">push</span>(d);a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">15</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.businessNotebook<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BusinessNotebook</span>,<span class="pl-v">this</span>.businessNotebook.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">16</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.contact<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">User</span>,<span class="pl-v">this</span>.contact.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">17</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code js-file-line">(<span class="pl-v">this</span>.restrictions<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">NotebookRestrictions</span>,<span class="pl-v">this</span>.restrictions.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code js-file-line"><span class="pl-s3">Notebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>Notebook<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">name</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">5</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.defaultNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>defaultNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.defaultNotebook),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceCreated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>serviceCreated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">7</span>),a.writeI64(<span class="pl-v">this</span>.serviceCreated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceUpdated<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>serviceUpdated<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">8</span>),a.writeI64(<span class="pl-v">this</span>.serviceUpdated),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code js-file-line"><span class="pl-v">this</span>.publishing<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publishing<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>publishing<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">10</span>),<span class="pl-v">this</span>.publishing.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.published<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.published<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>published<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">11</span>),a.writeBool(<span class="pl-v">this</span>.published),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stack<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stack<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>stack<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">12</span>),a.writeString(<span class="pl-v">this</span>.stack),a.writeFieldEnd());<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebookIds<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebookIds){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sharedNotebookIds<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code js-file-line">Thrift.Type.LIST,<span class="pl-c1">13</span>);a.writeListBegin(Thrift.Type.I64,<span class="pl-v">this</span>.sharedNotebookIds.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.sharedNotebookIds)<span class="pl-v">this</span>.sharedNotebookIds.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.sharedNotebookIds[c],a.writeI64(c));a.writeListEnd();a.writeFieldEnd()}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.sharedNotebooks){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>sharedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">14</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.sharedNotebooks.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> b <span class="pl-k">in</span> <span class="pl-v">this</span>.sharedNotebooks)<span class="pl-v">this</span>.sharedNotebooks.hasOwnProperty(b)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code js-file-line">(b<span class="pl-k">=</span><span class="pl-v">this</span>.sharedNotebooks[b],b.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">15</span>),<span class="pl-v">this</span>.businessNotebook.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contact<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contact<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contact<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">16</span>),<span class="pl-v">this</span>.contact.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.restrictions<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.restrictions<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>restrictions<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">17</span>),<span class="pl-v">this</span>.restrictions.<span class="pl-s3">write</span>(a),</td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code js-file-line">a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code js-file-line"><span class="pl-en">LinkedNotebook</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.businessId<span class="pl-k">=</span><span class="pl-v">this</span>.stack<span class="pl-k">=</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-v">this</span>.uri<span class="pl-k">=</span><span class="pl-v">this</span>.shareKey<span class="pl-k">=</span><span class="pl-v">this</span>.shardId<span class="pl-k">=</span><span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-v">this</span>.shareName<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shareName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shareName<span class="pl-k">=</span>a.shareName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shardId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shardId<span class="pl-k">=</span>a.shardId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shareKey<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shareKey<span class="pl-k">=</span>a.shareKey),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.uri<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.uri<span class="pl-k">=</span>a.uri),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code js-file-line">a.updateSequenceNum),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteStoreUrl<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span>a.noteStoreUrl),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.webApiUrlPrefix<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span>a.webApiUrlPrefix),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.stack<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.stack<span class="pl-k">=</span>a.stack),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.businessId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.businessId<span class="pl-k">=</span>a.businessId))};<span class="pl-s3">LinkedNotebook</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code js-file-line"><span class="pl-s3">LinkedNotebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shareName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shardId<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shareKey<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.uri<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code js-file-line">a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.stack<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.businessId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code js-file-line"><span class="pl-s3">LinkedNotebook</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>LinkedNotebook<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shareName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.shareName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shardId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shardId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shardId<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.shardId),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareKey<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shareKey<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shareKey<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">5</span>),a.writeString(<span class="pl-v">this</span>.shareKey),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uri<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.uri<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>uri<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.uri),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">7</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.updateSequenceNum<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>updateSequenceNum<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code js-file-line">Thrift.Type.I32,<span class="pl-c1">8</span>),a.writeI32(<span class="pl-v">this</span>.updateSequenceNum),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteStoreUrl<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">9</span>),a.writeString(<span class="pl-v">this</span>.noteStoreUrl),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>webApiUrlPrefix<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">10</span>),a.writeString(<span class="pl-v">this</span>.webApiUrlPrefix),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stack<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.stack<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>stack<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">11</span>),a.writeString(<span class="pl-v">this</span>.stack),</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code js-file-line">a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.businessId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>businessId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">12</span>),a.writeI32(<span class="pl-v">this</span>.businessId),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code js-file-line"><span class="pl-en">NotebookDescriptor</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.joinedUserCount<span class="pl-k">=</span><span class="pl-v">this</span>.hasSharedNotebook<span class="pl-k">=</span><span class="pl-v">this</span>.contactName<span class="pl-k">=</span><span class="pl-v">this</span>.notebookDisplayName<span class="pl-k">=</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.guid<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.guid),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notebookDisplayName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notebookDisplayName<span class="pl-k">=</span>a.notebookDisplayName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.contactName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.contactName<span class="pl-k">=</span>a.contactName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.hasSharedNotebook<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.hasSharedNotebook<span class="pl-k">=</span>a.hasSharedNotebook),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.joinedUserCount<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.joinedUserCount<span class="pl-k">=</span>a.joinedUserCount))};<span class="pl-s3">NotebookDescriptor</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code js-file-line"><span class="pl-s3">NotebookDescriptor</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.guid<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.notebookDisplayName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.contactName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.hasSharedNotebook<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code js-file-line"><span class="pl-v">this</span>.joinedUserCount<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code js-file-line"><span class="pl-s3">NotebookDescriptor</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>NotebookDescriptor<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.guid<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>guid<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.guid),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookDisplayName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notebookDisplayName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notebookDisplayName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.notebookDisplayName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contactName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.contactName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>contactName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.contactName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.hasSharedNotebook<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.hasSharedNotebook<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>hasSharedNotebook<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">4</span>),a.writeBool(<span class="pl-v">this</span>.hasSharedNotebook),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.joinedUserCount<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.joinedUserCount<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>joinedUserCount<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">5</span>),a.writeI32(<span class="pl-v">this</span>.joinedUserCount),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code js-file-line"><span class="pl-en">UserStore_checkVersion_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.clientName<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.edamVersionMajor<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.edamVersionMinor<span class="pl-k">=</span><span class="pl-c1">25</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.clientName<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.clientName<span class="pl-k">=</span>a.clientName),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.edamVersionMajor<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.edamVersionMajor<span class="pl-k">=</span>a.edamVersionMajor),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.edamVersionMinor<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.edamVersionMinor<span class="pl-k">=</span>a.edamVersionMinor))};<span class="pl-s3">UserStore_checkVersion_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code js-file-line"><span class="pl-s3">UserStore_checkVersion_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.clientName<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I16<span class="pl-k">?</span><span class="pl-v">this</span>.edamVersionMajor<span class="pl-k">=</span>a.readI16().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I16<span class="pl-k">?</span><span class="pl-v">this</span>.edamVersionMinor<span class="pl-k">=</span>a.readI16().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code js-file-line"><span class="pl-s3">UserStore_checkVersion_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_checkVersion_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clientName<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.clientName<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>clientName<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.clientName),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.edamVersionMajor<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.edamVersionMajor<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>edamVersionMajor<span class="pl-pds">&quot;</span></span>,Thrift.Type.I16,<span class="pl-c1">2</span>),a.writeI16(<span class="pl-v">this</span>.edamVersionMajor),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.edamVersionMinor<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.edamVersionMinor<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>edamVersionMinor<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code js-file-line">Thrift.Type.I16,<span class="pl-c1">3</span>),a.writeI16(<span class="pl-v">this</span>.edamVersionMinor),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_checkVersion_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success)};<span class="pl-s3">UserStore_checkVersion_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code js-file-line"><span class="pl-s3">UserStore_checkVersion_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code js-file-line"><span class="pl-s3">UserStore_checkVersion_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_checkVersion_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">0</span>),a.writeBool(<span class="pl-v">this</span>.success),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_getBootstrapInfo_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.locale<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.locale<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.locale<span class="pl-k">=</span>a.locale)};<span class="pl-s3">UserStore_getBootstrapInfo_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code js-file-line"><span class="pl-s3">UserStore_getBootstrapInfo_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.locale<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code js-file-line"><span class="pl-s3">UserStore_getBootstrapInfo_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getBootstrapInfo_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.locale<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.locale<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>locale<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.locale),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_getBootstrapInfo_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success)};<span class="pl-s3">UserStore_getBootstrapInfo_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code js-file-line"><span class="pl-s3">UserStore_getBootstrapInfo_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BootstrapInfo</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code js-file-line"><span class="pl-s3">UserStore_getBootstrapInfo_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getBootstrapInfo_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code js-file-line"><span class="pl-en">UserStore_authenticate_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">=</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">=</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">=</span><span class="pl-v">this</span>.password<span class="pl-k">=</span><span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.password<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.password<span class="pl-k">=</span>a.password),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.consumerKey<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.consumerKey<span class="pl-k">=</span>a.consumerKey),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.consumerSecret<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.consumerSecret<span class="pl-k">=</span>a.consumerSecret),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.supportsTwoFactor<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">=</span>a.supportsTwoFactor))};<span class="pl-s3">UserStore_authenticate_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticate_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.password<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code js-file-line"><span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticate_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_authenticate_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.password<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.password<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>password<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.password),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>consumerKey<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.consumerKey),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>consumerSecret<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.consumerSecret),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>supportsTwoFactor<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.supportsTwoFactor),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code js-file-line"><span class="pl-en">UserStore_authenticate_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_authenticate_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticate_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code js-file-line"><span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticate_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_authenticate_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code js-file-line"><span class="pl-en">UserStore_authenticateLongSession_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">=</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">=</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">=</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">=</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">=</span><span class="pl-v">this</span>.password<span class="pl-k">=</span><span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.password<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.password<span class="pl-k">=</span>a.password),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.consumerKey<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.consumerKey<span class="pl-k">=</span>a.consumerKey),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.consumerSecret<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.consumerSecret<span class="pl-k">=</span>a.consumerSecret),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deviceIdentifier<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">=</span>a.deviceIdentifier),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deviceDescription<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code js-file-line">(<span class="pl-v">this</span>.deviceDescription<span class="pl-k">=</span>a.deviceDescription),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.supportsTwoFactor<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">=</span>a.supportsTwoFactor))};<span class="pl-s3">UserStore_authenticateLongSession_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateLongSession_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.password<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code js-file-line">Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateLongSession_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_authenticateLongSession_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.password<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.password<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>password<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.password),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerKey<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>consumerKey<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.consumerKey),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.consumerSecret<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>consumerSecret<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.consumerSecret),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deviceIdentifier<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">5</span>),a.writeString(<span class="pl-v">this</span>.deviceIdentifier),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deviceDescription<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code js-file-line">Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.deviceDescription),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.supportsTwoFactor<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>supportsTwoFactor<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.supportsTwoFactor),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code js-file-line"><span class="pl-en">UserStore_authenticateLongSession_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_authenticateLongSession_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateLongSession_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateLongSession_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_authenticateLongSession_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code js-file-line"><span class="pl-en">UserStore_completeTwoFactorAuthentication_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.deviceDescription<span class="pl-k">=</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">=</span><span class="pl-v">this</span>.oneTimeCode<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.oneTimeCode<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.oneTimeCode<span class="pl-k">=</span>a.oneTimeCode),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deviceIdentifier<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">=</span>a.deviceIdentifier),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.deviceDescription<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.deviceDescription<span class="pl-k">=</span>a.deviceDescription))};<span class="pl-s3">UserStore_completeTwoFactorAuthentication_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code js-file-line"><span class="pl-s3">UserStore_completeTwoFactorAuthentication_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.oneTimeCode<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code js-file-line"><span class="pl-s3">UserStore_completeTwoFactorAuthentication_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_completeTwoFactorAuthentication_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.oneTimeCode<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.oneTimeCode<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>oneTimeCode<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.oneTimeCode),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceIdentifier<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deviceIdentifier<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.deviceIdentifier),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.deviceDescription<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>deviceDescription<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.deviceDescription),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code js-file-line"><span class="pl-en">UserStore_completeTwoFactorAuthentication_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_completeTwoFactorAuthentication_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code js-file-line"><span class="pl-s3">UserStore_completeTwoFactorAuthentication_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code js-file-line"><span class="pl-s3">UserStore_completeTwoFactorAuthentication_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_completeTwoFactorAuthentication_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_revokeLongSession_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">UserStore_revokeLongSession_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code js-file-line"><span class="pl-s3">UserStore_revokeLongSession_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code js-file-line"><span class="pl-s3">UserStore_revokeLongSession_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_revokeLongSession_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code js-file-line"><span class="pl-en">UserStore_revokeLongSession_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_revokeLongSession_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code js-file-line"><span class="pl-s3">UserStore_revokeLongSession_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code js-file-line"><span class="pl-s3">UserStore_revokeLongSession_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_revokeLongSession_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code js-file-line"><span class="pl-en">UserStore_authenticateToBusiness_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">UserStore_authenticateToBusiness_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">UserStore_authenticateToBusiness_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateToBusiness_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_authenticateToBusiness_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code js-file-line"><span class="pl-en">UserStore_authenticateToBusiness_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_authenticateToBusiness_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateToBusiness_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code js-file-line"><span class="pl-s3">UserStore_authenticateToBusiness_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_authenticateToBusiness_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_refreshAuthentication_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">UserStore_refreshAuthentication_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code js-file-line"><span class="pl-s3">UserStore_refreshAuthentication_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code js-file-line"><span class="pl-s3">UserStore_refreshAuthentication_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_refreshAuthentication_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code js-file-line"><span class="pl-en">UserStore_refreshAuthentication_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_refreshAuthentication_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code js-file-line"><span class="pl-s3">UserStore_refreshAuthentication_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AuthenticationResult</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code js-file-line"><span class="pl-s3">UserStore_refreshAuthentication_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_refreshAuthentication_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_getUser_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">UserStore_getUser_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code js-file-line"><span class="pl-s3">UserStore_getUser_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code js-file-line"><span class="pl-s3">UserStore_getUser_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getUser_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code js-file-line"><span class="pl-en">UserStore_getUser_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_getUser_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code js-file-line"><span class="pl-s3">UserStore_getUser_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">User</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code js-file-line"><span class="pl-s3">UserStore_getUser_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getUser_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code js-file-line"><span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_getPublicUserInfo_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username)};<span class="pl-s3">UserStore_getPublicUserInfo_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPublicUserInfo_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPublicUserInfo_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getPublicUserInfo_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code js-file-line"><span class="pl-en">UserStore_getPublicUserInfo_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMNotFoundException<span class="pl-k">?</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.notFoundException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span>a.notFoundException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code js-file-line">(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException))};<span class="pl-s3">UserStore_getPublicUserInfo_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPublicUserInfo_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">PublicUserInfo</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.notFoundException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMNotFoundException</span>,<span class="pl-v">this</span>.notFoundException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPublicUserInfo_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getPublicUserInfo_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.notFoundException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>notFoundException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.notFoundException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">3</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_getPremiumInfo_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">UserStore_getPremiumInfo_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPremiumInfo_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPremiumInfo_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getPremiumInfo_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code js-file-line"><span class="pl-en">UserStore_getPremiumInfo_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_getPremiumInfo_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPremiumInfo_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">PremiumInfo</span>,<span class="pl-v">this</span>.success.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code js-file-line"><span class="pl-s3">UserStore_getPremiumInfo_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getPremiumInfo_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">0</span>),<span class="pl-v">this</span>.success.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStore_getNoteStoreUrl_args</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken)};<span class="pl-s3">UserStore_getNoteStoreUrl_args</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code js-file-line"><span class="pl-s3">UserStore_getNoteStoreUrl_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code js-file-line"><span class="pl-s3">UserStore_getNoteStoreUrl_args</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getNoteStoreUrl_args<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code js-file-line"><span class="pl-en">UserStore_getNoteStoreUrl_result</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-v">this</span>.success<span class="pl-k">=</span><span class="pl-c1">null</span>;a <span class="pl-k">instanceof</span> EDAMUserException<span class="pl-k">?</span><span class="pl-v">this</span>.userException<span class="pl-k">=</span>a<span class="pl-k">:</span>a <span class="pl-k">instanceof</span> EDAMSystemException<span class="pl-k">?</span><span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a<span class="pl-k">:</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.success<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.success<span class="pl-k">=</span>a.success),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span>a.userException),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.systemException<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span>a.systemException))};<span class="pl-s3">UserStore_getNoteStoreUrl_result</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code js-file-line"><span class="pl-s3">UserStore_getNoteStoreUrl_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.success<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.userException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMUserException</span>,<span class="pl-v">this</span>.userException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.systemException<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">EDAMSystemException</span>,<span class="pl-v">this</span>.systemException.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code js-file-line"><span class="pl-s3">UserStore_getNoteStoreUrl_result</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>UserStore_getNoteStoreUrl_result<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.success<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>success<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">0</span>),a.writeString(<span class="pl-v">this</span>.success),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userException<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.userException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.systemException<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>systemException<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code js-file-line">Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.systemException.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">UserStoreClient</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.<span class="pl-sc">input</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.output<span class="pl-k">=!</span>c<span class="pl-k">?</span>a<span class="pl-k">:</span>c;<span class="pl-v">this</span>.seqid<span class="pl-k">=</span><span class="pl-c1">0</span>};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">checkVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_checkVersion(a,c,b),<span class="pl-v">this</span>.recv_checkVersion();<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.send_checkVersion(a,c,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,e,arguments,<span class="pl-v">this</span>.recv_checkVersion)};</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_checkVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>checkVersion<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_checkVersion_args</span>;e.clientName<span class="pl-k">=</span>a;e.edamVersionMajor<span class="pl-k">=</span>c;e.edamVersionMinor<span class="pl-k">=</span>b;e.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(d)};</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_checkVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_checkVersion_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>checkVersion failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getBootstrapInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getBootstrapInfo(a),<span class="pl-v">this</span>.recv_getBootstrapInfo();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getBootstrapInfo(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getBootstrapInfo)};</td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getBootstrapInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getBootstrapInfo<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getBootstrapInfo_args</span>;b.locale<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getBootstrapInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getBootstrapInfo_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getBootstrapInfo failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">authenticate</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_authenticate(a,c,b,d,e),<span class="pl-v">this</span>.recv_authenticate();<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.send_authenticate(a,c,b,d,e,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,g,arguments,<span class="pl-v">this</span>.recv_authenticate)};</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_authenticate</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticate<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_authenticate_args</span>;g.username<span class="pl-k">=</span>a;g.password<span class="pl-k">=</span>c;g.consumerKey<span class="pl-k">=</span>b;g.consumerSecret<span class="pl-k">=</span>d;g.supportsTwoFactor<span class="pl-k">=</span>e;g.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(f)};</td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_authenticate</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_authenticate_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>authenticate failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">authenticateLongSession</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>h)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_authenticateLongSession(a,c,b,d,e,f,g),<span class="pl-v">this</span>.recv_authenticateLongSession();<span class="pl-s">var</span> j<span class="pl-k">=</span><span class="pl-v">this</span>.send_authenticateLongSession(a,c,b,d,e,f,g,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,j,arguments,<span class="pl-v">this</span>.recv_authenticateLongSession)};</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_authenticateLongSession</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">h</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateLongSession<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> j<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_authenticateLongSession_args</span>;j.username<span class="pl-k">=</span>a;j.password<span class="pl-k">=</span>c;j.consumerKey<span class="pl-k">=</span>b;j.consumerSecret<span class="pl-k">=</span>d;j.deviceIdentifier<span class="pl-k">=</span>e;j.deviceDescription<span class="pl-k">=</span>f;j.supportsTwoFactor<span class="pl-k">=</span>g;j.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(h)};</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_authenticateLongSession</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_authenticateLongSession_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateLongSession failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code js-file-line">};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">completeTwoFactorAuthentication</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_completeTwoFactorAuthentication(a,c,b,d),<span class="pl-v">this</span>.recv_completeTwoFactorAuthentication();<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.send_completeTwoFactorAuthentication(a,c,b,d,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,f,arguments,<span class="pl-v">this</span>.recv_completeTwoFactorAuthentication)};</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_completeTwoFactorAuthentication</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">d</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>completeTwoFactorAuthentication<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_completeTwoFactorAuthentication_args</span>;f.authenticationToken<span class="pl-k">=</span>a;f.oneTimeCode<span class="pl-k">=</span>c;f.deviceIdentifier<span class="pl-k">=</span>b;f.deviceDescription<span class="pl-k">=</span>d;f.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(e)};</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_completeTwoFactorAuthentication</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_completeTwoFactorAuthentication_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>completeTwoFactorAuthentication failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code js-file-line">};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">revokeLongSession</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-v">this</span>.send_revokeLongSession(a),<span class="pl-v">this</span>.recv_revokeLongSession();<span class="pl-k">else</span>{<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_revokeLongSession(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_revokeLongSession)}};</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_revokeLongSession</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>revokeLongSession<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_revokeLongSession_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_revokeLongSession</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_revokeLongSession_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;};</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">authenticateToBusiness</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_authenticateToBusiness(a),<span class="pl-v">this</span>.recv_authenticateToBusiness();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_authenticateToBusiness(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_authenticateToBusiness)};</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_authenticateToBusiness</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateToBusiness<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_authenticateToBusiness_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_authenticateToBusiness</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_authenticateToBusiness_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>authenticateToBusiness failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code js-file-line">};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">refreshAuthentication</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_refreshAuthentication(a),<span class="pl-v">this</span>.recv_refreshAuthentication();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_refreshAuthentication(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_refreshAuthentication)};</td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_refreshAuthentication</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>refreshAuthentication<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_refreshAuthentication_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_refreshAuthentication</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_refreshAuthentication_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>refreshAuthentication failed: unknown result<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code js-file-line">};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getUser</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getUser(a),<span class="pl-v">this</span>.recv_getUser();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getUser(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getUser)};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getUser</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getUser<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getUser_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getUser</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getUser_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getUser failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getPublicUserInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getPublicUserInfo(a),<span class="pl-v">this</span>.recv_getPublicUserInfo();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getPublicUserInfo(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getPublicUserInfo)};</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getPublicUserInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getPublicUserInfo<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getPublicUserInfo_args</span>;b.username<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getPublicUserInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getPublicUserInfo_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.notFoundException)<span class="pl-k">throw</span> a.notFoundException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code js-file-line"><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getPublicUserInfo failed: unknown result<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getPremiumInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getPremiumInfo(a),<span class="pl-v">this</span>.recv_getPremiumInfo();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getPremiumInfo(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getPremiumInfo)};</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getPremiumInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getPremiumInfo<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getPremiumInfo_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getPremiumInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getPremiumInfo_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getPremiumInfo failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">getNoteStoreUrl</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.send_getNoteStoreUrl(a),<span class="pl-v">this</span>.recv_getNoteStoreUrl();<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.send_getNoteStoreUrl(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().<span class="pl-s3">send</span>(<span class="pl-v">this</span>,b,arguments,<span class="pl-v">this</span>.recv_getNoteStoreUrl)};</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">send_getNoteStoreUrl</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.output.writeMessageBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteStoreUrl<span class="pl-pds">&quot;</span></span>,Thrift.MessageType.CALL,<span class="pl-v">this</span>.seqid);<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getNoteStoreUrl_args</span>;b.authenticationToken<span class="pl-k">=</span>a;b.<span class="pl-s3">write</span>(<span class="pl-v">this</span>.output);<span class="pl-v">this</span>.output.writeMessageEnd();<span class="pl-k">return</span> <span class="pl-v">this</span>.output.getTransport().flush(c)};</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code js-file-line"><span class="pl-s3">UserStoreClient</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">recv_getNoteStoreUrl</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageBegin().mtype<span class="pl-k">==</span>Thrift.MessageType.EXCEPTION){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Thrift.TApplicationException</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">throw</span> a;}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">UserStore_getNoteStoreUrl_result</span>;a.read(<span class="pl-v">this</span>.<span class="pl-sc">input</span>);<span class="pl-v">this</span>.<span class="pl-sc">input</span>.readMessageEnd();<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.userException)<span class="pl-k">throw</span> a.userException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.systemException)<span class="pl-k">throw</span> a.systemException;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a.success)<span class="pl-k">return</span> a.success;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>getNoteStoreUrl failed: unknown result<span class="pl-pds">&quot;</span></span>;};</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code js-file-line">EDAM_VERSION_MAJOR<span class="pl-k">=</span><span class="pl-c1">1</span>;EDAM_VERSION_MINOR<span class="pl-k">=</span><span class="pl-c1">25</span>;<span class="pl-en">PublicUserInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span><span class="pl-v">this</span>.username<span class="pl-k">=</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span><span class="pl-v">this</span>.shardId<span class="pl-k">=</span><span class="pl-v">this</span>.userId<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.userId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.userId<span class="pl-k">=</span>a.userId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.shardId<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.shardId<span class="pl-k">=</span>a.shardId),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.privilege<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.privilege),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.username<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.username<span class="pl-k">=</span>a.username),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteStoreUrl<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span>a.noteStoreUrl),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.webApiUrlPrefix<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span>a.webApiUrlPrefix))};</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code js-file-line"><span class="pl-s3">PublicUserInfo</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code js-file-line"><span class="pl-s3">PublicUserInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.userId<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.shardId<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I32<span class="pl-k">?</span><span class="pl-v">this</span>.privilege<span class="pl-k">=</span>a.readI32().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.username<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code js-file-line">a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code js-file-line"><span class="pl-s3">PublicUserInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>PublicUserInfo<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.userId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>userId<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">1</span>),a.writeI32(<span class="pl-v">this</span>.userId),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shardId<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.shardId<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>shardId<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.shardId),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.privilege<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>privilege<span class="pl-pds">&quot;</span></span>,Thrift.Type.I32,<span class="pl-c1">3</span>),a.writeI32(<span class="pl-v">this</span>.privilege),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code js-file-line"><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.username<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>username<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.username),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteStoreUrl<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">5</span>),a.writeString(<span class="pl-v">this</span>.noteStoreUrl),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>webApiUrlPrefix<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.webApiUrlPrefix),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code js-file-line"><span class="pl-en">AuthenticationResult</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.secondFactorDeliveryHint<span class="pl-k">=</span><span class="pl-v">this</span>.secondFactorRequired<span class="pl-k">=</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span><span class="pl-v">this</span>.publicUserInfo<span class="pl-k">=</span><span class="pl-v">this</span>.user<span class="pl-k">=</span><span class="pl-v">this</span>.expiration<span class="pl-k">=</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.currentTime<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.currentTime),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.authenticationToken<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.authenticationToken),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.expiration<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.expiration<span class="pl-k">=</span>a.expiration),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.user<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.user<span class="pl-k">=</span>a.user),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.publicUserInfo<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.publicUserInfo<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code js-file-line">a.publicUserInfo),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.noteStoreUrl<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span>a.noteStoreUrl),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.webApiUrlPrefix<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span>a.webApiUrlPrefix),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.secondFactorRequired<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.secondFactorRequired<span class="pl-k">=</span>a.secondFactorRequired),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.secondFactorDeliveryHint<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.secondFactorDeliveryHint<span class="pl-k">=</span>a.secondFactorDeliveryHint))};<span class="pl-s3">AuthenticationResult</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code js-file-line"><span class="pl-s3">AuthenticationResult</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.currentTime<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.I64<span class="pl-k">?</span><span class="pl-v">this</span>.expiration<span class="pl-k">=</span>a.readI64().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.user<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">User</span>,<span class="pl-v">this</span>.user.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code js-file-line">(<span class="pl-v">this</span>.publicUserInfo<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">PublicUserInfo</span>,<span class="pl-v">this</span>.publicUserInfo.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.secondFactorRequired<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.secondFactorDeliveryHint<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code js-file-line"><span class="pl-s3">AuthenticationResult</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>AuthenticationResult<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.currentTime<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>currentTime<span class="pl-pds">&quot;</span></span>,Thrift.Type.I64,<span class="pl-c1">1</span>),a.writeI64(<span class="pl-v">this</span>.currentTime),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.authenticationToken<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>authenticationToken<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.authenticationToken),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expiration<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.expiration<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>expiration<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code js-file-line">Thrift.Type.I64,<span class="pl-c1">3</span>),a.writeI64(<span class="pl-v">this</span>.expiration),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.user<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.user<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">4</span>),<span class="pl-v">this</span>.user.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publicUserInfo<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.publicUserInfo<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>publicUserInfo<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">5</span>),<span class="pl-v">this</span>.publicUserInfo.<span class="pl-s3">write</span>(a),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.noteStoreUrl<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>noteStoreUrl<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">6</span>),a.writeString(<span class="pl-v">this</span>.noteStoreUrl),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.webApiUrlPrefix<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>webApiUrlPrefix<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">7</span>),a.writeString(<span class="pl-v">this</span>.webApiUrlPrefix),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.secondFactorRequired<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.secondFactorRequired<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>secondFactorRequired<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.secondFactorRequired),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.secondFactorDeliveryHint<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.secondFactorDeliveryHint<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>secondFactorDeliveryHint<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code js-file-line"><span class="pl-c1">9</span>),a.writeString(<span class="pl-v">this</span>.secondFactorDeliveryHint),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code js-file-line"><span class="pl-en">BootstrapSettings</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.enablePublicNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.enableLinkedInSharing<span class="pl-k">=</span><span class="pl-v">this</span>.enableTwitterSharing<span class="pl-k">=</span><span class="pl-v">this</span>.enableSponsoredAccounts<span class="pl-k">=</span><span class="pl-v">this</span>.enableSingleNoteSharing<span class="pl-k">=</span><span class="pl-v">this</span>.enableSharedNotebooks<span class="pl-k">=</span><span class="pl-v">this</span>.enableSupportTickets<span class="pl-k">=</span><span class="pl-v">this</span>.enableGiftSubscriptions<span class="pl-k">=</span><span class="pl-v">this</span>.enableFacebookSharing<span class="pl-k">=</span><span class="pl-v">this</span>.accountEmailDomain<span class="pl-k">=</span><span class="pl-v">this</span>.supportUrl<span class="pl-k">=</span><span class="pl-v">this</span>.marketingUrl<span class="pl-k">=</span><span class="pl-v">this</span>.serviceHost<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.serviceHost<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.serviceHost<span class="pl-k">=</span>a.serviceHost),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.marketingUrl<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.marketingUrl<span class="pl-k">=</span>a.marketingUrl),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.supportUrl<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code js-file-line">(<span class="pl-v">this</span>.supportUrl<span class="pl-k">=</span>a.supportUrl),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.accountEmailDomain<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.accountEmailDomain<span class="pl-k">=</span>a.accountEmailDomain),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableFacebookSharing<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableFacebookSharing<span class="pl-k">=</span>a.enableFacebookSharing),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableGiftSubscriptions<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableGiftSubscriptions<span class="pl-k">=</span>a.enableGiftSubscriptions),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableSupportTickets<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableSupportTickets<span class="pl-k">=</span>a.enableSupportTickets),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableSharedNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableSharedNotebooks<span class="pl-k">=</span>a.enableSharedNotebooks),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableSingleNoteSharing<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableSingleNoteSharing<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code js-file-line">a.enableSingleNoteSharing),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableSponsoredAccounts<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableSponsoredAccounts<span class="pl-k">=</span>a.enableSponsoredAccounts),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableTwitterSharing<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableTwitterSharing<span class="pl-k">=</span>a.enableTwitterSharing),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enableLinkedInSharing<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enableLinkedInSharing<span class="pl-k">=</span>a.enableLinkedInSharing),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.enablePublicNotebooks<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.enablePublicNotebooks<span class="pl-k">=</span>a.enablePublicNotebooks))};<span class="pl-s3">BootstrapSettings</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code js-file-line"><span class="pl-s3">BootstrapSettings</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.serviceHost<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.marketingUrl<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.supportUrl<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.accountEmailDomain<span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code js-file-line"><span class="pl-v">this</span>.enableFacebookSharing<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableGiftSubscriptions<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableSupportTickets<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableSharedNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableSingleNoteSharing<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableSponsoredAccounts<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);</td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">11</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableTwitterSharing<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enableLinkedInSharing<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.BOOL<span class="pl-k">?</span><span class="pl-v">this</span>.enablePublicNotebooks<span class="pl-k">=</span>a.readBool().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code js-file-line"><span class="pl-s3">BootstrapSettings</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>BootstrapSettings<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceHost<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.serviceHost<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>serviceHost<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.serviceHost),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.marketingUrl<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.marketingUrl<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>marketingUrl<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">2</span>),a.writeString(<span class="pl-v">this</span>.marketingUrl),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.supportUrl<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.supportUrl<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>supportUrl<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,</td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code js-file-line"><span class="pl-c1">3</span>),a.writeString(<span class="pl-v">this</span>.supportUrl),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.accountEmailDomain<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.accountEmailDomain<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>accountEmailDomain<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">4</span>),a.writeString(<span class="pl-v">this</span>.accountEmailDomain),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableFacebookSharing<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableFacebookSharing<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableFacebookSharing<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">5</span>),a.writeBool(<span class="pl-v">this</span>.enableFacebookSharing),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableGiftSubscriptions<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableGiftSubscriptions<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code js-file-line">(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableGiftSubscriptions<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">6</span>),a.writeBool(<span class="pl-v">this</span>.enableGiftSubscriptions),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSupportTickets<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSupportTickets<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableSupportTickets<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">7</span>),a.writeBool(<span class="pl-v">this</span>.enableSupportTickets),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSharedNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSharedNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableSharedNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">8</span>),a.writeBool(<span class="pl-v">this</span>.enableSharedNotebooks),a.writeFieldEnd());</td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSingleNoteSharing<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSingleNoteSharing<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableSingleNoteSharing<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">9</span>),a.writeBool(<span class="pl-v">this</span>.enableSingleNoteSharing),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSponsoredAccounts<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableSponsoredAccounts<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableSponsoredAccounts<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">10</span>),a.writeBool(<span class="pl-v">this</span>.enableSponsoredAccounts),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableTwitterSharing<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableTwitterSharing<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableTwitterSharing<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code js-file-line">Thrift.Type.BOOL,<span class="pl-c1">11</span>),a.writeBool(<span class="pl-v">this</span>.enableTwitterSharing),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableLinkedInSharing<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enableLinkedInSharing<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enableLinkedInSharing<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">12</span>),a.writeBool(<span class="pl-v">this</span>.enableLinkedInSharing),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enablePublicNotebooks<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.enablePublicNotebooks<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>enablePublicNotebooks<span class="pl-pds">&quot;</span></span>,Thrift.Type.BOOL,<span class="pl-c1">13</span>),a.writeBool(<span class="pl-v">this</span>.enablePublicNotebooks),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code js-file-line"><span class="pl-en">BootstrapProfile</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.settings<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.<span class="pl-sc">name</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.settings<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.settings<span class="pl-k">=</span>a.settings))};<span class="pl-s3">BootstrapProfile</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code js-file-line"><span class="pl-s3">BootstrapProfile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRING<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>a.readString().<span class="pl-sc">value</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>b<span class="pl-k">==</span>Thrift.Type.STRUCT<span class="pl-k">?</span>(<span class="pl-v">this</span>.settings<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BootstrapSettings</span>,<span class="pl-v">this</span>.settings.read(a))<span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code js-file-line"><span class="pl-s3">BootstrapProfile</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>BootstrapProfile<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRING,<span class="pl-c1">1</span>),a.writeString(<span class="pl-v">this</span>.<span class="pl-sc">name</span>),a.writeFieldEnd());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.settings<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.settings<span class="pl-k">&amp;&amp;</span>(a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>settings<span class="pl-pds">&quot;</span></span>,Thrift.Type.STRUCT,<span class="pl-c1">2</span>),<span class="pl-v">this</span>.settings.<span class="pl-s3">write</span>(a),a.writeFieldEnd());a.writeFieldStop();a.writeStructEnd()};<span class="pl-en">BootstrapInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.profiles<span class="pl-k">=</span><span class="pl-c1">null</span>;a<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a.profiles<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.profiles<span class="pl-k">=</span>a.profiles)};</td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code js-file-line"><span class="pl-s3">BootstrapInfo</span>.<span class="pl-sc">prototype</span><span class="pl-k">=</span>{};<span class="pl-s3">BootstrapInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">read</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(a.readStructBegin();;){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFieldBegin(),b<span class="pl-k">=</span>c.ftype;<span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.STOP)<span class="pl-k">break</span>;<span class="pl-k">switch</span>(c.fid){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">if</span>(b<span class="pl-k">==</span>Thrift.Type.LIST){c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.profiles<span class="pl-k">=</span>[];c<span class="pl-k">=</span>a.readListBegin().<span class="pl-sc">size</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;<span class="pl-k">++</span>b){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BootstrapProfile</span>;d.read(a);<span class="pl-v">this</span>.profiles.<span class="pl-s3">push</span>(d)}a.readListEnd()}<span class="pl-k">else</span> a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a.skip(b);<span class="pl-k">break</span>;<span class="pl-k">default</span><span class="pl-k">:</span>a.skip(b)}a.readFieldEnd()}a.readStructEnd()};</td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code js-file-line"><span class="pl-s3">BootstrapInfo</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">write</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){a.writeStructBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>BootstrapInfo<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-v">this</span>.profiles<span class="pl-k">&amp;&amp;void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-v">this</span>.profiles){a.writeFieldBegin(<span class="pl-s1"><span class="pl-pds">&quot;</span>profiles<span class="pl-pds">&quot;</span></span>,Thrift.Type.LIST,<span class="pl-c1">1</span>);a.writeListBegin(Thrift.Type.STRUCT,<span class="pl-v">this</span>.profiles.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c <span class="pl-k">in</span> <span class="pl-v">this</span>.profiles)<span class="pl-v">this</span>.profiles.hasOwnProperty(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.profiles[c],c.<span class="pl-s3">write</span>(a));a.writeListEnd();a.writeFieldEnd()}a.writeFieldStop();a.writeStructEnd()};</td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="https://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.15058s from github-fe135-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-153d6254b838872c8db73c8bd92905913f6f5b2164b7e40e5292286bd5a39403.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-341533e826e8eda6352720e2a6edded2591cc74f9a9a250fc1f9f2ded364ebee.js" type="text/javascript"></script>
      
      
  </body>
</html>

