{"text":"###服务器中的数据库\nRedis服务器将所有数据库保存在`redis.h/redisServer`结构的db数组中，db数组的每个项都是一个`redis.h/redisDb`结构，每个`redisDb`代表一个数据库：\n```C\nstruct redisServer {\n    redisDb *db; //保存所有数据库的数组\n    int     dbnum; //服务器数据库数量\n};\n```\n`dbnum`属性由服务器配置的database选项决定，默认值时16。\n通过`SELECT 2`实现切换目标数据库，通过改变客户端状态redisClient结构的db属性\n```C\ntypedef struct redisClient {\n    redisDb *db; //记录客户端正在使用的数据库\n}\n```\nRedis是一个键值对数据库，服务器中的每个数据库由`redisDb`结构表示，其中的dict字典保存了数据库中所有键值对，这个字典称为键空间。\n```C\ntypedef struct redisDb {\n    dict *dict;//数据库键空间，保存所有键值对\n    dict *expires;//保存设置过期时间的键值对\n}\n```\n\n添加新键：`SET date \"2014-1-1\"`  \n删除键：`DEL date`\n对键取值：`GET date`\n\n###过期时间设置和移除\n\n- `EXPIRE <key> <ttl>`将键key的生存时间设置为ttl秒\n- `PEXPIRE <key> <ttl>`将键key的生存时间设置为ttl毫秒\n- `EXPIREAT <key> <timestamp>`将键key的生存时间设置为timestamp所指定的秒数时间戳\n- `PEXPIREAT <key> <timestamp>`将键key的生存时间设置为timestamp所指定的毫秒数时间戳(前三个命令都是通过该命令实现的)\n\n移除过期时间：`PERSIST <key>`\n计算剩余生存时间：`TTL <key>`以秒为单位返回键的剩余生存时间(PTTL以毫秒为单位)\n\n过期键的删除策略，Redis中实际使用是惰性删除和定期删除\n\n- 定时删除：在设置过期时间同时创建一个定时器，定时删除策略可以保证过期键尽快删除；但其对CPU时间最不友好，此外创建一个定时器用到Redis服务器中的时间事件，而时间事件是用无序链表实现，查找一个事件复杂度为O(N)\n- 惰性删除：每次从键空间中取键时，都检查取得键是否过期，若过期则删除，否则直接返回；对CPU时间最友好但对内存不友好，过期键可能会长期占用内存\n- 定期删除：每隔一段时间执行一次删除过期键操作，并通过限制删除操作执行的时长和频率来减少对CPU时间的影响。\n\n**AOF、RDB和复制功能对过期键的处理**\n\n- 生成RDB文件：在执行SAVE或BGSAVE命令创建一个新的RDB文件时，已过期的键将不会保存到新创建的RDB文件中\n- 载入RDB文件：如果服务器以主服务器模式运行，在载入RDB文件时，文件中过期的键将会被忽略；如果服务器以从服务器模式运行，在载入RDB文件时，文件中所有的键都会被载入\n- AOF文件写入：当服务器以AOF持久化模式运行时，如果数据库中的某个键已过期，但还没有被清除，则AOF文件不会因为这个过期键产生任何影响；当过期键被清除时，程序会向AOF文件追加一条DEL命令显示记录该键已被删除。\n- AOF重写：在执行AOF重写时，过期的键将不会被保存到重写的AOF文件中\n- 复制：当服务器运行在复制模式下时，主服务器在删除一个过期键以后，会显示的向所有从服务器发送DEL命令，从服务器接到命令以后才会删除过期键；从服务器在执行客户端发送的命令时，即使遇到过期键也不会删除该过期键，而是继续处理。这种统一、中心化的过期键删除策略可以保证主从服务器数据的一致性。\n\n###数据库通知\n数据库通知是Redis2.8版本新增加功能，可以让客户端通过订阅给定频道或模式，来获知数据库中键的变化，以及数据库中命令执行情况。\n\n- 键空间通知(key-space notification)，某个键执行了什么命令\n- 键事件通知(key-event notification)，某个命令被什么键执行了\n\n发送数据库通知功能由`notify.c/notifyKeyspaceEvent`函数实现\n`void notfiyKeyspaceEvent(int type, char *event, robj *key, int dbid)`\n其中type参数是发送通知的类型，event属性为事件名称、key为产生事件的键、dbid为产生事件的数据库号码\n"}